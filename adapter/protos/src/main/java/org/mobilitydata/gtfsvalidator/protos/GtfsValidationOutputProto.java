/*
 * Copyright (c) 2020. MobilityData IO.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gtfs_validation.proto

package org.mobilitydata.gtfsvalidator.adapter.protos;

public final class GtfsValidationOutputProto {
    private GtfsValidationOutputProto() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistryLite registry) {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
        registerAllExtensions(
                (com.google.protobuf.ExtensionRegistryLite) registry);
    }

    public interface PointProtoOrBuilder extends
            // @@protoc_insertion_point(interface_extends:outputProto.PointProto)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional fixed32 lat_e7 = 1;</code>
         *
         * @return Whether the latE7 field is set.
         */
        boolean hasLatE7();

        /**
         * <code>optional fixed32 lat_e7 = 1;</code>
         *
         * @return The latE7.
         */
        int getLatE7();

        /**
         * <code>optional fixed32 lng_e7 = 2;</code>
         *
         * @return Whether the lngE7 field is set.
         */
        boolean hasLngE7();

        /**
         * <code>optional fixed32 lng_e7 = 2;</code>
         *
         * @return The lngE7.
         */
        int getLngE7();
    }

    /**
     * <pre>
     * Points are represented as latitude-longitude pairs in the E7
     * representation (degrees multiplied by 10**7 and rounded to the nearest
     * integer).  Latitudes should be in the range +/- 90 degrees and longitude
     * should be in the range +/- 180 degrees (inclusive).
     * </pre>
     * <p>
     * Protobuf type {@code outputProto.PointProto}
     */
    public static final class PointProto extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:outputProto.PointProto)
            PointProtoOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use PointProto.newBuilder() to construct.
        private PointProto(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private PointProto() {
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
                UnusedPrivateParameter unused) {
            return new PointProto();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private PointProto(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 13: {
                            bitField0_ |= 0x00000001;
                            latE7_ = input.readFixed32();
                            break;
                        }
                        case 21: {
                            bitField0_ |= 0x00000002;
                            lngE7_ = input.readFixed32();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_PointProto_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_PointProto_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.class, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder.class);
        }

        private int bitField0_;
        public static final int LAT_E7_FIELD_NUMBER = 1;
        private int latE7_;

        /**
         * <code>optional fixed32 lat_e7 = 1;</code>
         *
         * @return Whether the latE7 field is set.
         */
        public boolean hasLatE7() {
            return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         * <code>optional fixed32 lat_e7 = 1;</code>
         *
         * @return The latE7.
         */
        public int getLatE7() {
            return latE7_;
        }

        public static final int LNG_E7_FIELD_NUMBER = 2;
        private int lngE7_;

        /**
         * <code>optional fixed32 lng_e7 = 2;</code>
         *
         * @return Whether the lngE7 field is set.
         */
        public boolean hasLngE7() {
            return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         * <code>optional fixed32 lng_e7 = 2;</code>
         *
         * @return The lngE7.
         */
        public int getLngE7() {
            return lngE7_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) != 0)) {
                output.writeFixed32(1, latE7_);
            }
            if (((bitField0_ & 0x00000002) != 0)) {
                output.writeFixed32(2, lngE7_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(1, latE7_);
            }
            if (((bitField0_ & 0x00000002) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeFixed32Size(2, lngE7_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto)) {
                return super.equals(obj);
            }
            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto other = (org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto) obj;

            if (hasLatE7() != other.hasLatE7()) return false;
            if (hasLatE7()) {
                if (getLatE7()
                        != other.getLatE7()) return false;
            }
            if (hasLngE7() != other.hasLngE7()) return false;
            if (hasLngE7()) {
                if (getLngE7()
                        != other.getLngE7()) return false;
            }
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasLatE7()) {
                hash = (37 * hash) + LAT_E7_FIELD_NUMBER;
                hash = (53 * hash) + getLatE7();
            }
            if (hasLngE7()) {
                hash = (37 * hash) + LNG_E7_FIELD_NUMBER;
                hash = (53 * hash) + getLngE7();
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * Points are represented as latitude-longitude pairs in the E7
         * representation (degrees multiplied by 10**7 and rounded to the nearest
         * integer).  Latitudes should be in the range +/- 90 degrees and longitude
         * should be in the range +/- 180 degrees (inclusive).
         * </pre>
         * <p>
         * Protobuf type {@code outputProto.PointProto}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:outputProto.PointProto)
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_PointProto_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_PointProto_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.class, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder.class);
            }

            // Construct using org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                }
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                latE7_ = 0;
                bitField0_ = (bitField0_ & ~0x00000001);
                lngE7_ = 0;
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_PointProto_descriptor;
            }

            @java.lang.Override
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getDefaultInstanceForType() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance();
            }

            @java.lang.Override
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto build() {
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto buildPartial() {
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto result = new org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    result.latE7_ = latE7_;
                    to_bitField0_ |= 0x00000001;
                }
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    result.lngE7_ = lngE7_;
                    to_bitField0_ |= 0x00000002;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto) {
                    return mergeFrom((org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto other) {
                if (other == org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance())
                    return this;
                if (other.hasLatE7()) {
                    setLatE7(other.getLatE7());
                }
                if (other.hasLngE7()) {
                    setLngE7(other.getLngE7());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int latE7_;

            /**
             * <code>optional fixed32 lat_e7 = 1;</code>
             *
             * @return Whether the latE7 field is set.
             */
            public boolean hasLatE7() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <code>optional fixed32 lat_e7 = 1;</code>
             *
             * @return The latE7.
             */
            public int getLatE7() {
                return latE7_;
            }

            /**
             * <code>optional fixed32 lat_e7 = 1;</code>
             *
             * @param value The latE7 to set.
             * @return This builder for chaining.
             */
            public Builder setLatE7(int value) {
                bitField0_ |= 0x00000001;
                latE7_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional fixed32 lat_e7 = 1;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearLatE7() {
                bitField0_ = (bitField0_ & ~0x00000001);
                latE7_ = 0;
                onChanged();
                return this;
            }

            private int lngE7_;

            /**
             * <code>optional fixed32 lng_e7 = 2;</code>
             *
             * @return Whether the lngE7 field is set.
             */
            public boolean hasLngE7() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <code>optional fixed32 lng_e7 = 2;</code>
             *
             * @return The lngE7.
             */
            public int getLngE7() {
                return lngE7_;
            }

            /**
             * <code>optional fixed32 lng_e7 = 2;</code>
             *
             * @param value The lngE7 to set.
             * @return This builder for chaining.
             */
            public Builder setLngE7(int value) {
                bitField0_ |= 0x00000002;
                lngE7_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional fixed32 lng_e7 = 2;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearLngE7() {
                bitField0_ = (bitField0_ & ~0x00000002);
                lngE7_ = 0;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:outputProto.PointProto)
        }

        // @@protoc_insertion_point(class_scope:outputProto.PointProto)
        private static final org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto();
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<PointProto>
                PARSER = new com.google.protobuf.AbstractParser<PointProto>() {
            @java.lang.Override
            public PointProto parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new PointProto(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<PointProto> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<PointProto> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    public interface GtfsProblemOrBuilder extends
            // @@protoc_insertion_point(interface_extends:outputProto.GtfsProblem)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
         *
         * @return Whether the type field is set.
         */
        boolean hasType();

        /**
         * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
         *
         * @return The type.
         */
        org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type getType();

        /**
         * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
         *
         * @return Whether the severity field is set.
         */
        boolean hasSeverity();

        /**
         * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
         *
         * @return The severity.
         */
        org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity getSeverity();

        /**
         * <pre>
         * The name of the CSV file (eg. "stops.txt") where this problem occurred.
         * </pre>
         *
         * <code>optional string csv_file_name = 3;</code>
         *
         * @return Whether the csvFileName field is set.
         */
        boolean hasCsvFileName();

        /**
         * <pre>
         * The name of the CSV file (eg. "stops.txt") where this problem occurred.
         * </pre>
         *
         * <code>optional string csv_file_name = 3;</code>
         *
         * @return The csvFileName.
         */
        java.lang.String getCsvFileName();

        /**
         * <pre>
         * The name of the CSV file (eg. "stops.txt") where this problem occurred.
         * </pre>
         *
         * <code>optional string csv_file_name = 3;</code>
         *
         * @return The bytes for csvFileName.
         */
        com.google.protobuf.ByteString
        getCsvFileNameBytes();

        /**
         * <pre>
         * The name of a CSV key that is implicated in this problem.
         * </pre>
         *
         * <code>optional string csv_key_name = 4;</code>
         *
         * @return Whether the csvKeyName field is set.
         */
        boolean hasCsvKeyName();

        /**
         * <pre>
         * The name of a CSV key that is implicated in this problem.
         * </pre>
         *
         * <code>optional string csv_key_name = 4;</code>
         *
         * @return The csvKeyName.
         */
        java.lang.String getCsvKeyName();

        /**
         * <pre>
         * The name of a CSV key that is implicated in this problem.
         * </pre>
         *
         * <code>optional string csv_key_name = 4;</code>
         *
         * @return The bytes for csvKeyName.
         */
        com.google.protobuf.ByteString
        getCsvKeyNameBytes();

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @return A list containing the csvColumnName.
         */
        java.util.List<java.lang.String>
        getCsvColumnNameList();

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @return The count of csvColumnName.
         */
        int getCsvColumnNameCount();

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The csvColumnName at the given index.
         */
        java.lang.String getCsvColumnName(int index);

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the csvColumnName at the given index.
         */
        com.google.protobuf.ByteString
        getCsvColumnNameBytes(int index);

        /**
         * <pre>
         * The name of an additional CSV file (eg. "routes.txt") that is related to
         * this problem.
         * </pre>
         *
         * <code>optional string other_csv_file_name = 15;</code>
         *
         * @return Whether the otherCsvFileName field is set.
         */
        boolean hasOtherCsvFileName();

        /**
         * <pre>
         * The name of an additional CSV file (eg. "routes.txt") that is related to
         * this problem.
         * </pre>
         *
         * <code>optional string other_csv_file_name = 15;</code>
         *
         * @return The otherCsvFileName.
         */
        java.lang.String getOtherCsvFileName();

        /**
         * <pre>
         * The name of an additional CSV file (eg. "routes.txt") that is related to
         * this problem.
         * </pre>
         *
         * <code>optional string other_csv_file_name = 15;</code>
         *
         * @return The bytes for otherCsvFileName.
         */
        com.google.protobuf.ByteString
        getOtherCsvFileNameBytes();

        /**
         * <pre>
         * The name of an additional CSV key that is related to this problem.
         * </pre>
         *
         * <code>optional string other_csv_key_name = 16;</code>
         *
         * @return Whether the otherCsvKeyName field is set.
         */
        boolean hasOtherCsvKeyName();

        /**
         * <pre>
         * The name of an additional CSV key that is related to this problem.
         * </pre>
         *
         * <code>optional string other_csv_key_name = 16;</code>
         *
         * @return The otherCsvKeyName.
         */
        java.lang.String getOtherCsvKeyName();

        /**
         * <pre>
         * The name of an additional CSV key that is related to this problem.
         * </pre>
         *
         * <code>optional string other_csv_key_name = 16;</code>
         *
         * @return The bytes for otherCsvKeyName.
         */
        com.google.protobuf.ByteString
        getOtherCsvKeyNameBytes();

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @return A list containing the otherCsvColumnName.
         */
        java.util.List<java.lang.String>
        getOtherCsvColumnNameList();

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @return The count of otherCsvColumnName.
         */
        int getOtherCsvColumnNameCount();

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @param index The index of the element to return.
         * @return The otherCsvColumnName at the given index.
         */
        java.lang.String getOtherCsvColumnName(int index);

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the otherCsvColumnName at the given index.
         */
        com.google.protobuf.ByteString
        getOtherCsvColumnNameBytes(int index);

        /**
         * <pre>
         * The row number in a CSV file where this problem occurred.  The first line
         * (includes the header) of a file should have an entity_row value of 1.
         * Typically, the first row of non-header data will have an entity_row value
         * of 2.
         * </pre>
         *
         * <code>optional uint32 entity_row = 6;</code>
         *
         * @return Whether the entityRow field is set.
         */
        boolean hasEntityRow();

        /**
         * <pre>
         * The row number in a CSV file where this problem occurred.  The first line
         * (includes the header) of a file should have an entity_row value of 1.
         * Typically, the first row of non-header data will have an entity_row value
         * of 2.
         * </pre>
         *
         * <code>optional uint32 entity_row = 6;</code>
         *
         * @return The entityRow.
         */
        int getEntityRow();

        /**
         * <pre>
         * A human-readable name associated with the GTFS entity experiencing a
         * problem (eg. stop name).
         * </pre>
         *
         * <code>optional string entity_name = 7;</code>
         *
         * @return Whether the entityName field is set.
         */
        boolean hasEntityName();

        /**
         * <pre>
         * A human-readable name associated with the GTFS entity experiencing a
         * problem (eg. stop name).
         * </pre>
         *
         * <code>optional string entity_name = 7;</code>
         *
         * @return The entityName.
         */
        java.lang.String getEntityName();

        /**
         * <pre>
         * A human-readable name associated with the GTFS entity experiencing a
         * problem (eg. stop name).
         * </pre>
         *
         * <code>optional string entity_name = 7;</code>
         *
         * @return The bytes for entityName.
         */
        com.google.protobuf.ByteString
        getEntityNameBytes();

        /**
         * <pre>
         * A human-readable id associated with the GTFS entity experiencing a problem
         * (eg. stop id).
         * </pre>
         *
         * <code>optional string entity_id = 8;</code>
         *
         * @return Whether the entityId field is set.
         */
        boolean hasEntityId();

        /**
         * <pre>
         * A human-readable id associated with the GTFS entity experiencing a problem
         * (eg. stop id).
         * </pre>
         *
         * <code>optional string entity_id = 8;</code>
         *
         * @return The entityId.
         */
        java.lang.String getEntityId();

        /**
         * <pre>
         * A human-readable id associated with the GTFS entity experiencing a problem
         * (eg. stop id).
         * </pre>
         *
         * <code>optional string entity_id = 8;</code>
         *
         * @return The bytes for entityId.
         */
        com.google.protobuf.ByteString
        getEntityIdBytes();

        /**
         * <pre>
         * A human-readable value associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional string entity_value = 9;</code>
         *
         * @return Whether the entityValue field is set.
         */
        boolean hasEntityValue();

        /**
         * <pre>
         * A human-readable value associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional string entity_value = 9;</code>
         *
         * @return The entityValue.
         */
        java.lang.String getEntityValue();

        /**
         * <pre>
         * A human-readable value associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional string entity_value = 9;</code>
         *
         * @return The bytes for entityValue.
         */
        com.google.protobuf.ByteString
        getEntityValueBytes();

        /**
         * <pre>
         * Location information associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto entity_location = 21;</code>
         *
         * @return Whether the entityLocation field is set.
         */
        boolean hasEntityLocation();

        /**
         * <pre>
         * Location information associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto entity_location = 21;</code>
         *
         * @return The entityLocation.
         */
        org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getEntityLocation();

        /**
         * <pre>
         * Location information associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto entity_location = 21;</code>
         */
        org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder getEntityLocationOrBuilder();

        /**
         * <pre>
         * The row number in a CSV file of an alternate GTFS entity that's in
         * conflict with the primary row.
         * </pre>
         *
         * <code>optional uint32 alt_entity_row = 10;</code>
         *
         * @return Whether the altEntityRow field is set.
         */
        boolean hasAltEntityRow();

        /**
         * <pre>
         * The row number in a CSV file of an alternate GTFS entity that's in
         * conflict with the primary row.
         * </pre>
         *
         * <code>optional uint32 alt_entity_row = 10;</code>
         *
         * @return The altEntityRow.
         */
        int getAltEntityRow();

        /**
         * <pre>
         * A human-readable name associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop name).
         * </pre>
         *
         * <code>optional string alt_entity_name = 11;</code>
         *
         * @return Whether the altEntityName field is set.
         */
        boolean hasAltEntityName();

        /**
         * <pre>
         * A human-readable name associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop name).
         * </pre>
         *
         * <code>optional string alt_entity_name = 11;</code>
         *
         * @return The altEntityName.
         */
        java.lang.String getAltEntityName();

        /**
         * <pre>
         * A human-readable name associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop name).
         * </pre>
         *
         * <code>optional string alt_entity_name = 11;</code>
         *
         * @return The bytes for altEntityName.
         */
        com.google.protobuf.ByteString
        getAltEntityNameBytes();

        /**
         * <pre>
         * A human-readable id associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop id).
         * </pre>
         *
         * <code>optional string alt_entity_id = 12;</code>
         *
         * @return Whether the altEntityId field is set.
         */
        boolean hasAltEntityId();

        /**
         * <pre>
         * A human-readable id associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop id).
         * </pre>
         *
         * <code>optional string alt_entity_id = 12;</code>
         *
         * @return The altEntityId.
         */
        java.lang.String getAltEntityId();

        /**
         * <pre>
         * A human-readable id associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop id).
         * </pre>
         *
         * <code>optional string alt_entity_id = 12;</code>
         *
         * @return The bytes for altEntityId.
         */
        com.google.protobuf.ByteString
        getAltEntityIdBytes();

        /**
         * <pre>
         * A human-readable value associated with the alernate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional string alt_entity_value = 13;</code>
         *
         * @return Whether the altEntityValue field is set.
         */
        boolean hasAltEntityValue();

        /**
         * <pre>
         * A human-readable value associated with the alernate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional string alt_entity_value = 13;</code>
         *
         * @return The altEntityValue.
         */
        java.lang.String getAltEntityValue();

        /**
         * <pre>
         * A human-readable value associated with the alernate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional string alt_entity_value = 13;</code>
         *
         * @return The bytes for altEntityValue.
         */
        com.google.protobuf.ByteString
        getAltEntityValueBytes();

        /**
         * <pre>
         * Location information associated with the alternate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
         *
         * @return Whether the altEntityLocation field is set.
         */
        boolean hasAltEntityLocation();

        /**
         * <pre>
         * Location information associated with the alternate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
         *
         * @return The altEntityLocation.
         */
        org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getAltEntityLocation();

        /**
         * <pre>
         * Location information associated with the alternate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
         */
        org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder getAltEntityLocationOrBuilder();

        /**
         * <pre>
         * The row number in a CSV file of a GTFS entity that's a parent to the
         * primary entity.
         * </pre>
         *
         * <code>optional uint32 parent_entity_row = 18;</code>
         *
         * @return Whether the parentEntityRow field is set.
         */
        boolean hasParentEntityRow();

        /**
         * <pre>
         * The row number in a CSV file of a GTFS entity that's a parent to the
         * primary entity.
         * </pre>
         *
         * <code>optional uint32 parent_entity_row = 18;</code>
         *
         * @return The parentEntityRow.
         */
        int getParentEntityRow();

        /**
         * <pre>
         * A human-readable name associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_name = 19;</code>
         *
         * @return Whether the parentEntityName field is set.
         */
        boolean hasParentEntityName();

        /**
         * <pre>
         * A human-readable name associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_name = 19;</code>
         *
         * @return The parentEntityName.
         */
        java.lang.String getParentEntityName();

        /**
         * <pre>
         * A human-readable name associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_name = 19;</code>
         *
         * @return The bytes for parentEntityName.
         */
        com.google.protobuf.ByteString
        getParentEntityNameBytes();

        /**
         * <pre>
         * A human-readable id associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_id = 20;</code>
         *
         * @return Whether the parentEntityId field is set.
         */
        boolean hasParentEntityId();

        /**
         * <pre>
         * A human-readable id associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_id = 20;</code>
         *
         * @return The parentEntityId.
         */
        java.lang.String getParentEntityId();

        /**
         * <pre>
         * A human-readable id associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_id = 20;</code>
         *
         * @return The bytes for parentEntityId.
         */
        com.google.protobuf.ByteString
        getParentEntityIdBytes();

        /**
         * <pre>
         * A value associated with the problem.  This could be an invalid value
         * pulled from the GTFS directly or some other related value (eg "travel is
         * to too fast, a X kph", where X is replaced with 'value').
         * </pre>
         *
         * <code>optional string value = 14;</code>
         *
         * @return Whether the value field is set.
         */
        boolean hasValue();

        /**
         * <pre>
         * A value associated with the problem.  This could be an invalid value
         * pulled from the GTFS directly or some other related value (eg "travel is
         * to too fast, a X kph", where X is replaced with 'value').
         * </pre>
         *
         * <code>optional string value = 14;</code>
         *
         * @return The value.
         */
        java.lang.String getValue();

        /**
         * <pre>
         * A value associated with the problem.  This could be an invalid value
         * pulled from the GTFS directly or some other related value (eg "travel is
         * to too fast, a X kph", where X is replaced with 'value').
         * </pre>
         *
         * <code>optional string value = 14;</code>
         *
         * @return The bytes for value.
         */
        com.google.protobuf.ByteString
        getValueBytes();

        /**
         * <pre>
         * An alternate value associated with the problem.  Similar to 'value' field
         * in use, use 'value' and 'alt_value' when two values are associated with
         * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
         * the two values are associated with separate entities in the same file.
         * </pre>
         *
         * <code>optional string alt_value = 23;</code>
         *
         * @return Whether the altValue field is set.
         */
        boolean hasAltValue();

        /**
         * <pre>
         * An alternate value associated with the problem.  Similar to 'value' field
         * in use, use 'value' and 'alt_value' when two values are associated with
         * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
         * the two values are associated with separate entities in the same file.
         * </pre>
         *
         * <code>optional string alt_value = 23;</code>
         *
         * @return The altValue.
         */
        java.lang.String getAltValue();

        /**
         * <pre>
         * An alternate value associated with the problem.  Similar to 'value' field
         * in use, use 'value' and 'alt_value' when two values are associated with
         * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
         * the two values are associated with separate entities in the same file.
         * </pre>
         *
         * <code>optional string alt_value = 23;</code>
         *
         * @return The bytes for altValue.
         */
        com.google.protobuf.ByteString
        getAltValueBytes();

        /**
         * <pre>
         * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
         * importance of the problem based on the importance of the locations of the
         * geographical entities involved.
         * </pre>
         *
         * <code>optional double importance = 24;</code>
         *
         * @return Whether the importance field is set.
         */
        boolean hasImportance();

        /**
         * <pre>
         * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
         * importance of the problem based on the importance of the locations of the
         * geographical entities involved.
         * </pre>
         *
         * <code>optional double importance = 24;</code>
         *
         * @return The importance.
         */
        double getImportance();
    }

    /**
     * <pre>
     * A specific GTFS validation problem.
     * </pre>
     * <p>
     * Protobuf type {@code outputProto.GtfsProblem}
     */
    public static final class GtfsProblem extends
            com.google.protobuf.GeneratedMessageV3 implements
            // @@protoc_insertion_point(message_implements:outputProto.GtfsProblem)
            GtfsProblemOrBuilder {
        private static final long serialVersionUID = 0L;

        // Use GtfsProblem.newBuilder() to construct.
        private GtfsProblem(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
            super(builder);
        }

        private GtfsProblem() {
            type_ = 1;
            severity_ = 1;
            csvFileName_ = "";
            csvKeyName_ = "";
            csvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            otherCsvFileName_ = "";
            otherCsvKeyName_ = "";
            otherCsvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
            entityName_ = "";
            entityId_ = "";
            entityValue_ = "";
            altEntityName_ = "";
            altEntityId_ = "";
            altEntityValue_ = "";
            parentEntityName_ = "";
            parentEntityId_ = "";
            value_ = "";
            altValue_ = "";
        }

        @java.lang.Override
        @SuppressWarnings({"unused"})
        protected java.lang.Object newInstance(
                UnusedPrivateParameter unused) {
            return new GtfsProblem();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        private GtfsProblem(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            this();
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 8: {
                            int rawValue = input.readEnum();
                            @SuppressWarnings("deprecation")
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type value = org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(1, rawValue);
                            } else {
                                bitField0_ |= 0x00000001;
                                type_ = rawValue;
                            }
                            break;
                        }
                        case 16: {
                            int rawValue = input.readEnum();
                            @SuppressWarnings("deprecation")
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity value = org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity.valueOf(rawValue);
                            if (value == null) {
                                unknownFields.mergeVarintField(2, rawValue);
                            } else {
                                bitField0_ |= 0x00000002;
                                severity_ = rawValue;
                            }
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000004;
                            csvFileName_ = bs;
                            break;
                        }
                        case 34: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000008;
                            csvKeyName_ = bs;
                            break;
                        }
                        case 42: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                                csvColumnName_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            csvColumnName_.add(bs);
                            break;
                        }
                        case 48: {
                            bitField0_ |= 0x00000040;
                            entityRow_ = input.readUInt32();
                            break;
                        }
                        case 58: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000080;
                            entityName_ = bs;
                            break;
                        }
                        case 66: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000100;
                            entityId_ = bs;
                            break;
                        }
                        case 74: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000200;
                            entityValue_ = bs;
                            break;
                        }
                        case 80: {
                            bitField0_ |= 0x00000800;
                            altEntityRow_ = input.readUInt32();
                            break;
                        }
                        case 90: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00001000;
                            altEntityName_ = bs;
                            break;
                        }
                        case 98: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00002000;
                            altEntityId_ = bs;
                            break;
                        }
                        case 106: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00004000;
                            altEntityValue_ = bs;
                            break;
                        }
                        case 114: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00080000;
                            value_ = bs;
                            break;
                        }
                        case 122: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000010;
                            otherCsvFileName_ = bs;
                            break;
                        }
                        case 130: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000020;
                            otherCsvKeyName_ = bs;
                            break;
                        }
                        case 138: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            if (!((mutable_bitField0_ & 0x00000080) != 0)) {
                                otherCsvColumnName_ = new com.google.protobuf.LazyStringArrayList();
                                mutable_bitField0_ |= 0x00000080;
                            }
                            otherCsvColumnName_.add(bs);
                            break;
                        }
                        case 144: {
                            bitField0_ |= 0x00010000;
                            parentEntityRow_ = input.readUInt32();
                            break;
                        }
                        case 154: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00020000;
                            parentEntityName_ = bs;
                            break;
                        }
                        case 162: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00040000;
                            parentEntityId_ = bs;
                            break;
                        }
                        case 170: {
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder subBuilder = null;
                            if (((bitField0_ & 0x00000400) != 0)) {
                                subBuilder = entityLocation_.toBuilder();
                            }
                            entityLocation_ = input.readMessage(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(entityLocation_);
                                entityLocation_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00000400;
                            break;
                        }
                        case 178: {
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder subBuilder = null;
                            if (((bitField0_ & 0x00008000) != 0)) {
                                subBuilder = altEntityLocation_.toBuilder();
                            }
                            altEntityLocation_ = input.readMessage(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.PARSER, extensionRegistry);
                            if (subBuilder != null) {
                                subBuilder.mergeFrom(altEntityLocation_);
                                altEntityLocation_ = subBuilder.buildPartial();
                            }
                            bitField0_ |= 0x00008000;
                            break;
                        }
                        case 186: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00100000;
                            altValue_ = bs;
                            break;
                        }
                        case 193: {
                            bitField0_ |= 0x00200000;
                            importance_ = input.readDouble();
                            break;
                        }
                        default: {
                            if (!parseUnknownField(
                                    input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000010) != 0)) {
                    csvColumnName_ = csvColumnName_.getUnmodifiableView();
                }
                if (((mutable_bitField0_ & 0x00000080) != 0)) {
                    otherCsvColumnName_ = otherCsvColumnName_.getUnmodifiableView();
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_GtfsProblem_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_GtfsProblem_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.class, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Builder.class);
        }

        /**
         * <pre>
         * The type of validation problem.
         * Next tag: 336
         * </pre>
         * <p>
         * Protobuf enum {@code outputProto.GtfsProblem.Type}
         */
        public enum Type
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <pre>
             * When an unknown CsvErrorProto::Type is encountered.
             * </pre>
             *
             * <code>TYPE_CSV_UNKNOWN_ERROR = 1;</code>
             */
            TYPE_CSV_UNKNOWN_ERROR(1),
            /**
             * <pre>
             * The table file is missing.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_TABLE = 10;</code>
             */
            TYPE_CSV_MISSING_TABLE(10),
            /**
             * <pre>
             * The input file is not a well-formed csv. See csvparser.h for
             * requirements (note that duplicate column names in the header line trigger
             * this error).
             * </pre>
             *
             * <code>TYPE_CSV_SPLITTING_ERROR = 20;</code>
             */
            TYPE_CSV_SPLITTING_ERROR(20),
            /**
             * <pre>
             * The input file contained a null character ('&#92;0').
             * </pre>
             *
             * <code>TYPE_CSV_CONTAINS_NULL_CHARACTER = 21;</code>
             */
            TYPE_CSV_CONTAINS_NULL_CHARACTER(21),
            /**
             * <pre>
             * Deprecated - There was way for these to be generated as internal errors
             * in ConvertEncodingBufferToUTF8String are CHECKed as of 2007.
             * </pre>
             *
             * <code>TYPE_CSV_UTF8_CONVERSION_ERROR = 22 [deprecated = true];</code>
             */
            @java.lang.Deprecated
            TYPE_CSV_UTF8_CONVERSION_ERROR(22),
            /**
             * <pre>
             * The specified lines have characters that are not valid UTF-8.
             * </pre>
             *
             * <code>TYPE_CSV_INVALID_UTF8 = 23;</code>
             */
            TYPE_CSV_INVALID_UTF8(23),
            /**
             * <pre>
             * The input file CSV header has the same column name repeated.
             * </pre>
             *
             * <code>TYPE_CSV_DUPLICATE_COLUMN_NAME = 24;</code>
             */
            TYPE_CSV_DUPLICATE_COLUMN_NAME(24),
            /**
             * <pre>
             * A row in the input file has a different number of values than specified
             * by the CSV header.
             * </pre>
             *
             * <code>TYPE_CSV_BAD_NUMBER_OF_VALUES = 25;</code>
             */
            TYPE_CSV_BAD_NUMBER_OF_VALUES(25),
            /**
             * <pre>
             * The input file is corrupted and cannot be read properly.
             * </pre>
             *
             * <code>TYPE_CSV_FILE_CORRUPTED = 26;</code>
             */
            TYPE_CSV_FILE_CORRUPTED(26),
            /**
             * <pre>
             * A file was in an unexpected location
             * </pre>
             *
             * <code>TYPE_CSV_UNEXPECTED_LOCATION = 27;</code>
             */
            TYPE_CSV_UNEXPECTED_LOCATION(27),
            /**
             * <pre>
             * The column is missing in the input file, either the name cannot be found
             * in the header line, or the number is out of bound.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_COLUMN = 30;</code>
             */
            TYPE_CSV_MISSING_COLUMN(30),
            /**
             * <pre>
             * The key was not properly added to its table, probably because one or more
             * of its columns are missing.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_KEY = 31;</code>
             */
            TYPE_CSV_MISSING_KEY(31),
            /**
             * <pre>
             * The input rows are not properly sorted on the given key.
             * </pre>
             *
             * <code>TYPE_CSV_UNSORTED = 40;</code>
             */
            TYPE_CSV_UNSORTED(40),
            /**
             * <pre>
             * The values in the given column of the input rows are not 1..n when
             * grouped on some key.
             * </pre>
             *
             * <code>TYPE_CSV_NON_CONTIGUOUS = 41;</code>
             */
            TYPE_CSV_NON_CONTIGUOUS(41),
            /**
             * <pre>
             * The number of data rows of the table is not as required.
             * </pre>
             *
             * <code>TYPE_CSV_BAD_NUMBER_OF_ROWS = 42;</code>
             */
            TYPE_CSV_BAD_NUMBER_OF_ROWS(42),
            /**
             * <pre>
             * The values in the given column of the input rows do not represent valid
             * values according to the column type, or have values that conflict with
             * others according to the requirements on the input.
             * </pre>
             *
             * <code>TYPE_CSV_VALUE_ERROR = 50;</code>
             */
            TYPE_CSV_VALUE_ERROR(50),
            /**
             * <pre>
             * The values in the given column of the input rows do not match some
             * regular expression.
             * </pre>
             *
             * <code>TYPE_CSV_REGEXP_MISMATCH = 51;</code>
             */
            TYPE_CSV_REGEXP_MISMATCH(51),
            /**
             * <pre>
             * The values in the given column of the input rows are out of range.
             * </pre>
             *
             * <code>TYPE_CSV_OUT_OF_RANGE = 52;</code>
             */
            TYPE_CSV_OUT_OF_RANGE(52),
            /**
             * <pre>
             * The given column is null in the input rows, even though values are
             * required.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_VALUE = 53;</code>
             */
            TYPE_CSV_MISSING_VALUE(53),
            /**
             * <pre>
             * The values of the given key and rows of one table cannot be found a
             * values of the given key in another table. This is the case when a foreign
             * key of one table references a non-existing value in its original table.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_FOREIGN_KEY_VALUE = 61;</code>
             */
            TYPE_CSV_MISSING_FOREIGN_KEY_VALUE(61),
            /**
             * <pre>
             * The values of the given key and rows are duplicates. The first occurrence
             * of a value is not included in the duplicates list.
             * </pre>
             *
             * <code>TYPE_CSV_DUPLICATE_KEY_VALUE = 62;</code>
             */
            TYPE_CSV_DUPLICATE_KEY_VALUE(62),
            /**
             * <pre>
             * The values of the given key and rows reference a table that does not
             * exist.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_KEY_TABLE = 63;</code>
             */
            TYPE_CSV_MISSING_KEY_TABLE(63),
            /**
             * <pre>
             * The file size is too large to process (&gt;=4GiB).
             * </pre>
             *
             * <code>TYPE_CSV_FILE_TOO_LARGE = 64;</code>
             */
            TYPE_CSV_FILE_TOO_LARGE(64),
            /**
             * <code>TYPE_AGENCIES_WITH_DIFFERENT_LANGUAGES = 249;</code>
             */
            TYPE_AGENCIES_WITH_DIFFERENT_LANGUAGES(249),
            /**
             * <code>TYPE_AGENCIES_WITH_DIFFERENT_TIMEZONES = 231;</code>
             */
            TYPE_AGENCIES_WITH_DIFFERENT_TIMEZONES(231),
            /**
             * <code>TYPE_AGENCY_LANG_AND_FEED_LANG_MISMATCH = 232;</code>
             */
            TYPE_AGENCY_LANG_AND_FEED_LANG_MISMATCH(232),
            /**
             * <code>TYPE_AMBIGUOUS_STOP_STATION_TRANSFERS = 286;</code>
             */
            TYPE_AMBIGUOUS_STOP_STATION_TRANSFERS(286),
            /**
             * <code>TYPE_BLOCK_TRIPS_WITH_INCONSISTENT_ROUTE_TYPES = 291;</code>
             */
            TYPE_BLOCK_TRIPS_WITH_INCONSISTENT_ROUTE_TYPES(291),
            /**
             * <code>TYPE_BLOCK_TRIPS_WITH_OVERLAPPING_STOP_TIMES = 241;</code>
             */
            TYPE_BLOCK_TRIPS_WITH_OVERLAPPING_STOP_TIMES(241),
            /**
             * <code>TYPE_CALENDAR_START_AND_END_DATE_OUT_OF_ORDER = 240;</code>
             */
            TYPE_CALENDAR_START_AND_END_DATE_OUT_OF_ORDER(240),
            /**
             * <code>TYPE_CALENDAR_HAS_NO_ACTIVE_DAYS_OF_WEEK = 228;</code>
             */
            TYPE_CALENDAR_HAS_NO_ACTIVE_DAYS_OF_WEEK(228),
            /**
             * <code>TYPE_LOCATION_WITHOUT_PARENT_STATION = 203;</code>
             */
            TYPE_LOCATION_WITHOUT_PARENT_STATION(203),
            /**
             * <code>TYPE_FARE_ATTRIBUTES_INVALID_CURRENCY_TYPE = 220;</code>
             */
            TYPE_FARE_ATTRIBUTES_INVALID_CURRENCY_TYPE(220),
            /**
             * <code>TYPE_FARE_ATTRIBUTES_AGENCY_ID_REQUIRED = 221;</code>
             */
            TYPE_FARE_ATTRIBUTES_AGENCY_ID_REQUIRED(221),
            /**
             * <code>TYPE_FARE_RULE_WITH_BOTH_ROUTE_ID_REFERENCES = 290;</code>
             */
            TYPE_FARE_RULE_WITH_BOTH_ROUTE_ID_REFERENCES(290),
            /**
             * <code>TYPE_FARES_WITH_AND_WITHOUT_RULES = 264;</code>
             */
            TYPE_FARES_WITH_AND_WITHOUT_RULES(264),
            /**
             * <code>TYPE_FAST_TRAVEL_BETWEEN_CONSECUTIVE_STOPS = 256;</code>
             */
            TYPE_FAST_TRAVEL_BETWEEN_CONSECUTIVE_STOPS(256),
            /**
             * <code>TYPE_FAST_TRAVEL_BETWEEN_FAR_STOPS = 297;</code>
             */
            TYPE_FAST_TRAVEL_BETWEEN_FAR_STOPS(297),
            /**
             * <code>TYPE_FEED_EXPIRATION_DATE = 233;</code>
             */
            TYPE_FEED_EXPIRATION_DATE(233),
            /**
             * <code>TYPE_FEED_FUTURE_SERVICE = 227;</code>
             */
            TYPE_FEED_FUTURE_SERVICE(227),
            /**
             * <code>TYPE_FEED_HAS_NO_LANGUAGE = 266;</code>
             */
            TYPE_FEED_HAS_NO_LANGUAGE(266),
            /**
             * <code>TYPE_FEED_HAS_NO_SERVICE_DATE_EXCEPTIONS = 225;</code>
             */
            TYPE_FEED_HAS_NO_SERVICE_DATE_EXCEPTIONS(225),
            /**
             * <code>TYPE_FEED_HAS_NO_SERVICE_DATES = 224;</code>
             */
            TYPE_FEED_HAS_NO_SERVICE_DATES(224),
            /**
             * <pre>
             * SUSPICIOUS
             * </pre>
             *
             * <code>TYPE_FEED_HAS_VERY_SHORT_SERVICE = 295;</code>
             */
            TYPE_FEED_HAS_VERY_SHORT_SERVICE(295),
            /**
             * <pre>
             * ERROR
             * </pre>
             *
             * <code>TYPE_EXPIRED_FEED_HAS_VERY_SHORT_SERVICE = 333;</code>
             */
            TYPE_EXPIRED_FEED_HAS_VERY_SHORT_SERVICE(333),
            /**
             * <code>TYPE_FEED_INFO_START_AND_END_DATE_OUT_OF_ORDER = 222;</code>
             */
            TYPE_FEED_INFO_START_AND_END_DATE_OUT_OF_ORDER(222),
            /**
             * <code>TYPE_FEED_INFO_MORE_THAN_ONE_ENTRY = 223;</code>
             */
            TYPE_FEED_INFO_MORE_THAN_ONE_ENTRY(223),
            /**
             * <pre>
             * SUSPICIOUS
             * </pre>
             *
             * <code>TYPE_FEED_INFO_EARLY_START = 296;</code>
             */
            TYPE_FEED_INFO_EARLY_START(296),
            /**
             * <code>TYPE_FEED_SERVICE_DATE_GAP = 230;</code>
             */
            TYPE_FEED_SERVICE_DATE_GAP(230),
            /**
             * <code>TYPE_FREQUENCY_HEADWAY_SECONDS_GREATER_THAN_INTERVAL = 280;</code>
             */
            TYPE_FREQUENCY_HEADWAY_SECONDS_GREATER_THAN_INTERVAL(280),
            /**
             * <code>TYPE_FREQUENCY_HEADWAY_SECONDS_TOO_HIGH = 313;</code>
             */
            TYPE_FREQUENCY_HEADWAY_SECONDS_TOO_HIGH(313),
            /**
             * <code>TYPE_FREQUENCY_START_AND_END_TIME_ARE_EQUAL = 261;</code>
             */
            TYPE_FREQUENCY_START_AND_END_TIME_ARE_EQUAL(261),
            /**
             * <code>TYPE_FREQUENCY_START_AND_END_TIME_OUT_OF_ORDER = 262;</code>
             */
            TYPE_FREQUENCY_START_AND_END_TIME_OUT_OF_ORDER(262),
            /**
             * <code>TYPE_FREQUENCY_BASED_TRIP_TO_TRIP_TRANSFER = 284;</code>
             */
            TYPE_FREQUENCY_BASED_TRIP_TO_TRIP_TRANSFER(284),
            /**
             * <code>TYPE_INVALID_LANGUAGE_CODE = 242;</code>
             */
            TYPE_INVALID_LANGUAGE_CODE(242),
            /**
             * <code>TYPE_INVALID_LATITUDE = 243;</code>
             */
            TYPE_INVALID_LATITUDE(243),
            /**
             * <code>TYPE_INVALID_LONGITUDE = 244;</code>
             */
            TYPE_INVALID_LONGITUDE(244),
            /**
             * <code>TYPE_INVALID_ROUTE_TYPE = 263;</code>
             */
            TYPE_INVALID_ROUTE_TYPE(263),
            /**
             * <code>TYPE_INVALID_TIMEZONE = 245;</code>
             */
            TYPE_INVALID_TIMEZONE(245),
            /**
             * <code>TYPE_INVALID_URL = 246;</code>
             */
            TYPE_INVALID_URL(246),
            /**
             * <code>TYPE_MULTIPLE_FARES_WITHOUT_RULES = 265;</code>
             */
            TYPE_MULTIPLE_FARES_WITHOUT_RULES(265),
            /**
             * <code>TYPE_OVERLAPPING_FREQUENCY = 201;</code>
             */
            TYPE_OVERLAPPING_FREQUENCY(201),
            /**
             * <code>TYPE_OVERLAPPING_FREQUENCY_FOR_TRIP_DUPLICATES = 281;</code>
             */
            TYPE_OVERLAPPING_FREQUENCY_FOR_TRIP_DUPLICATES(281),
            /**
             * <code>TYPE_PARENT_STATION_WITH_WRONG_LOCATION_TYPE = 289;</code>
             */
            TYPE_PARENT_STATION_WITH_WRONG_LOCATION_TYPE(289),
            /**
             * <code>TYPE_POINT_NEAR_ORIGIN = 293;</code>
             */
            TYPE_POINT_NEAR_ORIGIN(293),
            /**
             * <code>TYPE_POINT_NEAR_POLE = 294;</code>
             */
            TYPE_POINT_NEAR_POLE(294),
            /**
             * <code>TYPE_ROUTE_COLOR_CONTRAST = 207;</code>
             */
            TYPE_ROUTE_COLOR_CONTRAST(207),
            /**
             * <code>TYPE_ROUTE_NAME_REUSED = 226;</code>
             */
            TYPE_ROUTE_NAME_REUSED(226),
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_EQUALS_LONG_NAME = 209;</code>
             */
            TYPE_ROUTE_SHORT_NAME_EQUALS_LONG_NAME(209),
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_IS_CONTAINED_IN_LONG_NAME = 210;</code>
             */
            TYPE_ROUTE_SHORT_NAME_IS_CONTAINED_IN_LONG_NAME(210),
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_IS_TOO_LONG = 208;</code>
             */
            TYPE_ROUTE_SHORT_NAME_IS_TOO_LONG(208),
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_OR_LONG_NAME_REQUIRED = 211;</code>
             */
            TYPE_ROUTE_SHORT_NAME_OR_LONG_NAME_REQUIRED(211),
            /**
             * <code>TYPE_ROUTE_BOTH_SHORT_NAME_AND_LONG_NAME_PRESENT = 314;</code>
             */
            TYPE_ROUTE_BOTH_SHORT_NAME_AND_LONG_NAME_PRESENT(314),
            /**
             * <code>TYPE_ROUTE_LONG_NAME_HAS_ABBREVIATIONS = 315;</code>
             */
            TYPE_ROUTE_LONG_NAME_HAS_ABBREVIATIONS(315),
            /**
             * <code>TYPE_ROUTE_NAME_NOT_CAPITALIZED = 316;</code>
             */
            TYPE_ROUTE_NAME_NOT_CAPITALIZED(316),
            /**
             * <code>TYPE_ROUTE_NAME_HAS_SPECIAL_CHARACTERS = 321;</code>
             */
            TYPE_ROUTE_NAME_HAS_SPECIAL_CHARACTERS(321),
            /**
             * <code>TYPE_SERVICE_ID_HAS_NO_ACTIVE_DAYS = 229;</code>
             */
            TYPE_SERVICE_ID_HAS_NO_ACTIVE_DAYS(229),
            /**
             * <code>TYPE_SHAPE_WITH_PARTIAL_SHAPE_DIST_TRAVELED = 269;</code>
             */
            TYPE_SHAPE_WITH_PARTIAL_SHAPE_DIST_TRAVELED(269),
            /**
             * <code>TYPE_STATION_UNUSED = 234;</code>
             */
            TYPE_STATION_UNUSED(234),
            /**
             * <code>TYPE_STATION_WITH_PARENT_STATION = 202;</code>
             */
            TYPE_STATION_WITH_PARENT_STATION(202),
            /**
             * <code>TYPE_LOCATION_WITH_STOP_TIME_OVERRIDES = 303;</code>
             */
            TYPE_LOCATION_WITH_STOP_TIME_OVERRIDES(303),
            /**
             * <code>TYPE_LOCATION_WITH_STOP_TIMES = 235;</code>
             */
            TYPE_LOCATION_WITH_STOP_TIMES(235),
            /**
             * <code>TYPE_STATIONS_TOO_CLOSE = 236;</code>
             */
            TYPE_STATIONS_TOO_CLOSE(236),
            /**
             * <code>TYPE_STOP_HAS_TOO_MANY_MATCHES_FOR_SHAPE = 250;</code>
             */
            TYPE_STOP_HAS_TOO_MANY_MATCHES_FOR_SHAPE(250),
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_CONFLICTING = 298;</code>
             */
            TYPE_STOP_TIME_OVERRIDES_CONFLICTING(298),
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_NOT_SAME_PARENT_STATION = 299;</code>
             */
            TYPE_STOP_TIME_OVERRIDES_NOT_SAME_PARENT_STATION(299),
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_NOT_USED = 300;</code>
             */
            TYPE_STOP_TIME_OVERRIDES_NOT_USED(300),
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_SERVICE_ID = 301;</code>
             */
            TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_SERVICE_ID(301),
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_STOP_SEQUENCE = 302;</code>
             */
            TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_STOP_SEQUENCE(302),
            /**
             * <code>TYPE_STOP_TIMES_STOP_HEADSIGN_EQUALS_STOP_NAME = 260;</code>
             */
            TYPE_STOP_TIMES_STOP_HEADSIGN_EQUALS_STOP_NAME(260),
            /**
             * <code>TYPE_STOP_TIMES_INCORRECT_STOP_HEADSIGN = 318;</code>
             */
            TYPE_STOP_TIMES_INCORRECT_STOP_HEADSIGN(318),
            /**
             * <code>TYPE_STOP_TIMES_WITH_ARRIVAL_BEFORE_PREVIOUS_DEPARTURE_TIME = 283;</code>
             */
            TYPE_STOP_TIMES_WITH_ARRIVAL_BEFORE_PREVIOUS_DEPARTURE_TIME(283),
            /**
             * <code>TYPE_STOP_TIMES_WITH_DEPARTURE_BEFORE_ARRIVAL_TIME = 275;</code>
             */
            TYPE_STOP_TIMES_WITH_DEPARTURE_BEFORE_ARRIVAL_TIME(275),
            /**
             * <code>TYPE_STOP_TIMES_WITH_LONG_ARRIVAL_INTERVAL = 254;</code>
             */
            TYPE_STOP_TIMES_WITH_LONG_ARRIVAL_INTERVAL(254),
            /**
             * <code>TYPE_STOP_TIMES_WITH_LONG_DEPARTURE_ARRIVAL_INTERVAL = 255;</code>
             */
            TYPE_STOP_TIMES_WITH_LONG_DEPARTURE_ARRIVAL_INTERVAL(255),
            /**
             * <code>TYPE_STOP_TIMES_WITH_ONLY_ARRIVAL_OR_DEPARTURE_TIME_SPECIFIED = 273;</code>
             */
            TYPE_STOP_TIMES_WITH_ONLY_ARRIVAL_OR_DEPARTURE_TIME_SPECIFIED(273),
            /**
             * <code>TYPE_STOP_TOO_CLOSE_TO_STATION = 237;</code>
             */
            TYPE_STOP_TOO_CLOSE_TO_STATION(237),
            /**
             * <code>TYPE_STOP_TOO_FAR_FROM_PARENT_STATION = 253;</code>
             */
            TYPE_STOP_TOO_FAR_FROM_PARENT_STATION(253),
            /**
             * <code>TYPE_STOP_TOO_FAR_FROM_SHAPE = 251;</code>
             */
            TYPE_STOP_TOO_FAR_FROM_SHAPE(251),
            /**
             * <code>TYPE_STOP_TOO_FAR_FROM_SHAPE_USING_USER_DISTANCE = 292;</code>
             */
            TYPE_STOP_TOO_FAR_FROM_SHAPE_USING_USER_DISTANCE(292),
            /**
             * <code>TYPE_STOP_UNUSED = 238;</code>
             */
            TYPE_STOP_UNUSED(238),
            /**
             * <code>TYPE_STOP_WITH_PARENT_STATION_AND_TIMEZONE = 204;</code>
             */
            TYPE_STOP_WITH_PARENT_STATION_AND_TIMEZONE(204),
            /**
             * <code>TYPE_STOP_WITH_SAME_NAME_AND_DESCRIPTION = 206;</code>
             */
            TYPE_STOP_WITH_SAME_NAME_AND_DESCRIPTION(206),
            /**
             * <code>TYPE_STOP_NAME_HAS_STOP_CODE_OR_ID = 319;</code>
             */
            TYPE_STOP_NAME_HAS_STOP_CODE_OR_ID(319),
            /**
             * <code>TYPE_STOP_NAME_HAS_SPECIAL_CHARACTERS = 320;</code>
             */
            TYPE_STOP_NAME_HAS_SPECIAL_CHARACTERS(320),
            /**
             * <code>TYPE_STOP_HEADSIGN_HAS_SPECIAL_CHARACTERS = 322;</code>
             */
            TYPE_STOP_HEADSIGN_HAS_SPECIAL_CHARACTERS(322),
            /**
             * <code>TYPE_STOPS_MATCH_SHAPE_OUT_OF_ORDER = 252;</code>
             */
            TYPE_STOPS_MATCH_SHAPE_OUT_OF_ORDER(252),
            /**
             * <code>TYPE_STOPS_TOO_CLOSE = 239;</code>
             */
            TYPE_STOPS_TOO_CLOSE(239),
            /**
             * <code>TYPE_STOP_NAME_NOT_CAPITALIZED = 317;</code>
             */
            TYPE_STOP_NAME_NOT_CAPITALIZED(317),
            /**
             * <code>TYPE_PLATFORM_CODE_IS_MISSING = 332;</code>
             */
            TYPE_PLATFORM_CODE_IS_MISSING(332),
            /**
             * <code>TYPE_TOO_MANY_CONSECUTIVE_STOP_TIMES_WITH_SAME_TIME = 257;</code>
             */
            TYPE_TOO_MANY_CONSECUTIVE_STOP_TIMES_WITH_SAME_TIME(257),
            /**
             * <code>TYPE_TOO_MANY_ENTRIES = 305;</code>
             */
            TYPE_TOO_MANY_ENTRIES(305),
            /**
             * <code>TYPE_TRANSFER_DISTANCE_IS_VERY_LARGE = 218;</code>
             */
            TYPE_TRANSFER_DISTANCE_IS_VERY_LARGE(218),
            /**
             * <code>TYPE_TRANSFER_DUPLICATE = 258;</code>
             */
            TYPE_TRANSFER_DUPLICATE(258),
            /**
             * <code>TYPE_TRANSFER_WALKING_SPEED_IS_TOO_FAST = 219;</code>
             */
            TYPE_TRANSFER_WALKING_SPEED_IS_TOO_FAST(219),
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_AND_INVALID_TYPE = 282;</code>
             */
            TYPE_TRANSFER_MIN_TRANSFER_TIME_AND_INVALID_TYPE(282),
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_MISSING = 288;</code>
             */
            TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_MISSING(288),
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_NEGATIVE = 216;</code>
             */
            TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_NEGATIVE(216),
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_VERY_LARGE = 217;</code>
             */
            TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_VERY_LARGE(217),
            /**
             * <code>TYPE_TRANSFER_VIA_ENTRANCE = 285;</code>
             */
            TYPE_TRANSFER_VIA_ENTRANCE(285),
            /**
             * <code>TYPE_TRANSFER_WITH_INVALID_ROUTE_AND_TRIP = 287;</code>
             */
            TYPE_TRANSFER_WITH_INVALID_ROUTE_AND_TRIP(287),
            /**
             * <code>TYPE_TRIP_DUPLICATES = 276;</code>
             */
            TYPE_TRIP_DUPLICATES(276),
            /**
             * <code>TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_LONG_NAME = 278;</code>
             */
            TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_LONG_NAME(278),
            /**
             * <code>TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_SHORT_NAME = 277;</code>
             */
            TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_SHORT_NAME(277),
            /**
             * <code>TYPE_TRIP_LENGTH_TOO_LONG = 309;</code>
             */
            TYPE_TRIP_LENGTH_TOO_LONG(309),
            /**
             * <code>TYPE_TRIP_STARTS_LATE = 310;</code>
             */
            TYPE_TRIP_STARTS_LATE(310),
            /**
             * <code>TYPE_TRIP_STARTS_TOO_LATE = 311;</code>
             */
            TYPE_TRIP_STARTS_TOO_LATE(311),
            /**
             * <code>TYPE_TRIP_WITH_NO_TIME_FOR_FIRST_STOP_TIME = 212;</code>
             */
            TYPE_TRIP_WITH_NO_TIME_FOR_FIRST_STOP_TIME(212),
            /**
             * <code>TYPE_TRIP_WITH_NO_TIME_FOR_LAST_STOP_TIME = 213;</code>
             */
            TYPE_TRIP_WITH_NO_TIME_FOR_LAST_STOP_TIME(213),
            /**
             * <code>TYPE_TRIP_WITH_NO_USABLE_STOPS = 267;</code>
             */
            TYPE_TRIP_WITH_NO_USABLE_STOPS(267),
            /**
             * <code>TYPE_TRIP_WITH_OUT_OF_ORDER_ARRIVAL_TIME = 214;</code>
             */
            TYPE_TRIP_WITH_OUT_OF_ORDER_ARRIVAL_TIME(214),
            /**
             * <code>TYPE_TRIP_WITH_OUT_OF_ORDER_DEPARTURE_TIME = 215;</code>
             */
            TYPE_TRIP_WITH_OUT_OF_ORDER_DEPARTURE_TIME(215),
            /**
             * <code>TYPE_TRIP_WITH_OUT_OF_ORDER_SHAPE_DIST_TRAVELED = 248;</code>
             */
            TYPE_TRIP_WITH_OUT_OF_ORDER_SHAPE_DIST_TRAVELED(248),
            /**
             * <code>TYPE_TRIP_WITH_PARTIAL_SHAPE_DIST_TRAVELED = 270;</code>
             */
            TYPE_TRIP_WITH_PARTIAL_SHAPE_DIST_TRAVELED(270),
            /**
             * <code>TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE = 271;</code>
             */
            TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE(271),
            /**
             * <code>TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE_DISTANCES = 272;</code>
             */
            TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE_DISTANCES(272),
            /**
             * <code>TYPE_TRIP_WITH_UNKNOWN_SERVICE_ID = 268;</code>
             */
            TYPE_TRIP_WITH_UNKNOWN_SERVICE_ID(268),
            /**
             * <code>TYPE_TRIP_WITH_DUPLICATE_STOPS = 312;</code>
             */
            TYPE_TRIP_WITH_DUPLICATE_STOPS(312),
            /**
             * <code>TYPE_TRIP_HEADSIGN_HAS_SPECIAL_CHARACTERS = 323;</code>
             */
            TYPE_TRIP_HEADSIGN_HAS_SPECIAL_CHARACTERS(323),
            /**
             * <code>TYPE_UNKNOWN_COLUMN = 274;</code>
             */
            TYPE_UNKNOWN_COLUMN(274),
            /**
             * <code>TYPE_UNKNOWN_FILE = 259;</code>
             */
            TYPE_UNKNOWN_FILE(259),
            /**
             * <pre>
             * Impossible to open feed zip archive
             * </pre>
             *
             * <code>TYPE_ARCHIVE_CORRUPTED = 306;</code>
             */
            TYPE_ARCHIVE_CORRUPTED(306),
            /**
             * <pre>
             * The current feed is identical to the last valid feed
             * </pre>
             *
             * <code>TYPE_DUPLICATE_FEED = 307;</code>
             */
            TYPE_DUPLICATE_FEED(307),
            /**
             * <pre>
             * Feed doesn't contain stops.
             * </pre>
             *
             * <code>TYPE_EMPTY_STOPS = 308;</code>
             */
            TYPE_EMPTY_STOPS(308),
            /**
             * <pre>
             * frequencies.txt contains mixed values of exact_times for a trip.
             * </pre>
             *
             * <code>TYPE_INCONSISTENT_EXACT_TIMES_FOR_TRIP = 324;</code>
             */
            TYPE_INCONSISTENT_EXACT_TIMES_FOR_TRIP(324),
            /**
             * <pre>
             * Deprecated - pathway_id is always required and is checked by parser.
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_PATHWAY_ID = 325 [deprecated = true];</code>
             */
            @java.lang.Deprecated
            TYPE_PATHWAY_MISSING_PATHWAY_ID(325),
            /**
             * <pre>
             * A reciprocal pathway is missing.
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_RECIPROCAL = 326;</code>
             */
            TYPE_PATHWAY_MISSING_RECIPROCAL(326),
            /**
             * <pre>
             * A location (stop, entrance or generic node) has no pathway but some other
             * locations in the same parent station have pathways.
             * </pre>
             *
             * <code>TYPE_PATHWAY_DANGLING_LOCATION = 327;</code>
             */
            TYPE_PATHWAY_DANGLING_LOCATION(327),
            /**
             * <pre>
             * A platform has pathways but is not connected to any entrance, even
             * indirectly.
             * </pre>
             *
             * <code>TYPE_PATHWAY_PLATFORM_WITHOUT_ENTRANCES = 328;</code>
             */
            TYPE_PATHWAY_PLATFORM_WITHOUT_ENTRANCES(328),
            /**
             * <pre>
             * A platform which already has boarding areas may not have pathways.
             * </pre>
             *
             * <code>TYPE_PATHWAY_WRONG_PLATFORM_ENDPOINT = 329;</code>
             */
            TYPE_PATHWAY_WRONG_PLATFORM_ENDPOINT(329),
            /**
             * <pre>
             * A column is missing from pathways.txt. This column is required by Core
             * GTFS-Pathways (2019) but not by the old spec (2010).
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_COLUMN = 330;</code>
             */
            TYPE_PATHWAY_MISSING_COLUMN(330),
            /**
             * <pre>
             * A value is missing from pathways.txt. This value is required by Core
             * GTFS-Pathways (2019) but not by the old spec (2010).
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_VALUE = 331;</code>
             */
            TYPE_PATHWAY_MISSING_VALUE(331),
            /**
             * <pre>
             * A column is missing from attributions.txt.
             * </pre>
             *
             * <code>TYPE_ATTRIBUTION_MISSING_COLUMN = 334;</code>
             */
            TYPE_ATTRIBUTION_MISSING_COLUMN(334),
            /**
             * <pre>
             * A role value is missing from attributions.txt.
             * </pre>
             *
             * <code>TYPE_ATTRIBUTION_MISSING_ROLE = 335;</code>
             */
            TYPE_ATTRIBUTION_MISSING_ROLE(335),
            ;

            /**
             * <pre>
             * When an unknown CsvErrorProto::Type is encountered.
             * </pre>
             *
             * <code>TYPE_CSV_UNKNOWN_ERROR = 1;</code>
             */
            public static final int TYPE_CSV_UNKNOWN_ERROR_VALUE = 1;
            /**
             * <pre>
             * The table file is missing.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_TABLE = 10;</code>
             */
            public static final int TYPE_CSV_MISSING_TABLE_VALUE = 10;
            /**
             * <pre>
             * The input file is not a well-formed csv. See csvparser.h for
             * requirements (note that duplicate column names in the header line trigger
             * this error).
             * </pre>
             *
             * <code>TYPE_CSV_SPLITTING_ERROR = 20;</code>
             */
            public static final int TYPE_CSV_SPLITTING_ERROR_VALUE = 20;
            /**
             * <pre>
             * The input file contained a null character ('&#92;0').
             * </pre>
             *
             * <code>TYPE_CSV_CONTAINS_NULL_CHARACTER = 21;</code>
             */
            public static final int TYPE_CSV_CONTAINS_NULL_CHARACTER_VALUE = 21;
            /**
             * <pre>
             * Deprecated - There was way for these to be generated as internal errors
             * in ConvertEncodingBufferToUTF8String are CHECKed as of 2007.
             * </pre>
             *
             * <code>TYPE_CSV_UTF8_CONVERSION_ERROR = 22 [deprecated = true];</code>
             */
            public static final int TYPE_CSV_UTF8_CONVERSION_ERROR_VALUE = 22;
            /**
             * <pre>
             * The specified lines have characters that are not valid UTF-8.
             * </pre>
             *
             * <code>TYPE_CSV_INVALID_UTF8 = 23;</code>
             */
            public static final int TYPE_CSV_INVALID_UTF8_VALUE = 23;
            /**
             * <pre>
             * The input file CSV header has the same column name repeated.
             * </pre>
             *
             * <code>TYPE_CSV_DUPLICATE_COLUMN_NAME = 24;</code>
             */
            public static final int TYPE_CSV_DUPLICATE_COLUMN_NAME_VALUE = 24;
            /**
             * <pre>
             * A row in the input file has a different number of values than specified
             * by the CSV header.
             * </pre>
             *
             * <code>TYPE_CSV_BAD_NUMBER_OF_VALUES = 25;</code>
             */
            public static final int TYPE_CSV_BAD_NUMBER_OF_VALUES_VALUE = 25;
            /**
             * <pre>
             * The input file is corrupted and cannot be read properly.
             * </pre>
             *
             * <code>TYPE_CSV_FILE_CORRUPTED = 26;</code>
             */
            public static final int TYPE_CSV_FILE_CORRUPTED_VALUE = 26;
            /**
             * <pre>
             * A file was in an unexpected location
             * </pre>
             *
             * <code>TYPE_CSV_UNEXPECTED_LOCATION = 27;</code>
             */
            public static final int TYPE_CSV_UNEXPECTED_LOCATION_VALUE = 27;
            /**
             * <pre>
             * The column is missing in the input file, either the name cannot be found
             * in the header line, or the number is out of bound.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_COLUMN = 30;</code>
             */
            public static final int TYPE_CSV_MISSING_COLUMN_VALUE = 30;
            /**
             * <pre>
             * The key was not properly added to its table, probably because one or more
             * of its columns are missing.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_KEY = 31;</code>
             */
            public static final int TYPE_CSV_MISSING_KEY_VALUE = 31;
            /**
             * <pre>
             * The input rows are not properly sorted on the given key.
             * </pre>
             *
             * <code>TYPE_CSV_UNSORTED = 40;</code>
             */
            public static final int TYPE_CSV_UNSORTED_VALUE = 40;
            /**
             * <pre>
             * The values in the given column of the input rows are not 1..n when
             * grouped on some key.
             * </pre>
             *
             * <code>TYPE_CSV_NON_CONTIGUOUS = 41;</code>
             */
            public static final int TYPE_CSV_NON_CONTIGUOUS_VALUE = 41;
            /**
             * <pre>
             * The number of data rows of the table is not as required.
             * </pre>
             *
             * <code>TYPE_CSV_BAD_NUMBER_OF_ROWS = 42;</code>
             */
            public static final int TYPE_CSV_BAD_NUMBER_OF_ROWS_VALUE = 42;
            /**
             * <pre>
             * The values in the given column of the input rows do not represent valid
             * values according to the column type, or have values that conflict with
             * others according to the requirements on the input.
             * </pre>
             *
             * <code>TYPE_CSV_VALUE_ERROR = 50;</code>
             */
            public static final int TYPE_CSV_VALUE_ERROR_VALUE = 50;
            /**
             * <pre>
             * The values in the given column of the input rows do not match some
             * regular expression.
             * </pre>
             *
             * <code>TYPE_CSV_REGEXP_MISMATCH = 51;</code>
             */
            public static final int TYPE_CSV_REGEXP_MISMATCH_VALUE = 51;
            /**
             * <pre>
             * The values in the given column of the input rows are out of range.
             * </pre>
             *
             * <code>TYPE_CSV_OUT_OF_RANGE = 52;</code>
             */
            public static final int TYPE_CSV_OUT_OF_RANGE_VALUE = 52;
            /**
             * <pre>
             * The given column is null in the input rows, even though values are
             * required.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_VALUE = 53;</code>
             */
            public static final int TYPE_CSV_MISSING_VALUE_VALUE = 53;
            /**
             * <pre>
             * The values of the given key and rows of one table cannot be found a
             * values of the given key in another table. This is the case when a foreign
             * key of one table references a non-existing value in its original table.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_FOREIGN_KEY_VALUE = 61;</code>
             */
            public static final int TYPE_CSV_MISSING_FOREIGN_KEY_VALUE_VALUE = 61;
            /**
             * <pre>
             * The values of the given key and rows are duplicates. The first occurrence
             * of a value is not included in the duplicates list.
             * </pre>
             *
             * <code>TYPE_CSV_DUPLICATE_KEY_VALUE = 62;</code>
             */
            public static final int TYPE_CSV_DUPLICATE_KEY_VALUE_VALUE = 62;
            /**
             * <pre>
             * The values of the given key and rows reference a table that does not
             * exist.
             * </pre>
             *
             * <code>TYPE_CSV_MISSING_KEY_TABLE = 63;</code>
             */
            public static final int TYPE_CSV_MISSING_KEY_TABLE_VALUE = 63;
            /**
             * <pre>
             * The file size is too large to process (&gt;=4GiB).
             * </pre>
             *
             * <code>TYPE_CSV_FILE_TOO_LARGE = 64;</code>
             */
            public static final int TYPE_CSV_FILE_TOO_LARGE_VALUE = 64;
            /**
             * <code>TYPE_AGENCIES_WITH_DIFFERENT_LANGUAGES = 249;</code>
             */
            public static final int TYPE_AGENCIES_WITH_DIFFERENT_LANGUAGES_VALUE = 249;
            /**
             * <code>TYPE_AGENCIES_WITH_DIFFERENT_TIMEZONES = 231;</code>
             */
            public static final int TYPE_AGENCIES_WITH_DIFFERENT_TIMEZONES_VALUE = 231;
            /**
             * <code>TYPE_AGENCY_LANG_AND_FEED_LANG_MISMATCH = 232;</code>
             */
            public static final int TYPE_AGENCY_LANG_AND_FEED_LANG_MISMATCH_VALUE = 232;
            /**
             * <code>TYPE_AMBIGUOUS_STOP_STATION_TRANSFERS = 286;</code>
             */
            public static final int TYPE_AMBIGUOUS_STOP_STATION_TRANSFERS_VALUE = 286;
            /**
             * <code>TYPE_BLOCK_TRIPS_WITH_INCONSISTENT_ROUTE_TYPES = 291;</code>
             */
            public static final int TYPE_BLOCK_TRIPS_WITH_INCONSISTENT_ROUTE_TYPES_VALUE = 291;
            /**
             * <code>TYPE_BLOCK_TRIPS_WITH_OVERLAPPING_STOP_TIMES = 241;</code>
             */
            public static final int TYPE_BLOCK_TRIPS_WITH_OVERLAPPING_STOP_TIMES_VALUE = 241;
            /**
             * <code>TYPE_CALENDAR_START_AND_END_DATE_OUT_OF_ORDER = 240;</code>
             */
            public static final int TYPE_CALENDAR_START_AND_END_DATE_OUT_OF_ORDER_VALUE = 240;
            /**
             * <code>TYPE_CALENDAR_HAS_NO_ACTIVE_DAYS_OF_WEEK = 228;</code>
             */
            public static final int TYPE_CALENDAR_HAS_NO_ACTIVE_DAYS_OF_WEEK_VALUE = 228;
            /**
             * <code>TYPE_LOCATION_WITHOUT_PARENT_STATION = 203;</code>
             */
            public static final int TYPE_LOCATION_WITHOUT_PARENT_STATION_VALUE = 203;
            /**
             * <code>TYPE_FARE_ATTRIBUTES_INVALID_CURRENCY_TYPE = 220;</code>
             */
            public static final int TYPE_FARE_ATTRIBUTES_INVALID_CURRENCY_TYPE_VALUE = 220;
            /**
             * <code>TYPE_FARE_ATTRIBUTES_AGENCY_ID_REQUIRED = 221;</code>
             */
            public static final int TYPE_FARE_ATTRIBUTES_AGENCY_ID_REQUIRED_VALUE = 221;
            /**
             * <code>TYPE_FARE_RULE_WITH_BOTH_ROUTE_ID_REFERENCES = 290;</code>
             */
            public static final int TYPE_FARE_RULE_WITH_BOTH_ROUTE_ID_REFERENCES_VALUE = 290;
            /**
             * <code>TYPE_FARES_WITH_AND_WITHOUT_RULES = 264;</code>
             */
            public static final int TYPE_FARES_WITH_AND_WITHOUT_RULES_VALUE = 264;
            /**
             * <code>TYPE_FAST_TRAVEL_BETWEEN_CONSECUTIVE_STOPS = 256;</code>
             */
            public static final int TYPE_FAST_TRAVEL_BETWEEN_CONSECUTIVE_STOPS_VALUE = 256;
            /**
             * <code>TYPE_FAST_TRAVEL_BETWEEN_FAR_STOPS = 297;</code>
             */
            public static final int TYPE_FAST_TRAVEL_BETWEEN_FAR_STOPS_VALUE = 297;
            /**
             * <code>TYPE_FEED_EXPIRATION_DATE = 233;</code>
             */
            public static final int TYPE_FEED_EXPIRATION_DATE_VALUE = 233;
            /**
             * <code>TYPE_FEED_FUTURE_SERVICE = 227;</code>
             */
            public static final int TYPE_FEED_FUTURE_SERVICE_VALUE = 227;
            /**
             * <code>TYPE_FEED_HAS_NO_LANGUAGE = 266;</code>
             */
            public static final int TYPE_FEED_HAS_NO_LANGUAGE_VALUE = 266;
            /**
             * <code>TYPE_FEED_HAS_NO_SERVICE_DATE_EXCEPTIONS = 225;</code>
             */
            public static final int TYPE_FEED_HAS_NO_SERVICE_DATE_EXCEPTIONS_VALUE = 225;
            /**
             * <code>TYPE_FEED_HAS_NO_SERVICE_DATES = 224;</code>
             */
            public static final int TYPE_FEED_HAS_NO_SERVICE_DATES_VALUE = 224;
            /**
             * <pre>
             * SUSPICIOUS
             * </pre>
             *
             * <code>TYPE_FEED_HAS_VERY_SHORT_SERVICE = 295;</code>
             */
            public static final int TYPE_FEED_HAS_VERY_SHORT_SERVICE_VALUE = 295;
            /**
             * <pre>
             * ERROR
             * </pre>
             *
             * <code>TYPE_EXPIRED_FEED_HAS_VERY_SHORT_SERVICE = 333;</code>
             */
            public static final int TYPE_EXPIRED_FEED_HAS_VERY_SHORT_SERVICE_VALUE = 333;
            /**
             * <code>TYPE_FEED_INFO_START_AND_END_DATE_OUT_OF_ORDER = 222;</code>
             */
            public static final int TYPE_FEED_INFO_START_AND_END_DATE_OUT_OF_ORDER_VALUE = 222;
            /**
             * <code>TYPE_FEED_INFO_MORE_THAN_ONE_ENTRY = 223;</code>
             */
            public static final int TYPE_FEED_INFO_MORE_THAN_ONE_ENTRY_VALUE = 223;
            /**
             * <pre>
             * SUSPICIOUS
             * </pre>
             *
             * <code>TYPE_FEED_INFO_EARLY_START = 296;</code>
             */
            public static final int TYPE_FEED_INFO_EARLY_START_VALUE = 296;
            /**
             * <code>TYPE_FEED_SERVICE_DATE_GAP = 230;</code>
             */
            public static final int TYPE_FEED_SERVICE_DATE_GAP_VALUE = 230;
            /**
             * <code>TYPE_FREQUENCY_HEADWAY_SECONDS_GREATER_THAN_INTERVAL = 280;</code>
             */
            public static final int TYPE_FREQUENCY_HEADWAY_SECONDS_GREATER_THAN_INTERVAL_VALUE = 280;
            /**
             * <code>TYPE_FREQUENCY_HEADWAY_SECONDS_TOO_HIGH = 313;</code>
             */
            public static final int TYPE_FREQUENCY_HEADWAY_SECONDS_TOO_HIGH_VALUE = 313;
            /**
             * <code>TYPE_FREQUENCY_START_AND_END_TIME_ARE_EQUAL = 261;</code>
             */
            public static final int TYPE_FREQUENCY_START_AND_END_TIME_ARE_EQUAL_VALUE = 261;
            /**
             * <code>TYPE_FREQUENCY_START_AND_END_TIME_OUT_OF_ORDER = 262;</code>
             */
            public static final int TYPE_FREQUENCY_START_AND_END_TIME_OUT_OF_ORDER_VALUE = 262;
            /**
             * <code>TYPE_FREQUENCY_BASED_TRIP_TO_TRIP_TRANSFER = 284;</code>
             */
            public static final int TYPE_FREQUENCY_BASED_TRIP_TO_TRIP_TRANSFER_VALUE = 284;
            /**
             * <code>TYPE_INVALID_LANGUAGE_CODE = 242;</code>
             */
            public static final int TYPE_INVALID_LANGUAGE_CODE_VALUE = 242;
            /**
             * <code>TYPE_INVALID_LATITUDE = 243;</code>
             */
            public static final int TYPE_INVALID_LATITUDE_VALUE = 243;
            /**
             * <code>TYPE_INVALID_LONGITUDE = 244;</code>
             */
            public static final int TYPE_INVALID_LONGITUDE_VALUE = 244;
            /**
             * <code>TYPE_INVALID_ROUTE_TYPE = 263;</code>
             */
            public static final int TYPE_INVALID_ROUTE_TYPE_VALUE = 263;
            /**
             * <code>TYPE_INVALID_TIMEZONE = 245;</code>
             */
            public static final int TYPE_INVALID_TIMEZONE_VALUE = 245;
            /**
             * <code>TYPE_INVALID_URL = 246;</code>
             */
            public static final int TYPE_INVALID_URL_VALUE = 246;
            /**
             * <code>TYPE_MULTIPLE_FARES_WITHOUT_RULES = 265;</code>
             */
            public static final int TYPE_MULTIPLE_FARES_WITHOUT_RULES_VALUE = 265;
            /**
             * <code>TYPE_OVERLAPPING_FREQUENCY = 201;</code>
             */
            public static final int TYPE_OVERLAPPING_FREQUENCY_VALUE = 201;
            /**
             * <code>TYPE_OVERLAPPING_FREQUENCY_FOR_TRIP_DUPLICATES = 281;</code>
             */
            public static final int TYPE_OVERLAPPING_FREQUENCY_FOR_TRIP_DUPLICATES_VALUE = 281;
            /**
             * <code>TYPE_PARENT_STATION_WITH_WRONG_LOCATION_TYPE = 289;</code>
             */
            public static final int TYPE_PARENT_STATION_WITH_WRONG_LOCATION_TYPE_VALUE = 289;
            /**
             * <code>TYPE_POINT_NEAR_ORIGIN = 293;</code>
             */
            public static final int TYPE_POINT_NEAR_ORIGIN_VALUE = 293;
            /**
             * <code>TYPE_POINT_NEAR_POLE = 294;</code>
             */
            public static final int TYPE_POINT_NEAR_POLE_VALUE = 294;
            /**
             * <code>TYPE_ROUTE_COLOR_CONTRAST = 207;</code>
             */
            public static final int TYPE_ROUTE_COLOR_CONTRAST_VALUE = 207;
            /**
             * <code>TYPE_ROUTE_NAME_REUSED = 226;</code>
             */
            public static final int TYPE_ROUTE_NAME_REUSED_VALUE = 226;
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_EQUALS_LONG_NAME = 209;</code>
             */
            public static final int TYPE_ROUTE_SHORT_NAME_EQUALS_LONG_NAME_VALUE = 209;
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_IS_CONTAINED_IN_LONG_NAME = 210;</code>
             */
            public static final int TYPE_ROUTE_SHORT_NAME_IS_CONTAINED_IN_LONG_NAME_VALUE = 210;
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_IS_TOO_LONG = 208;</code>
             */
            public static final int TYPE_ROUTE_SHORT_NAME_IS_TOO_LONG_VALUE = 208;
            /**
             * <code>TYPE_ROUTE_SHORT_NAME_OR_LONG_NAME_REQUIRED = 211;</code>
             */
            public static final int TYPE_ROUTE_SHORT_NAME_OR_LONG_NAME_REQUIRED_VALUE = 211;
            /**
             * <code>TYPE_ROUTE_BOTH_SHORT_NAME_AND_LONG_NAME_PRESENT = 314;</code>
             */
            public static final int TYPE_ROUTE_BOTH_SHORT_NAME_AND_LONG_NAME_PRESENT_VALUE = 314;
            /**
             * <code>TYPE_ROUTE_LONG_NAME_HAS_ABBREVIATIONS = 315;</code>
             */
            public static final int TYPE_ROUTE_LONG_NAME_HAS_ABBREVIATIONS_VALUE = 315;
            /**
             * <code>TYPE_ROUTE_NAME_NOT_CAPITALIZED = 316;</code>
             */
            public static final int TYPE_ROUTE_NAME_NOT_CAPITALIZED_VALUE = 316;
            /**
             * <code>TYPE_ROUTE_NAME_HAS_SPECIAL_CHARACTERS = 321;</code>
             */
            public static final int TYPE_ROUTE_NAME_HAS_SPECIAL_CHARACTERS_VALUE = 321;
            /**
             * <code>TYPE_SERVICE_ID_HAS_NO_ACTIVE_DAYS = 229;</code>
             */
            public static final int TYPE_SERVICE_ID_HAS_NO_ACTIVE_DAYS_VALUE = 229;
            /**
             * <code>TYPE_SHAPE_WITH_PARTIAL_SHAPE_DIST_TRAVELED = 269;</code>
             */
            public static final int TYPE_SHAPE_WITH_PARTIAL_SHAPE_DIST_TRAVELED_VALUE = 269;
            /**
             * <code>TYPE_STATION_UNUSED = 234;</code>
             */
            public static final int TYPE_STATION_UNUSED_VALUE = 234;
            /**
             * <code>TYPE_STATION_WITH_PARENT_STATION = 202;</code>
             */
            public static final int TYPE_STATION_WITH_PARENT_STATION_VALUE = 202;
            /**
             * <code>TYPE_LOCATION_WITH_STOP_TIME_OVERRIDES = 303;</code>
             */
            public static final int TYPE_LOCATION_WITH_STOP_TIME_OVERRIDES_VALUE = 303;
            /**
             * <code>TYPE_LOCATION_WITH_STOP_TIMES = 235;</code>
             */
            public static final int TYPE_LOCATION_WITH_STOP_TIMES_VALUE = 235;
            /**
             * <code>TYPE_STATIONS_TOO_CLOSE = 236;</code>
             */
            public static final int TYPE_STATIONS_TOO_CLOSE_VALUE = 236;
            /**
             * <code>TYPE_STOP_HAS_TOO_MANY_MATCHES_FOR_SHAPE = 250;</code>
             */
            public static final int TYPE_STOP_HAS_TOO_MANY_MATCHES_FOR_SHAPE_VALUE = 250;
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_CONFLICTING = 298;</code>
             */
            public static final int TYPE_STOP_TIME_OVERRIDES_CONFLICTING_VALUE = 298;
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_NOT_SAME_PARENT_STATION = 299;</code>
             */
            public static final int TYPE_STOP_TIME_OVERRIDES_NOT_SAME_PARENT_STATION_VALUE = 299;
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_NOT_USED = 300;</code>
             */
            public static final int TYPE_STOP_TIME_OVERRIDES_NOT_USED_VALUE = 300;
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_SERVICE_ID = 301;</code>
             */
            public static final int TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_SERVICE_ID_VALUE = 301;
            /**
             * <code>TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_STOP_SEQUENCE = 302;</code>
             */
            public static final int TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_STOP_SEQUENCE_VALUE = 302;
            /**
             * <code>TYPE_STOP_TIMES_STOP_HEADSIGN_EQUALS_STOP_NAME = 260;</code>
             */
            public static final int TYPE_STOP_TIMES_STOP_HEADSIGN_EQUALS_STOP_NAME_VALUE = 260;
            /**
             * <code>TYPE_STOP_TIMES_INCORRECT_STOP_HEADSIGN = 318;</code>
             */
            public static final int TYPE_STOP_TIMES_INCORRECT_STOP_HEADSIGN_VALUE = 318;
            /**
             * <code>TYPE_STOP_TIMES_WITH_ARRIVAL_BEFORE_PREVIOUS_DEPARTURE_TIME = 283;</code>
             */
            public static final int TYPE_STOP_TIMES_WITH_ARRIVAL_BEFORE_PREVIOUS_DEPARTURE_TIME_VALUE = 283;
            /**
             * <code>TYPE_STOP_TIMES_WITH_DEPARTURE_BEFORE_ARRIVAL_TIME = 275;</code>
             */
            public static final int TYPE_STOP_TIMES_WITH_DEPARTURE_BEFORE_ARRIVAL_TIME_VALUE = 275;
            /**
             * <code>TYPE_STOP_TIMES_WITH_LONG_ARRIVAL_INTERVAL = 254;</code>
             */
            public static final int TYPE_STOP_TIMES_WITH_LONG_ARRIVAL_INTERVAL_VALUE = 254;
            /**
             * <code>TYPE_STOP_TIMES_WITH_LONG_DEPARTURE_ARRIVAL_INTERVAL = 255;</code>
             */
            public static final int TYPE_STOP_TIMES_WITH_LONG_DEPARTURE_ARRIVAL_INTERVAL_VALUE = 255;
            /**
             * <code>TYPE_STOP_TIMES_WITH_ONLY_ARRIVAL_OR_DEPARTURE_TIME_SPECIFIED = 273;</code>
             */
            public static final int TYPE_STOP_TIMES_WITH_ONLY_ARRIVAL_OR_DEPARTURE_TIME_SPECIFIED_VALUE = 273;
            /**
             * <code>TYPE_STOP_TOO_CLOSE_TO_STATION = 237;</code>
             */
            public static final int TYPE_STOP_TOO_CLOSE_TO_STATION_VALUE = 237;
            /**
             * <code>TYPE_STOP_TOO_FAR_FROM_PARENT_STATION = 253;</code>
             */
            public static final int TYPE_STOP_TOO_FAR_FROM_PARENT_STATION_VALUE = 253;
            /**
             * <code>TYPE_STOP_TOO_FAR_FROM_SHAPE = 251;</code>
             */
            public static final int TYPE_STOP_TOO_FAR_FROM_SHAPE_VALUE = 251;
            /**
             * <code>TYPE_STOP_TOO_FAR_FROM_SHAPE_USING_USER_DISTANCE = 292;</code>
             */
            public static final int TYPE_STOP_TOO_FAR_FROM_SHAPE_USING_USER_DISTANCE_VALUE = 292;
            /**
             * <code>TYPE_STOP_UNUSED = 238;</code>
             */
            public static final int TYPE_STOP_UNUSED_VALUE = 238;
            /**
             * <code>TYPE_STOP_WITH_PARENT_STATION_AND_TIMEZONE = 204;</code>
             */
            public static final int TYPE_STOP_WITH_PARENT_STATION_AND_TIMEZONE_VALUE = 204;
            /**
             * <code>TYPE_STOP_WITH_SAME_NAME_AND_DESCRIPTION = 206;</code>
             */
            public static final int TYPE_STOP_WITH_SAME_NAME_AND_DESCRIPTION_VALUE = 206;
            /**
             * <code>TYPE_STOP_NAME_HAS_STOP_CODE_OR_ID = 319;</code>
             */
            public static final int TYPE_STOP_NAME_HAS_STOP_CODE_OR_ID_VALUE = 319;
            /**
             * <code>TYPE_STOP_NAME_HAS_SPECIAL_CHARACTERS = 320;</code>
             */
            public static final int TYPE_STOP_NAME_HAS_SPECIAL_CHARACTERS_VALUE = 320;
            /**
             * <code>TYPE_STOP_HEADSIGN_HAS_SPECIAL_CHARACTERS = 322;</code>
             */
            public static final int TYPE_STOP_HEADSIGN_HAS_SPECIAL_CHARACTERS_VALUE = 322;
            /**
             * <code>TYPE_STOPS_MATCH_SHAPE_OUT_OF_ORDER = 252;</code>
             */
            public static final int TYPE_STOPS_MATCH_SHAPE_OUT_OF_ORDER_VALUE = 252;
            /**
             * <code>TYPE_STOPS_TOO_CLOSE = 239;</code>
             */
            public static final int TYPE_STOPS_TOO_CLOSE_VALUE = 239;
            /**
             * <code>TYPE_STOP_NAME_NOT_CAPITALIZED = 317;</code>
             */
            public static final int TYPE_STOP_NAME_NOT_CAPITALIZED_VALUE = 317;
            /**
             * <code>TYPE_PLATFORM_CODE_IS_MISSING = 332;</code>
             */
            public static final int TYPE_PLATFORM_CODE_IS_MISSING_VALUE = 332;
            /**
             * <code>TYPE_TOO_MANY_CONSECUTIVE_STOP_TIMES_WITH_SAME_TIME = 257;</code>
             */
            public static final int TYPE_TOO_MANY_CONSECUTIVE_STOP_TIMES_WITH_SAME_TIME_VALUE = 257;
            /**
             * <code>TYPE_TOO_MANY_ENTRIES = 305;</code>
             */
            public static final int TYPE_TOO_MANY_ENTRIES_VALUE = 305;
            /**
             * <code>TYPE_TRANSFER_DISTANCE_IS_VERY_LARGE = 218;</code>
             */
            public static final int TYPE_TRANSFER_DISTANCE_IS_VERY_LARGE_VALUE = 218;
            /**
             * <code>TYPE_TRANSFER_DUPLICATE = 258;</code>
             */
            public static final int TYPE_TRANSFER_DUPLICATE_VALUE = 258;
            /**
             * <code>TYPE_TRANSFER_WALKING_SPEED_IS_TOO_FAST = 219;</code>
             */
            public static final int TYPE_TRANSFER_WALKING_SPEED_IS_TOO_FAST_VALUE = 219;
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_AND_INVALID_TYPE = 282;</code>
             */
            public static final int TYPE_TRANSFER_MIN_TRANSFER_TIME_AND_INVALID_TYPE_VALUE = 282;
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_MISSING = 288;</code>
             */
            public static final int TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_MISSING_VALUE = 288;
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_NEGATIVE = 216;</code>
             */
            public static final int TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_NEGATIVE_VALUE = 216;
            /**
             * <code>TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_VERY_LARGE = 217;</code>
             */
            public static final int TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_VERY_LARGE_VALUE = 217;
            /**
             * <code>TYPE_TRANSFER_VIA_ENTRANCE = 285;</code>
             */
            public static final int TYPE_TRANSFER_VIA_ENTRANCE_VALUE = 285;
            /**
             * <code>TYPE_TRANSFER_WITH_INVALID_ROUTE_AND_TRIP = 287;</code>
             */
            public static final int TYPE_TRANSFER_WITH_INVALID_ROUTE_AND_TRIP_VALUE = 287;
            /**
             * <code>TYPE_TRIP_DUPLICATES = 276;</code>
             */
            public static final int TYPE_TRIP_DUPLICATES_VALUE = 276;
            /**
             * <code>TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_LONG_NAME = 278;</code>
             */
            public static final int TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_LONG_NAME_VALUE = 278;
            /**
             * <code>TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_SHORT_NAME = 277;</code>
             */
            public static final int TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_SHORT_NAME_VALUE = 277;
            /**
             * <code>TYPE_TRIP_LENGTH_TOO_LONG = 309;</code>
             */
            public static final int TYPE_TRIP_LENGTH_TOO_LONG_VALUE = 309;
            /**
             * <code>TYPE_TRIP_STARTS_LATE = 310;</code>
             */
            public static final int TYPE_TRIP_STARTS_LATE_VALUE = 310;
            /**
             * <code>TYPE_TRIP_STARTS_TOO_LATE = 311;</code>
             */
            public static final int TYPE_TRIP_STARTS_TOO_LATE_VALUE = 311;
            /**
             * <code>TYPE_TRIP_WITH_NO_TIME_FOR_FIRST_STOP_TIME = 212;</code>
             */
            public static final int TYPE_TRIP_WITH_NO_TIME_FOR_FIRST_STOP_TIME_VALUE = 212;
            /**
             * <code>TYPE_TRIP_WITH_NO_TIME_FOR_LAST_STOP_TIME = 213;</code>
             */
            public static final int TYPE_TRIP_WITH_NO_TIME_FOR_LAST_STOP_TIME_VALUE = 213;
            /**
             * <code>TYPE_TRIP_WITH_NO_USABLE_STOPS = 267;</code>
             */
            public static final int TYPE_TRIP_WITH_NO_USABLE_STOPS_VALUE = 267;
            /**
             * <code>TYPE_TRIP_WITH_OUT_OF_ORDER_ARRIVAL_TIME = 214;</code>
             */
            public static final int TYPE_TRIP_WITH_OUT_OF_ORDER_ARRIVAL_TIME_VALUE = 214;
            /**
             * <code>TYPE_TRIP_WITH_OUT_OF_ORDER_DEPARTURE_TIME = 215;</code>
             */
            public static final int TYPE_TRIP_WITH_OUT_OF_ORDER_DEPARTURE_TIME_VALUE = 215;
            /**
             * <code>TYPE_TRIP_WITH_OUT_OF_ORDER_SHAPE_DIST_TRAVELED = 248;</code>
             */
            public static final int TYPE_TRIP_WITH_OUT_OF_ORDER_SHAPE_DIST_TRAVELED_VALUE = 248;
            /**
             * <code>TYPE_TRIP_WITH_PARTIAL_SHAPE_DIST_TRAVELED = 270;</code>
             */
            public static final int TYPE_TRIP_WITH_PARTIAL_SHAPE_DIST_TRAVELED_VALUE = 270;
            /**
             * <code>TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE = 271;</code>
             */
            public static final int TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE_VALUE = 271;
            /**
             * <code>TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE_DISTANCES = 272;</code>
             */
            public static final int TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE_DISTANCES_VALUE = 272;
            /**
             * <code>TYPE_TRIP_WITH_UNKNOWN_SERVICE_ID = 268;</code>
             */
            public static final int TYPE_TRIP_WITH_UNKNOWN_SERVICE_ID_VALUE = 268;
            /**
             * <code>TYPE_TRIP_WITH_DUPLICATE_STOPS = 312;</code>
             */
            public static final int TYPE_TRIP_WITH_DUPLICATE_STOPS_VALUE = 312;
            /**
             * <code>TYPE_TRIP_HEADSIGN_HAS_SPECIAL_CHARACTERS = 323;</code>
             */
            public static final int TYPE_TRIP_HEADSIGN_HAS_SPECIAL_CHARACTERS_VALUE = 323;
            /**
             * <code>TYPE_UNKNOWN_COLUMN = 274;</code>
             */
            public static final int TYPE_UNKNOWN_COLUMN_VALUE = 274;
            /**
             * <code>TYPE_UNKNOWN_FILE = 259;</code>
             */
            public static final int TYPE_UNKNOWN_FILE_VALUE = 259;
            /**
             * <pre>
             * Impossible to open feed zip archive
             * </pre>
             *
             * <code>TYPE_ARCHIVE_CORRUPTED = 306;</code>
             */
            public static final int TYPE_ARCHIVE_CORRUPTED_VALUE = 306;
            /**
             * <pre>
             * The current feed is identical to the last valid feed
             * </pre>
             *
             * <code>TYPE_DUPLICATE_FEED = 307;</code>
             */
            public static final int TYPE_DUPLICATE_FEED_VALUE = 307;
            /**
             * <pre>
             * Feed doesn't contain stops.
             * </pre>
             *
             * <code>TYPE_EMPTY_STOPS = 308;</code>
             */
            public static final int TYPE_EMPTY_STOPS_VALUE = 308;
            /**
             * <pre>
             * frequencies.txt contains mixed values of exact_times for a trip.
             * </pre>
             *
             * <code>TYPE_INCONSISTENT_EXACT_TIMES_FOR_TRIP = 324;</code>
             */
            public static final int TYPE_INCONSISTENT_EXACT_TIMES_FOR_TRIP_VALUE = 324;
            /**
             * <pre>
             * Deprecated - pathway_id is always required and is checked by parser.
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_PATHWAY_ID = 325 [deprecated = true];</code>
             */
            public static final int TYPE_PATHWAY_MISSING_PATHWAY_ID_VALUE = 325;
            /**
             * <pre>
             * A reciprocal pathway is missing.
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_RECIPROCAL = 326;</code>
             */
            public static final int TYPE_PATHWAY_MISSING_RECIPROCAL_VALUE = 326;
            /**
             * <pre>
             * A location (stop, entrance or generic node) has no pathway but some other
             * locations in the same parent station have pathways.
             * </pre>
             *
             * <code>TYPE_PATHWAY_DANGLING_LOCATION = 327;</code>
             */
            public static final int TYPE_PATHWAY_DANGLING_LOCATION_VALUE = 327;
            /**
             * <pre>
             * A platform has pathways but is not connected to any entrance, even
             * indirectly.
             * </pre>
             *
             * <code>TYPE_PATHWAY_PLATFORM_WITHOUT_ENTRANCES = 328;</code>
             */
            public static final int TYPE_PATHWAY_PLATFORM_WITHOUT_ENTRANCES_VALUE = 328;
            /**
             * <pre>
             * A platform which already has boarding areas may not have pathways.
             * </pre>
             *
             * <code>TYPE_PATHWAY_WRONG_PLATFORM_ENDPOINT = 329;</code>
             */
            public static final int TYPE_PATHWAY_WRONG_PLATFORM_ENDPOINT_VALUE = 329;
            /**
             * <pre>
             * A column is missing from pathways.txt. This column is required by Core
             * GTFS-Pathways (2019) but not by the old spec (2010).
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_COLUMN = 330;</code>
             */
            public static final int TYPE_PATHWAY_MISSING_COLUMN_VALUE = 330;
            /**
             * <pre>
             * A value is missing from pathways.txt. This value is required by Core
             * GTFS-Pathways (2019) but not by the old spec (2010).
             * </pre>
             *
             * <code>TYPE_PATHWAY_MISSING_VALUE = 331;</code>
             */
            public static final int TYPE_PATHWAY_MISSING_VALUE_VALUE = 331;
            /**
             * <pre>
             * A column is missing from attributions.txt.
             * </pre>
             *
             * <code>TYPE_ATTRIBUTION_MISSING_COLUMN = 334;</code>
             */
            public static final int TYPE_ATTRIBUTION_MISSING_COLUMN_VALUE = 334;
            /**
             * <pre>
             * A role value is missing from attributions.txt.
             * </pre>
             *
             * <code>TYPE_ATTRIBUTION_MISSING_ROLE = 335;</code>
             */
            public static final int TYPE_ATTRIBUTION_MISSING_ROLE_VALUE = 335;


            public final int getNumber() {
                return value;
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static Type valueOf(int value) {
                return forNumber(value);
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             */
            public static Type forNumber(int value) {
                switch (value) {
                    case 1:
                        return TYPE_CSV_UNKNOWN_ERROR;
                    case 10:
                        return TYPE_CSV_MISSING_TABLE;
                    case 20:
                        return TYPE_CSV_SPLITTING_ERROR;
                    case 21:
                        return TYPE_CSV_CONTAINS_NULL_CHARACTER;
                    case 22:
                        return TYPE_CSV_UTF8_CONVERSION_ERROR;
                    case 23:
                        return TYPE_CSV_INVALID_UTF8;
                    case 24:
                        return TYPE_CSV_DUPLICATE_COLUMN_NAME;
                    case 25:
                        return TYPE_CSV_BAD_NUMBER_OF_VALUES;
                    case 26:
                        return TYPE_CSV_FILE_CORRUPTED;
                    case 27:
                        return TYPE_CSV_UNEXPECTED_LOCATION;
                    case 30:
                        return TYPE_CSV_MISSING_COLUMN;
                    case 31:
                        return TYPE_CSV_MISSING_KEY;
                    case 40:
                        return TYPE_CSV_UNSORTED;
                    case 41:
                        return TYPE_CSV_NON_CONTIGUOUS;
                    case 42:
                        return TYPE_CSV_BAD_NUMBER_OF_ROWS;
                    case 50:
                        return TYPE_CSV_VALUE_ERROR;
                    case 51:
                        return TYPE_CSV_REGEXP_MISMATCH;
                    case 52:
                        return TYPE_CSV_OUT_OF_RANGE;
                    case 53:
                        return TYPE_CSV_MISSING_VALUE;
                    case 61:
                        return TYPE_CSV_MISSING_FOREIGN_KEY_VALUE;
                    case 62:
                        return TYPE_CSV_DUPLICATE_KEY_VALUE;
                    case 63:
                        return TYPE_CSV_MISSING_KEY_TABLE;
                    case 64:
                        return TYPE_CSV_FILE_TOO_LARGE;
                    case 249:
                        return TYPE_AGENCIES_WITH_DIFFERENT_LANGUAGES;
                    case 231:
                        return TYPE_AGENCIES_WITH_DIFFERENT_TIMEZONES;
                    case 232:
                        return TYPE_AGENCY_LANG_AND_FEED_LANG_MISMATCH;
                    case 286:
                        return TYPE_AMBIGUOUS_STOP_STATION_TRANSFERS;
                    case 291:
                        return TYPE_BLOCK_TRIPS_WITH_INCONSISTENT_ROUTE_TYPES;
                    case 241:
                        return TYPE_BLOCK_TRIPS_WITH_OVERLAPPING_STOP_TIMES;
                    case 240:
                        return TYPE_CALENDAR_START_AND_END_DATE_OUT_OF_ORDER;
                    case 228:
                        return TYPE_CALENDAR_HAS_NO_ACTIVE_DAYS_OF_WEEK;
                    case 203:
                        return TYPE_LOCATION_WITHOUT_PARENT_STATION;
                    case 220:
                        return TYPE_FARE_ATTRIBUTES_INVALID_CURRENCY_TYPE;
                    case 221:
                        return TYPE_FARE_ATTRIBUTES_AGENCY_ID_REQUIRED;
                    case 290:
                        return TYPE_FARE_RULE_WITH_BOTH_ROUTE_ID_REFERENCES;
                    case 264:
                        return TYPE_FARES_WITH_AND_WITHOUT_RULES;
                    case 256:
                        return TYPE_FAST_TRAVEL_BETWEEN_CONSECUTIVE_STOPS;
                    case 297:
                        return TYPE_FAST_TRAVEL_BETWEEN_FAR_STOPS;
                    case 233:
                        return TYPE_FEED_EXPIRATION_DATE;
                    case 227:
                        return TYPE_FEED_FUTURE_SERVICE;
                    case 266:
                        return TYPE_FEED_HAS_NO_LANGUAGE;
                    case 225:
                        return TYPE_FEED_HAS_NO_SERVICE_DATE_EXCEPTIONS;
                    case 224:
                        return TYPE_FEED_HAS_NO_SERVICE_DATES;
                    case 295:
                        return TYPE_FEED_HAS_VERY_SHORT_SERVICE;
                    case 333:
                        return TYPE_EXPIRED_FEED_HAS_VERY_SHORT_SERVICE;
                    case 222:
                        return TYPE_FEED_INFO_START_AND_END_DATE_OUT_OF_ORDER;
                    case 223:
                        return TYPE_FEED_INFO_MORE_THAN_ONE_ENTRY;
                    case 296:
                        return TYPE_FEED_INFO_EARLY_START;
                    case 230:
                        return TYPE_FEED_SERVICE_DATE_GAP;
                    case 280:
                        return TYPE_FREQUENCY_HEADWAY_SECONDS_GREATER_THAN_INTERVAL;
                    case 313:
                        return TYPE_FREQUENCY_HEADWAY_SECONDS_TOO_HIGH;
                    case 261:
                        return TYPE_FREQUENCY_START_AND_END_TIME_ARE_EQUAL;
                    case 262:
                        return TYPE_FREQUENCY_START_AND_END_TIME_OUT_OF_ORDER;
                    case 284:
                        return TYPE_FREQUENCY_BASED_TRIP_TO_TRIP_TRANSFER;
                    case 242:
                        return TYPE_INVALID_LANGUAGE_CODE;
                    case 243:
                        return TYPE_INVALID_LATITUDE;
                    case 244:
                        return TYPE_INVALID_LONGITUDE;
                    case 263:
                        return TYPE_INVALID_ROUTE_TYPE;
                    case 245:
                        return TYPE_INVALID_TIMEZONE;
                    case 246:
                        return TYPE_INVALID_URL;
                    case 265:
                        return TYPE_MULTIPLE_FARES_WITHOUT_RULES;
                    case 201:
                        return TYPE_OVERLAPPING_FREQUENCY;
                    case 281:
                        return TYPE_OVERLAPPING_FREQUENCY_FOR_TRIP_DUPLICATES;
                    case 289:
                        return TYPE_PARENT_STATION_WITH_WRONG_LOCATION_TYPE;
                    case 293:
                        return TYPE_POINT_NEAR_ORIGIN;
                    case 294:
                        return TYPE_POINT_NEAR_POLE;
                    case 207:
                        return TYPE_ROUTE_COLOR_CONTRAST;
                    case 226:
                        return TYPE_ROUTE_NAME_REUSED;
                    case 209:
                        return TYPE_ROUTE_SHORT_NAME_EQUALS_LONG_NAME;
                    case 210:
                        return TYPE_ROUTE_SHORT_NAME_IS_CONTAINED_IN_LONG_NAME;
                    case 208:
                        return TYPE_ROUTE_SHORT_NAME_IS_TOO_LONG;
                    case 211:
                        return TYPE_ROUTE_SHORT_NAME_OR_LONG_NAME_REQUIRED;
                    case 314:
                        return TYPE_ROUTE_BOTH_SHORT_NAME_AND_LONG_NAME_PRESENT;
                    case 315:
                        return TYPE_ROUTE_LONG_NAME_HAS_ABBREVIATIONS;
                    case 316:
                        return TYPE_ROUTE_NAME_NOT_CAPITALIZED;
                    case 321:
                        return TYPE_ROUTE_NAME_HAS_SPECIAL_CHARACTERS;
                    case 229:
                        return TYPE_SERVICE_ID_HAS_NO_ACTIVE_DAYS;
                    case 269:
                        return TYPE_SHAPE_WITH_PARTIAL_SHAPE_DIST_TRAVELED;
                    case 234:
                        return TYPE_STATION_UNUSED;
                    case 202:
                        return TYPE_STATION_WITH_PARENT_STATION;
                    case 303:
                        return TYPE_LOCATION_WITH_STOP_TIME_OVERRIDES;
                    case 235:
                        return TYPE_LOCATION_WITH_STOP_TIMES;
                    case 236:
                        return TYPE_STATIONS_TOO_CLOSE;
                    case 250:
                        return TYPE_STOP_HAS_TOO_MANY_MATCHES_FOR_SHAPE;
                    case 298:
                        return TYPE_STOP_TIME_OVERRIDES_CONFLICTING;
                    case 299:
                        return TYPE_STOP_TIME_OVERRIDES_NOT_SAME_PARENT_STATION;
                    case 300:
                        return TYPE_STOP_TIME_OVERRIDES_NOT_USED;
                    case 301:
                        return TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_SERVICE_ID;
                    case 302:
                        return TYPE_STOP_TIME_OVERRIDES_WITH_UNKNOWN_STOP_SEQUENCE;
                    case 260:
                        return TYPE_STOP_TIMES_STOP_HEADSIGN_EQUALS_STOP_NAME;
                    case 318:
                        return TYPE_STOP_TIMES_INCORRECT_STOP_HEADSIGN;
                    case 283:
                        return TYPE_STOP_TIMES_WITH_ARRIVAL_BEFORE_PREVIOUS_DEPARTURE_TIME;
                    case 275:
                        return TYPE_STOP_TIMES_WITH_DEPARTURE_BEFORE_ARRIVAL_TIME;
                    case 254:
                        return TYPE_STOP_TIMES_WITH_LONG_ARRIVAL_INTERVAL;
                    case 255:
                        return TYPE_STOP_TIMES_WITH_LONG_DEPARTURE_ARRIVAL_INTERVAL;
                    case 273:
                        return TYPE_STOP_TIMES_WITH_ONLY_ARRIVAL_OR_DEPARTURE_TIME_SPECIFIED;
                    case 237:
                        return TYPE_STOP_TOO_CLOSE_TO_STATION;
                    case 253:
                        return TYPE_STOP_TOO_FAR_FROM_PARENT_STATION;
                    case 251:
                        return TYPE_STOP_TOO_FAR_FROM_SHAPE;
                    case 292:
                        return TYPE_STOP_TOO_FAR_FROM_SHAPE_USING_USER_DISTANCE;
                    case 238:
                        return TYPE_STOP_UNUSED;
                    case 204:
                        return TYPE_STOP_WITH_PARENT_STATION_AND_TIMEZONE;
                    case 206:
                        return TYPE_STOP_WITH_SAME_NAME_AND_DESCRIPTION;
                    case 319:
                        return TYPE_STOP_NAME_HAS_STOP_CODE_OR_ID;
                    case 320:
                        return TYPE_STOP_NAME_HAS_SPECIAL_CHARACTERS;
                    case 322:
                        return TYPE_STOP_HEADSIGN_HAS_SPECIAL_CHARACTERS;
                    case 252:
                        return TYPE_STOPS_MATCH_SHAPE_OUT_OF_ORDER;
                    case 239:
                        return TYPE_STOPS_TOO_CLOSE;
                    case 317:
                        return TYPE_STOP_NAME_NOT_CAPITALIZED;
                    case 332:
                        return TYPE_PLATFORM_CODE_IS_MISSING;
                    case 257:
                        return TYPE_TOO_MANY_CONSECUTIVE_STOP_TIMES_WITH_SAME_TIME;
                    case 305:
                        return TYPE_TOO_MANY_ENTRIES;
                    case 218:
                        return TYPE_TRANSFER_DISTANCE_IS_VERY_LARGE;
                    case 258:
                        return TYPE_TRANSFER_DUPLICATE;
                    case 219:
                        return TYPE_TRANSFER_WALKING_SPEED_IS_TOO_FAST;
                    case 282:
                        return TYPE_TRANSFER_MIN_TRANSFER_TIME_AND_INVALID_TYPE;
                    case 288:
                        return TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_MISSING;
                    case 216:
                        return TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_NEGATIVE;
                    case 217:
                        return TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_VERY_LARGE;
                    case 285:
                        return TYPE_TRANSFER_VIA_ENTRANCE;
                    case 287:
                        return TYPE_TRANSFER_WITH_INVALID_ROUTE_AND_TRIP;
                    case 276:
                        return TYPE_TRIP_DUPLICATES;
                    case 278:
                        return TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_LONG_NAME;
                    case 277:
                        return TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_SHORT_NAME;
                    case 309:
                        return TYPE_TRIP_LENGTH_TOO_LONG;
                    case 310:
                        return TYPE_TRIP_STARTS_LATE;
                    case 311:
                        return TYPE_TRIP_STARTS_TOO_LATE;
                    case 212:
                        return TYPE_TRIP_WITH_NO_TIME_FOR_FIRST_STOP_TIME;
                    case 213:
                        return TYPE_TRIP_WITH_NO_TIME_FOR_LAST_STOP_TIME;
                    case 267:
                        return TYPE_TRIP_WITH_NO_USABLE_STOPS;
                    case 214:
                        return TYPE_TRIP_WITH_OUT_OF_ORDER_ARRIVAL_TIME;
                    case 215:
                        return TYPE_TRIP_WITH_OUT_OF_ORDER_DEPARTURE_TIME;
                    case 248:
                        return TYPE_TRIP_WITH_OUT_OF_ORDER_SHAPE_DIST_TRAVELED;
                    case 270:
                        return TYPE_TRIP_WITH_PARTIAL_SHAPE_DIST_TRAVELED;
                    case 271:
                        return TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE;
                    case 272:
                        return TYPE_TRIP_WITH_SHAPE_DIST_TRAVELED_BUT_NO_SHAPE_DISTANCES;
                    case 268:
                        return TYPE_TRIP_WITH_UNKNOWN_SERVICE_ID;
                    case 312:
                        return TYPE_TRIP_WITH_DUPLICATE_STOPS;
                    case 323:
                        return TYPE_TRIP_HEADSIGN_HAS_SPECIAL_CHARACTERS;
                    case 274:
                        return TYPE_UNKNOWN_COLUMN;
                    case 259:
                        return TYPE_UNKNOWN_FILE;
                    case 306:
                        return TYPE_ARCHIVE_CORRUPTED;
                    case 307:
                        return TYPE_DUPLICATE_FEED;
                    case 308:
                        return TYPE_EMPTY_STOPS;
                    case 324:
                        return TYPE_INCONSISTENT_EXACT_TIMES_FOR_TRIP;
                    case 325:
                        return TYPE_PATHWAY_MISSING_PATHWAY_ID;
                    case 326:
                        return TYPE_PATHWAY_MISSING_RECIPROCAL;
                    case 327:
                        return TYPE_PATHWAY_DANGLING_LOCATION;
                    case 328:
                        return TYPE_PATHWAY_PLATFORM_WITHOUT_ENTRANCES;
                    case 329:
                        return TYPE_PATHWAY_WRONG_PLATFORM_ENDPOINT;
                    case 330:
                        return TYPE_PATHWAY_MISSING_COLUMN;
                    case 331:
                        return TYPE_PATHWAY_MISSING_VALUE;
                    case 334:
                        return TYPE_ATTRIBUTION_MISSING_COLUMN;
                    case 335:
                        return TYPE_ATTRIBUTION_MISSING_ROLE;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Type>
            internalGetValueMap() {
                return internalValueMap;
            }

            private static final com.google.protobuf.Internal.EnumLiteMap<
                    Type> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Type>() {
                        public Type findValueByNumber(int number) {
                            return Type.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.getDescriptor().getEnumTypes().get(0);
            }

            private static final Type[] VALUES = values();

            public static Type valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private Type(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:outputProto.GtfsProblem.Type)
        }

        /**
         * <pre>
         * The severity of the validation problem.
         * </pre>
         * <p>
         * Protobuf enum {@code outputProto.GtfsProblem.Severity}
         */
        public enum Severity
                implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <pre>
             * A warning indicates that something is not quite right but most GTFS
             * consumers will still be able to handle the feed.
             * </pre>
             *
             * <code>WARNING = 1;</code>
             */
            WARNING(1),
            /**
             * <pre>
             * An error indicates that something is broken in such as a way that most
             * GTFS consumers will not be able to handle the feed.
             * </pre>
             *
             * <code>ERROR = 2;</code>
             */
            ERROR(2),
            /**
             * <pre>
             * The feed has something that is potentially very broken. It should be
             * blocked until manually reviewed.
             * </pre>
             *
             * <code>SUSPICIOUS_WARNING = 3;</code>
             */
            SUSPICIOUS_WARNING(3),
            ;

            /**
             * <pre>
             * A warning indicates that something is not quite right but most GTFS
             * consumers will still be able to handle the feed.
             * </pre>
             *
             * <code>WARNING = 1;</code>
             */
            public static final int WARNING_VALUE = 1;
            /**
             * <pre>
             * An error indicates that something is broken in such as a way that most
             * GTFS consumers will not be able to handle the feed.
             * </pre>
             *
             * <code>ERROR = 2;</code>
             */
            public static final int ERROR_VALUE = 2;
            /**
             * <pre>
             * The feed has something that is potentially very broken. It should be
             * blocked until manually reviewed.
             * </pre>
             *
             * <code>SUSPICIOUS_WARNING = 3;</code>
             */
            public static final int SUSPICIOUS_WARNING_VALUE = 3;


            public final int getNumber() {
                return value;
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             * @deprecated Use {@link #forNumber(int)} instead.
             */
            @java.lang.Deprecated
            public static Severity valueOf(int value) {
                return forNumber(value);
            }

            /**
             * @param value The numeric wire value of the corresponding enum entry.
             * @return The enum associated with the given numeric wire value.
             */
            public static Severity forNumber(int value) {
                switch (value) {
                    case 1:
                        return WARNING;
                    case 2:
                        return ERROR;
                    case 3:
                        return SUSPICIOUS_WARNING;
                    default:
                        return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<Severity>
            internalGetValueMap() {
                return internalValueMap;
            }

            private static final com.google.protobuf.Internal.EnumLiteMap<
                    Severity> internalValueMap =
                    new com.google.protobuf.Internal.EnumLiteMap<Severity>() {
                        public Severity findValueByNumber(int number) {
                            return Severity.forNumber(number);
                        }
                    };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor
            getValueDescriptor() {
                return getDescriptor().getValues().get(ordinal());
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptorForType() {
                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor
            getDescriptor() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.getDescriptor().getEnumTypes().get(1);
            }

            private static final Severity[] VALUES = values();

            public static Severity valueOf(
                    com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException(
                            "EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int value;

            private Severity(int value) {
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:outputProto.GtfsProblem.Severity)
        }

        private int bitField0_;
        public static final int TYPE_FIELD_NUMBER = 1;
        private int type_;

        /**
         * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
         *
         * @return Whether the type field is set.
         */
        public boolean hasType() {
            return ((bitField0_ & 0x00000001) != 0);
        }

        /**
         * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
         *
         * @return The type.
         */
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type getType() {
            @SuppressWarnings("deprecation")
            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type result = org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type.valueOf(type_);
            return result == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type.TYPE_CSV_UNKNOWN_ERROR : result;
        }

        public static final int SEVERITY_FIELD_NUMBER = 2;
        private int severity_;

        /**
         * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
         *
         * @return Whether the severity field is set.
         */
        public boolean hasSeverity() {
            return ((bitField0_ & 0x00000002) != 0);
        }

        /**
         * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
         *
         * @return The severity.
         */
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity getSeverity() {
            @SuppressWarnings("deprecation")
            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity result = org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity.valueOf(severity_);
            return result == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity.WARNING : result;
        }

        public static final int CSV_FILE_NAME_FIELD_NUMBER = 3;
        private volatile java.lang.Object csvFileName_;

        /**
         * <pre>
         * The name of the CSV file (eg. "stops.txt") where this problem occurred.
         * </pre>
         *
         * <code>optional string csv_file_name = 3;</code>
         *
         * @return Whether the csvFileName field is set.
         */
        public boolean hasCsvFileName() {
            return ((bitField0_ & 0x00000004) != 0);
        }

        /**
         * <pre>
         * The name of the CSV file (eg. "stops.txt") where this problem occurred.
         * </pre>
         *
         * <code>optional string csv_file_name = 3;</code>
         *
         * @return The csvFileName.
         */
        public java.lang.String getCsvFileName() {
            java.lang.Object ref = csvFileName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    csvFileName_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * The name of the CSV file (eg. "stops.txt") where this problem occurred.
         * </pre>
         *
         * <code>optional string csv_file_name = 3;</code>
         *
         * @return The bytes for csvFileName.
         */
        public com.google.protobuf.ByteString
        getCsvFileNameBytes() {
            java.lang.Object ref = csvFileName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                csvFileName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int CSV_KEY_NAME_FIELD_NUMBER = 4;
        private volatile java.lang.Object csvKeyName_;

        /**
         * <pre>
         * The name of a CSV key that is implicated in this problem.
         * </pre>
         *
         * <code>optional string csv_key_name = 4;</code>
         *
         * @return Whether the csvKeyName field is set.
         */
        public boolean hasCsvKeyName() {
            return ((bitField0_ & 0x00000008) != 0);
        }

        /**
         * <pre>
         * The name of a CSV key that is implicated in this problem.
         * </pre>
         *
         * <code>optional string csv_key_name = 4;</code>
         *
         * @return The csvKeyName.
         */
        public java.lang.String getCsvKeyName() {
            java.lang.Object ref = csvKeyName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    csvKeyName_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * The name of a CSV key that is implicated in this problem.
         * </pre>
         *
         * <code>optional string csv_key_name = 4;</code>
         *
         * @return The bytes for csvKeyName.
         */
        public com.google.protobuf.ByteString
        getCsvKeyNameBytes() {
            java.lang.Object ref = csvKeyName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                csvKeyName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int CSV_COLUMN_NAME_FIELD_NUMBER = 5;
        private com.google.protobuf.LazyStringList csvColumnName_;

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @return A list containing the csvColumnName.
         */
        public com.google.protobuf.ProtocolStringList
        getCsvColumnNameList() {
            return csvColumnName_;
        }

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @return The count of csvColumnName.
         */
        public int getCsvColumnNameCount() {
            return csvColumnName_.size();
        }

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @param index The index of the element to return.
         * @return The csvColumnName at the given index.
         */
        public java.lang.String getCsvColumnName(int index) {
            return csvColumnName_.get(index);
        }

        /**
         * <pre>
         * The name of columns in the CSV file where this problem occurred.
         * </pre>
         *
         * <code>repeated string csv_column_name = 5;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the csvColumnName at the given index.
         */
        public com.google.protobuf.ByteString
        getCsvColumnNameBytes(int index) {
            return csvColumnName_.getByteString(index);
        }

        public static final int OTHER_CSV_FILE_NAME_FIELD_NUMBER = 15;
        private volatile java.lang.Object otherCsvFileName_;

        /**
         * <pre>
         * The name of an additional CSV file (eg. "routes.txt") that is related to
         * this problem.
         * </pre>
         *
         * <code>optional string other_csv_file_name = 15;</code>
         *
         * @return Whether the otherCsvFileName field is set.
         */
        public boolean hasOtherCsvFileName() {
            return ((bitField0_ & 0x00000010) != 0);
        }

        /**
         * <pre>
         * The name of an additional CSV file (eg. "routes.txt") that is related to
         * this problem.
         * </pre>
         *
         * <code>optional string other_csv_file_name = 15;</code>
         *
         * @return The otherCsvFileName.
         */
        public java.lang.String getOtherCsvFileName() {
            java.lang.Object ref = otherCsvFileName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    otherCsvFileName_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * The name of an additional CSV file (eg. "routes.txt") that is related to
         * this problem.
         * </pre>
         *
         * <code>optional string other_csv_file_name = 15;</code>
         *
         * @return The bytes for otherCsvFileName.
         */
        public com.google.protobuf.ByteString
        getOtherCsvFileNameBytes() {
            java.lang.Object ref = otherCsvFileName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                otherCsvFileName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int OTHER_CSV_KEY_NAME_FIELD_NUMBER = 16;
        private volatile java.lang.Object otherCsvKeyName_;

        /**
         * <pre>
         * The name of an additional CSV key that is related to this problem.
         * </pre>
         *
         * <code>optional string other_csv_key_name = 16;</code>
         *
         * @return Whether the otherCsvKeyName field is set.
         */
        public boolean hasOtherCsvKeyName() {
            return ((bitField0_ & 0x00000020) != 0);
        }

        /**
         * <pre>
         * The name of an additional CSV key that is related to this problem.
         * </pre>
         *
         * <code>optional string other_csv_key_name = 16;</code>
         *
         * @return The otherCsvKeyName.
         */
        public java.lang.String getOtherCsvKeyName() {
            java.lang.Object ref = otherCsvKeyName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    otherCsvKeyName_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * The name of an additional CSV key that is related to this problem.
         * </pre>
         *
         * <code>optional string other_csv_key_name = 16;</code>
         *
         * @return The bytes for otherCsvKeyName.
         */
        public com.google.protobuf.ByteString
        getOtherCsvKeyNameBytes() {
            java.lang.Object ref = otherCsvKeyName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                otherCsvKeyName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int OTHER_CSV_COLUMN_NAME_FIELD_NUMBER = 17;
        private com.google.protobuf.LazyStringList otherCsvColumnName_;

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @return A list containing the otherCsvColumnName.
         */
        public com.google.protobuf.ProtocolStringList
        getOtherCsvColumnNameList() {
            return otherCsvColumnName_;
        }

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @return The count of otherCsvColumnName.
         */
        public int getOtherCsvColumnNameCount() {
            return otherCsvColumnName_.size();
        }

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @param index The index of the element to return.
         * @return The otherCsvColumnName at the given index.
         */
        public java.lang.String getOtherCsvColumnName(int index) {
            return otherCsvColumnName_.get(index);
        }

        /**
         * <pre>
         * The name of additional columns in the alt CSV file that are related to
         * this problem.
         * </pre>
         *
         * <code>repeated string other_csv_column_name = 17;</code>
         *
         * @param index The index of the value to return.
         * @return The bytes of the otherCsvColumnName at the given index.
         */
        public com.google.protobuf.ByteString
        getOtherCsvColumnNameBytes(int index) {
            return otherCsvColumnName_.getByteString(index);
        }

        public static final int ENTITY_ROW_FIELD_NUMBER = 6;
        private int entityRow_;

        /**
         * <pre>
         * The row number in a CSV file where this problem occurred.  The first line
         * (includes the header) of a file should have an entity_row value of 1.
         * Typically, the first row of non-header data will have an entity_row value
         * of 2.
         * </pre>
         *
         * <code>optional uint32 entity_row = 6;</code>
         *
         * @return Whether the entityRow field is set.
         */
        public boolean hasEntityRow() {
            return ((bitField0_ & 0x00000040) != 0);
        }

        /**
         * <pre>
         * The row number in a CSV file where this problem occurred.  The first line
         * (includes the header) of a file should have an entity_row value of 1.
         * Typically, the first row of non-header data will have an entity_row value
         * of 2.
         * </pre>
         *
         * <code>optional uint32 entity_row = 6;</code>
         *
         * @return The entityRow.
         */
        public int getEntityRow() {
            return entityRow_;
        }

        public static final int ENTITY_NAME_FIELD_NUMBER = 7;
        private volatile java.lang.Object entityName_;

        /**
         * <pre>
         * A human-readable name associated with the GTFS entity experiencing a
         * problem (eg. stop name).
         * </pre>
         *
         * <code>optional string entity_name = 7;</code>
         *
         * @return Whether the entityName field is set.
         */
        public boolean hasEntityName() {
            return ((bitField0_ & 0x00000080) != 0);
        }

        /**
         * <pre>
         * A human-readable name associated with the GTFS entity experiencing a
         * problem (eg. stop name).
         * </pre>
         *
         * <code>optional string entity_name = 7;</code>
         *
         * @return The entityName.
         */
        public java.lang.String getEntityName() {
            java.lang.Object ref = entityName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    entityName_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable name associated with the GTFS entity experiencing a
         * problem (eg. stop name).
         * </pre>
         *
         * <code>optional string entity_name = 7;</code>
         *
         * @return The bytes for entityName.
         */
        public com.google.protobuf.ByteString
        getEntityNameBytes() {
            java.lang.Object ref = entityName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                entityName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ENTITY_ID_FIELD_NUMBER = 8;
        private volatile java.lang.Object entityId_;

        /**
         * <pre>
         * A human-readable id associated with the GTFS entity experiencing a problem
         * (eg. stop id).
         * </pre>
         *
         * <code>optional string entity_id = 8;</code>
         *
         * @return Whether the entityId field is set.
         */
        public boolean hasEntityId() {
            return ((bitField0_ & 0x00000100) != 0);
        }

        /**
         * <pre>
         * A human-readable id associated with the GTFS entity experiencing a problem
         * (eg. stop id).
         * </pre>
         *
         * <code>optional string entity_id = 8;</code>
         *
         * @return The entityId.
         */
        public java.lang.String getEntityId() {
            java.lang.Object ref = entityId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    entityId_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable id associated with the GTFS entity experiencing a problem
         * (eg. stop id).
         * </pre>
         *
         * <code>optional string entity_id = 8;</code>
         *
         * @return The bytes for entityId.
         */
        public com.google.protobuf.ByteString
        getEntityIdBytes() {
            java.lang.Object ref = entityId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                entityId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ENTITY_VALUE_FIELD_NUMBER = 9;
        private volatile java.lang.Object entityValue_;

        /**
         * <pre>
         * A human-readable value associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional string entity_value = 9;</code>
         *
         * @return Whether the entityValue field is set.
         */
        public boolean hasEntityValue() {
            return ((bitField0_ & 0x00000200) != 0);
        }

        /**
         * <pre>
         * A human-readable value associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional string entity_value = 9;</code>
         *
         * @return The entityValue.
         */
        public java.lang.String getEntityValue() {
            java.lang.Object ref = entityValue_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    entityValue_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable value associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional string entity_value = 9;</code>
         *
         * @return The bytes for entityValue.
         */
        public com.google.protobuf.ByteString
        getEntityValueBytes() {
            java.lang.Object ref = entityValue_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                entityValue_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ENTITY_LOCATION_FIELD_NUMBER = 21;
        private org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto entityLocation_;

        /**
         * <pre>
         * Location information associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto entity_location = 21;</code>
         *
         * @return Whether the entityLocation field is set.
         */
        public boolean hasEntityLocation() {
            return ((bitField0_ & 0x00000400) != 0);
        }

        /**
         * <pre>
         * Location information associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto entity_location = 21;</code>
         *
         * @return The entityLocation.
         */
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getEntityLocation() {
            return entityLocation_ == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : entityLocation_;
        }

        /**
         * <pre>
         * Location information associated with the GTFS entity experiencing a
         * problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto entity_location = 21;</code>
         */
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder getEntityLocationOrBuilder() {
            return entityLocation_ == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : entityLocation_;
        }

        public static final int ALT_ENTITY_ROW_FIELD_NUMBER = 10;
        private int altEntityRow_;

        /**
         * <pre>
         * The row number in a CSV file of an alternate GTFS entity that's in
         * conflict with the primary row.
         * </pre>
         *
         * <code>optional uint32 alt_entity_row = 10;</code>
         *
         * @return Whether the altEntityRow field is set.
         */
        public boolean hasAltEntityRow() {
            return ((bitField0_ & 0x00000800) != 0);
        }

        /**
         * <pre>
         * The row number in a CSV file of an alternate GTFS entity that's in
         * conflict with the primary row.
         * </pre>
         *
         * <code>optional uint32 alt_entity_row = 10;</code>
         *
         * @return The altEntityRow.
         */
        public int getAltEntityRow() {
            return altEntityRow_;
        }

        public static final int ALT_ENTITY_NAME_FIELD_NUMBER = 11;
        private volatile java.lang.Object altEntityName_;

        /**
         * <pre>
         * A human-readable name associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop name).
         * </pre>
         *
         * <code>optional string alt_entity_name = 11;</code>
         *
         * @return Whether the altEntityName field is set.
         */
        public boolean hasAltEntityName() {
            return ((bitField0_ & 0x00001000) != 0);
        }

        /**
         * <pre>
         * A human-readable name associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop name).
         * </pre>
         *
         * <code>optional string alt_entity_name = 11;</code>
         *
         * @return The altEntityName.
         */
        public java.lang.String getAltEntityName() {
            java.lang.Object ref = altEntityName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    altEntityName_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable name associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop name).
         * </pre>
         *
         * <code>optional string alt_entity_name = 11;</code>
         *
         * @return The bytes for altEntityName.
         */
        public com.google.protobuf.ByteString
        getAltEntityNameBytes() {
            java.lang.Object ref = altEntityName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                altEntityName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ALT_ENTITY_ID_FIELD_NUMBER = 12;
        private volatile java.lang.Object altEntityId_;

        /**
         * <pre>
         * A human-readable id associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop id).
         * </pre>
         *
         * <code>optional string alt_entity_id = 12;</code>
         *
         * @return Whether the altEntityId field is set.
         */
        public boolean hasAltEntityId() {
            return ((bitField0_ & 0x00002000) != 0);
        }

        /**
         * <pre>
         * A human-readable id associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop id).
         * </pre>
         *
         * <code>optional string alt_entity_id = 12;</code>
         *
         * @return The altEntityId.
         */
        public java.lang.String getAltEntityId() {
            java.lang.Object ref = altEntityId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    altEntityId_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable id associated with an alternate GTFS entity that's in
         * conflict with the primary row (eg. conflicting stop id).
         * </pre>
         *
         * <code>optional string alt_entity_id = 12;</code>
         *
         * @return The bytes for altEntityId.
         */
        public com.google.protobuf.ByteString
        getAltEntityIdBytes() {
            java.lang.Object ref = altEntityId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                altEntityId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ALT_ENTITY_VALUE_FIELD_NUMBER = 13;
        private volatile java.lang.Object altEntityValue_;

        /**
         * <pre>
         * A human-readable value associated with the alernate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional string alt_entity_value = 13;</code>
         *
         * @return Whether the altEntityValue field is set.
         */
        public boolean hasAltEntityValue() {
            return ((bitField0_ & 0x00004000) != 0);
        }

        /**
         * <pre>
         * A human-readable value associated with the alernate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional string alt_entity_value = 13;</code>
         *
         * @return The altEntityValue.
         */
        public java.lang.String getAltEntityValue() {
            java.lang.Object ref = altEntityValue_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    altEntityValue_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable value associated with the alernate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional string alt_entity_value = 13;</code>
         *
         * @return The bytes for altEntityValue.
         */
        public com.google.protobuf.ByteString
        getAltEntityValueBytes() {
            java.lang.Object ref = altEntityValue_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                altEntityValue_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ALT_ENTITY_LOCATION_FIELD_NUMBER = 22;
        private org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto altEntityLocation_;

        /**
         * <pre>
         * Location information associated with the alternate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
         *
         * @return Whether the altEntityLocation field is set.
         */
        public boolean hasAltEntityLocation() {
            return ((bitField0_ & 0x00008000) != 0);
        }

        /**
         * <pre>
         * Location information associated with the alternate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
         *
         * @return The altEntityLocation.
         */
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getAltEntityLocation() {
            return altEntityLocation_ == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : altEntityLocation_;
        }

        /**
         * <pre>
         * Location information associated with the alternate GTFS entity
         * experiencing a problem.
         * </pre>
         *
         * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
         */
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder getAltEntityLocationOrBuilder() {
            return altEntityLocation_ == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : altEntityLocation_;
        }

        public static final int PARENT_ENTITY_ROW_FIELD_NUMBER = 18;
        private int parentEntityRow_;

        /**
         * <pre>
         * The row number in a CSV file of a GTFS entity that's a parent to the
         * primary entity.
         * </pre>
         *
         * <code>optional uint32 parent_entity_row = 18;</code>
         *
         * @return Whether the parentEntityRow field is set.
         */
        public boolean hasParentEntityRow() {
            return ((bitField0_ & 0x00010000) != 0);
        }

        /**
         * <pre>
         * The row number in a CSV file of a GTFS entity that's a parent to the
         * primary entity.
         * </pre>
         *
         * <code>optional uint32 parent_entity_row = 18;</code>
         *
         * @return The parentEntityRow.
         */
        public int getParentEntityRow() {
            return parentEntityRow_;
        }

        public static final int PARENT_ENTITY_NAME_FIELD_NUMBER = 19;
        private volatile java.lang.Object parentEntityName_;

        /**
         * <pre>
         * A human-readable name associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_name = 19;</code>
         *
         * @return Whether the parentEntityName field is set.
         */
        public boolean hasParentEntityName() {
            return ((bitField0_ & 0x00020000) != 0);
        }

        /**
         * <pre>
         * A human-readable name associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_name = 19;</code>
         *
         * @return The parentEntityName.
         */
        public java.lang.String getParentEntityName() {
            java.lang.Object ref = parentEntityName_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    parentEntityName_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable name associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_name = 19;</code>
         *
         * @return The bytes for parentEntityName.
         */
        public com.google.protobuf.ByteString
        getParentEntityNameBytes() {
            java.lang.Object ref = parentEntityName_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                parentEntityName_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int PARENT_ENTITY_ID_FIELD_NUMBER = 20;
        private volatile java.lang.Object parentEntityId_;

        /**
         * <pre>
         * A human-readable id associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_id = 20;</code>
         *
         * @return Whether the parentEntityId field is set.
         */
        public boolean hasParentEntityId() {
            return ((bitField0_ & 0x00040000) != 0);
        }

        /**
         * <pre>
         * A human-readable id associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_id = 20;</code>
         *
         * @return The parentEntityId.
         */
        public java.lang.String getParentEntityId() {
            java.lang.Object ref = parentEntityId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    parentEntityId_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A human-readable id associated with the parent GTFS entity.
         * </pre>
         *
         * <code>optional string parent_entity_id = 20;</code>
         *
         * @return The bytes for parentEntityId.
         */
        public com.google.protobuf.ByteString
        getParentEntityIdBytes() {
            java.lang.Object ref = parentEntityId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                parentEntityId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int VALUE_FIELD_NUMBER = 14;
        private volatile java.lang.Object value_;

        /**
         * <pre>
         * A value associated with the problem.  This could be an invalid value
         * pulled from the GTFS directly or some other related value (eg "travel is
         * to too fast, a X kph", where X is replaced with 'value').
         * </pre>
         *
         * <code>optional string value = 14;</code>
         *
         * @return Whether the value field is set.
         */
        public boolean hasValue() {
            return ((bitField0_ & 0x00080000) != 0);
        }

        /**
         * <pre>
         * A value associated with the problem.  This could be an invalid value
         * pulled from the GTFS directly or some other related value (eg "travel is
         * to too fast, a X kph", where X is replaced with 'value').
         * </pre>
         *
         * <code>optional string value = 14;</code>
         *
         * @return The value.
         */
        public java.lang.String getValue() {
            java.lang.Object ref = value_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    value_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * A value associated with the problem.  This could be an invalid value
         * pulled from the GTFS directly or some other related value (eg "travel is
         * to too fast, a X kph", where X is replaced with 'value').
         * </pre>
         *
         * <code>optional string value = 14;</code>
         *
         * @return The bytes for value.
         */
        public com.google.protobuf.ByteString
        getValueBytes() {
            java.lang.Object ref = value_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                value_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int ALT_VALUE_FIELD_NUMBER = 23;
        private volatile java.lang.Object altValue_;

        /**
         * <pre>
         * An alternate value associated with the problem.  Similar to 'value' field
         * in use, use 'value' and 'alt_value' when two values are associated with
         * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
         * the two values are associated with separate entities in the same file.
         * </pre>
         *
         * <code>optional string alt_value = 23;</code>
         *
         * @return Whether the altValue field is set.
         */
        public boolean hasAltValue() {
            return ((bitField0_ & 0x00100000) != 0);
        }

        /**
         * <pre>
         * An alternate value associated with the problem.  Similar to 'value' field
         * in use, use 'value' and 'alt_value' when two values are associated with
         * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
         * the two values are associated with separate entities in the same file.
         * </pre>
         *
         * <code>optional string alt_value = 23;</code>
         *
         * @return The altValue.
         */
        public java.lang.String getAltValue() {
            java.lang.Object ref = altValue_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    altValue_ = s;
                }
                return s;
            }
        }

        /**
         * <pre>
         * An alternate value associated with the problem.  Similar to 'value' field
         * in use, use 'value' and 'alt_value' when two values are associated with
         * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
         * the two values are associated with separate entities in the same file.
         * </pre>
         *
         * <code>optional string alt_value = 23;</code>
         *
         * @return The bytes for altValue.
         */
        public com.google.protobuf.ByteString
        getAltValueBytes() {
            java.lang.Object ref = altValue_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                altValue_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int IMPORTANCE_FIELD_NUMBER = 24;
        private double importance_;

        /**
         * <pre>
         * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
         * importance of the problem based on the importance of the locations of the
         * geographical entities involved.
         * </pre>
         *
         * <code>optional double importance = 24;</code>
         *
         * @return Whether the importance field is set.
         */
        public boolean hasImportance() {
            return ((bitField0_ & 0x00200000) != 0);
        }

        /**
         * <pre>
         * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
         * importance of the problem based on the importance of the locations of the
         * geographical entities involved.
         * </pre>
         *
         * <code>optional double importance = 24;</code>
         *
         * @return The importance.
         */
        public double getImportance() {
            return importance_;
        }

        private byte memoizedIsInitialized = -1;

        @java.lang.Override
        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            memoizedIsInitialized = 1;
            return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            if (((bitField0_ & 0x00000001) != 0)) {
                output.writeEnum(1, type_);
            }
            if (((bitField0_ & 0x00000002) != 0)) {
                output.writeEnum(2, severity_);
            }
            if (((bitField0_ & 0x00000004) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 3, csvFileName_);
            }
            if (((bitField0_ & 0x00000008) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 4, csvKeyName_);
            }
            for (int i = 0; i < csvColumnName_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 5, csvColumnName_.getRaw(i));
            }
            if (((bitField0_ & 0x00000040) != 0)) {
                output.writeUInt32(6, entityRow_);
            }
            if (((bitField0_ & 0x00000080) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 7, entityName_);
            }
            if (((bitField0_ & 0x00000100) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 8, entityId_);
            }
            if (((bitField0_ & 0x00000200) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 9, entityValue_);
            }
            if (((bitField0_ & 0x00000800) != 0)) {
                output.writeUInt32(10, altEntityRow_);
            }
            if (((bitField0_ & 0x00001000) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 11, altEntityName_);
            }
            if (((bitField0_ & 0x00002000) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 12, altEntityId_);
            }
            if (((bitField0_ & 0x00004000) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 13, altEntityValue_);
            }
            if (((bitField0_ & 0x00080000) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 14, value_);
            }
            if (((bitField0_ & 0x00000010) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 15, otherCsvFileName_);
            }
            if (((bitField0_ & 0x00000020) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 16, otherCsvKeyName_);
            }
            for (int i = 0; i < otherCsvColumnName_.size(); i++) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 17, otherCsvColumnName_.getRaw(i));
            }
            if (((bitField0_ & 0x00010000) != 0)) {
                output.writeUInt32(18, parentEntityRow_);
            }
            if (((bitField0_ & 0x00020000) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 19, parentEntityName_);
            }
            if (((bitField0_ & 0x00040000) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 20, parentEntityId_);
            }
            if (((bitField0_ & 0x00000400) != 0)) {
                output.writeMessage(21, getEntityLocation());
            }
            if (((bitField0_ & 0x00008000) != 0)) {
                output.writeMessage(22, getAltEntityLocation());
            }
            if (((bitField0_ & 0x00100000) != 0)) {
                com.google.protobuf.GeneratedMessageV3.writeString(output, 23, altValue_);
            }
            if (((bitField0_ & 0x00200000) != 0)) {
                output.writeDouble(24, importance_);
            }
            unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
            int size = memoizedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(1, type_);
            }
            if (((bitField0_ & 0x00000002) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeEnumSize(2, severity_);
            }
            if (((bitField0_ & 0x00000004) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, csvFileName_);
            }
            if (((bitField0_ & 0x00000008) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, csvKeyName_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < csvColumnName_.size(); i++) {
                    dataSize += computeStringSizeNoTag(csvColumnName_.getRaw(i));
                }
                size += dataSize;
                size += 1 * getCsvColumnNameList().size();
            }
            if (((bitField0_ & 0x00000040) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(6, entityRow_);
            }
            if (((bitField0_ & 0x00000080) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, entityName_);
            }
            if (((bitField0_ & 0x00000100) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, entityId_);
            }
            if (((bitField0_ & 0x00000200) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, entityValue_);
            }
            if (((bitField0_ & 0x00000800) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(10, altEntityRow_);
            }
            if (((bitField0_ & 0x00001000) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, altEntityName_);
            }
            if (((bitField0_ & 0x00002000) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(12, altEntityId_);
            }
            if (((bitField0_ & 0x00004000) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(13, altEntityValue_);
            }
            if (((bitField0_ & 0x00080000) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(14, value_);
            }
            if (((bitField0_ & 0x00000010) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(15, otherCsvFileName_);
            }
            if (((bitField0_ & 0x00000020) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(16, otherCsvKeyName_);
            }
            {
                int dataSize = 0;
                for (int i = 0; i < otherCsvColumnName_.size(); i++) {
                    dataSize += computeStringSizeNoTag(otherCsvColumnName_.getRaw(i));
                }
                size += dataSize;
                size += 2 * getOtherCsvColumnNameList().size();
            }
            if (((bitField0_ & 0x00010000) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeUInt32Size(18, parentEntityRow_);
            }
            if (((bitField0_ & 0x00020000) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(19, parentEntityName_);
            }
            if (((bitField0_ & 0x00040000) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(20, parentEntityId_);
            }
            if (((bitField0_ & 0x00000400) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(21, getEntityLocation());
            }
            if (((bitField0_ & 0x00008000) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(22, getAltEntityLocation());
            }
            if (((bitField0_ & 0x00100000) != 0)) {
                size += com.google.protobuf.GeneratedMessageV3.computeStringSize(23, altValue_);
            }
            if (((bitField0_ & 0x00200000) != 0)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeDoubleSize(24, importance_);
            }
            size += unknownFields.getSerializedSize();
            memoizedSize = size;
            return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
            if (obj == this) {
                return true;
            }
            if (!(obj instanceof org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem)) {
                return super.equals(obj);
            }
            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem other = (org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem) obj;

            if (hasType() != other.hasType()) return false;
            if (hasType()) {
                if (type_ != other.type_) return false;
            }
            if (hasSeverity() != other.hasSeverity()) return false;
            if (hasSeverity()) {
                if (severity_ != other.severity_) return false;
            }
            if (hasCsvFileName() != other.hasCsvFileName()) return false;
            if (hasCsvFileName()) {
                if (!getCsvFileName()
                        .equals(other.getCsvFileName())) return false;
            }
            if (hasCsvKeyName() != other.hasCsvKeyName()) return false;
            if (hasCsvKeyName()) {
                if (!getCsvKeyName()
                        .equals(other.getCsvKeyName())) return false;
            }
            if (!getCsvColumnNameList()
                    .equals(other.getCsvColumnNameList())) return false;
            if (hasOtherCsvFileName() != other.hasOtherCsvFileName()) return false;
            if (hasOtherCsvFileName()) {
                if (!getOtherCsvFileName()
                        .equals(other.getOtherCsvFileName())) return false;
            }
            if (hasOtherCsvKeyName() != other.hasOtherCsvKeyName()) return false;
            if (hasOtherCsvKeyName()) {
                if (!getOtherCsvKeyName()
                        .equals(other.getOtherCsvKeyName())) return false;
            }
            if (!getOtherCsvColumnNameList()
                    .equals(other.getOtherCsvColumnNameList())) return false;
            if (hasEntityRow() != other.hasEntityRow()) return false;
            if (hasEntityRow()) {
                if (getEntityRow()
                        != other.getEntityRow()) return false;
            }
            if (hasEntityName() != other.hasEntityName()) return false;
            if (hasEntityName()) {
                if (!getEntityName()
                        .equals(other.getEntityName())) return false;
            }
            if (hasEntityId() != other.hasEntityId()) return false;
            if (hasEntityId()) {
                if (!getEntityId()
                        .equals(other.getEntityId())) return false;
            }
            if (hasEntityValue() != other.hasEntityValue()) return false;
            if (hasEntityValue()) {
                if (!getEntityValue()
                        .equals(other.getEntityValue())) return false;
            }
            if (hasEntityLocation() != other.hasEntityLocation()) return false;
            if (hasEntityLocation()) {
                if (!getEntityLocation()
                        .equals(other.getEntityLocation())) return false;
            }
            if (hasAltEntityRow() != other.hasAltEntityRow()) return false;
            if (hasAltEntityRow()) {
                if (getAltEntityRow()
                        != other.getAltEntityRow()) return false;
            }
            if (hasAltEntityName() != other.hasAltEntityName()) return false;
            if (hasAltEntityName()) {
                if (!getAltEntityName()
                        .equals(other.getAltEntityName())) return false;
            }
            if (hasAltEntityId() != other.hasAltEntityId()) return false;
            if (hasAltEntityId()) {
                if (!getAltEntityId()
                        .equals(other.getAltEntityId())) return false;
            }
            if (hasAltEntityValue() != other.hasAltEntityValue()) return false;
            if (hasAltEntityValue()) {
                if (!getAltEntityValue()
                        .equals(other.getAltEntityValue())) return false;
            }
            if (hasAltEntityLocation() != other.hasAltEntityLocation()) return false;
            if (hasAltEntityLocation()) {
                if (!getAltEntityLocation()
                        .equals(other.getAltEntityLocation())) return false;
            }
            if (hasParentEntityRow() != other.hasParentEntityRow()) return false;
            if (hasParentEntityRow()) {
                if (getParentEntityRow()
                        != other.getParentEntityRow()) return false;
            }
            if (hasParentEntityName() != other.hasParentEntityName()) return false;
            if (hasParentEntityName()) {
                if (!getParentEntityName()
                        .equals(other.getParentEntityName())) return false;
            }
            if (hasParentEntityId() != other.hasParentEntityId()) return false;
            if (hasParentEntityId()) {
                if (!getParentEntityId()
                        .equals(other.getParentEntityId())) return false;
            }
            if (hasValue() != other.hasValue()) return false;
            if (hasValue()) {
                if (!getValue()
                        .equals(other.getValue())) return false;
            }
            if (hasAltValue() != other.hasAltValue()) return false;
            if (hasAltValue()) {
                if (!getAltValue()
                        .equals(other.getAltValue())) return false;
            }
            if (hasImportance() != other.hasImportance()) return false;
            if (hasImportance()) {
                if (java.lang.Double.doubleToLongBits(getImportance())
                        != java.lang.Double.doubleToLongBits(
                        other.getImportance())) return false;
            }
            if (!unknownFields.equals(other.unknownFields)) return false;
            return true;
        }

        @java.lang.Override
        public int hashCode() {
            if (memoizedHashCode != 0) {
                return memoizedHashCode;
            }
            int hash = 41;
            hash = (19 * hash) + getDescriptor().hashCode();
            if (hasType()) {
                hash = (37 * hash) + TYPE_FIELD_NUMBER;
                hash = (53 * hash) + type_;
            }
            if (hasSeverity()) {
                hash = (37 * hash) + SEVERITY_FIELD_NUMBER;
                hash = (53 * hash) + severity_;
            }
            if (hasCsvFileName()) {
                hash = (37 * hash) + CSV_FILE_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getCsvFileName().hashCode();
            }
            if (hasCsvKeyName()) {
                hash = (37 * hash) + CSV_KEY_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getCsvKeyName().hashCode();
            }
            if (getCsvColumnNameCount() > 0) {
                hash = (37 * hash) + CSV_COLUMN_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getCsvColumnNameList().hashCode();
            }
            if (hasOtherCsvFileName()) {
                hash = (37 * hash) + OTHER_CSV_FILE_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getOtherCsvFileName().hashCode();
            }
            if (hasOtherCsvKeyName()) {
                hash = (37 * hash) + OTHER_CSV_KEY_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getOtherCsvKeyName().hashCode();
            }
            if (getOtherCsvColumnNameCount() > 0) {
                hash = (37 * hash) + OTHER_CSV_COLUMN_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getOtherCsvColumnNameList().hashCode();
            }
            if (hasEntityRow()) {
                hash = (37 * hash) + ENTITY_ROW_FIELD_NUMBER;
                hash = (53 * hash) + getEntityRow();
            }
            if (hasEntityName()) {
                hash = (37 * hash) + ENTITY_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getEntityName().hashCode();
            }
            if (hasEntityId()) {
                hash = (37 * hash) + ENTITY_ID_FIELD_NUMBER;
                hash = (53 * hash) + getEntityId().hashCode();
            }
            if (hasEntityValue()) {
                hash = (37 * hash) + ENTITY_VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getEntityValue().hashCode();
            }
            if (hasEntityLocation()) {
                hash = (37 * hash) + ENTITY_LOCATION_FIELD_NUMBER;
                hash = (53 * hash) + getEntityLocation().hashCode();
            }
            if (hasAltEntityRow()) {
                hash = (37 * hash) + ALT_ENTITY_ROW_FIELD_NUMBER;
                hash = (53 * hash) + getAltEntityRow();
            }
            if (hasAltEntityName()) {
                hash = (37 * hash) + ALT_ENTITY_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getAltEntityName().hashCode();
            }
            if (hasAltEntityId()) {
                hash = (37 * hash) + ALT_ENTITY_ID_FIELD_NUMBER;
                hash = (53 * hash) + getAltEntityId().hashCode();
            }
            if (hasAltEntityValue()) {
                hash = (37 * hash) + ALT_ENTITY_VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getAltEntityValue().hashCode();
            }
            if (hasAltEntityLocation()) {
                hash = (37 * hash) + ALT_ENTITY_LOCATION_FIELD_NUMBER;
                hash = (53 * hash) + getAltEntityLocation().hashCode();
            }
            if (hasParentEntityRow()) {
                hash = (37 * hash) + PARENT_ENTITY_ROW_FIELD_NUMBER;
                hash = (53 * hash) + getParentEntityRow();
            }
            if (hasParentEntityName()) {
                hash = (37 * hash) + PARENT_ENTITY_NAME_FIELD_NUMBER;
                hash = (53 * hash) + getParentEntityName().hashCode();
            }
            if (hasParentEntityId()) {
                hash = (37 * hash) + PARENT_ENTITY_ID_FIELD_NUMBER;
                hash = (53 * hash) + getParentEntityId().hashCode();
            }
            if (hasValue()) {
                hash = (37 * hash) + VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getValue().hashCode();
            }
            if (hasAltValue()) {
                hash = (37 * hash) + ALT_VALUE_FIELD_NUMBER;
                hash = (53 * hash) + getAltValue().hashCode();
            }
            if (hasImportance()) {
                hash = (37 * hash) + IMPORTANCE_FIELD_NUMBER;
                hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
                        java.lang.Double.doubleToLongBits(getImportance()));
            }
            hash = (29 * hash) + unknownFields.hashCode();
            memoizedHashCode = hash;
            return hash;
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                java.nio.ByteBuffer data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                java.nio.ByteBuffer data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input);
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return com.google.protobuf.GeneratedMessageV3
                    .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder() {
            return DEFAULT_INSTANCE.toBuilder();
        }

        public static Builder newBuilder(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem prototype) {
            return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }

        @java.lang.Override
        public Builder toBuilder() {
            return this == DEFAULT_INSTANCE
                    ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * <pre>
         * A specific GTFS validation problem.
         * </pre>
         * <p>
         * Protobuf type {@code outputProto.GtfsProblem}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:outputProto.GtfsProblem)
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblemOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_GtfsProblem_descriptor;
            }

            @java.lang.Override
            protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_GtfsProblem_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.class, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Builder.class);
            }

            // Construct using org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessageV3
                        .alwaysUseFieldBuilders) {
                    getEntityLocationFieldBuilder();
                    getAltEntityLocationFieldBuilder();
                }
            }

            @java.lang.Override
            public Builder clear() {
                super.clear();
                type_ = 1;
                bitField0_ = (bitField0_ & ~0x00000001);
                severity_ = 1;
                bitField0_ = (bitField0_ & ~0x00000002);
                csvFileName_ = "";
                bitField0_ = (bitField0_ & ~0x00000004);
                csvKeyName_ = "";
                bitField0_ = (bitField0_ & ~0x00000008);
                csvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000010);
                otherCsvFileName_ = "";
                bitField0_ = (bitField0_ & ~0x00000020);
                otherCsvKeyName_ = "";
                bitField0_ = (bitField0_ & ~0x00000040);
                otherCsvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000080);
                entityRow_ = 0;
                bitField0_ = (bitField0_ & ~0x00000100);
                entityName_ = "";
                bitField0_ = (bitField0_ & ~0x00000200);
                entityId_ = "";
                bitField0_ = (bitField0_ & ~0x00000400);
                entityValue_ = "";
                bitField0_ = (bitField0_ & ~0x00000800);
                if (entityLocationBuilder_ == null) {
                    entityLocation_ = null;
                } else {
                    entityLocationBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00001000);
                altEntityRow_ = 0;
                bitField0_ = (bitField0_ & ~0x00002000);
                altEntityName_ = "";
                bitField0_ = (bitField0_ & ~0x00004000);
                altEntityId_ = "";
                bitField0_ = (bitField0_ & ~0x00008000);
                altEntityValue_ = "";
                bitField0_ = (bitField0_ & ~0x00010000);
                if (altEntityLocationBuilder_ == null) {
                    altEntityLocation_ = null;
                } else {
                    altEntityLocationBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00020000);
                parentEntityRow_ = 0;
                bitField0_ = (bitField0_ & ~0x00040000);
                parentEntityName_ = "";
                bitField0_ = (bitField0_ & ~0x00080000);
                parentEntityId_ = "";
                bitField0_ = (bitField0_ & ~0x00100000);
                value_ = "";
                bitField0_ = (bitField0_ & ~0x00200000);
                altValue_ = "";
                bitField0_ = (bitField0_ & ~0x00400000);
                importance_ = 0D;
                bitField0_ = (bitField0_ & ~0x00800000);
                return this;
            }

            @java.lang.Override
            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.internal_static_outputProto_GtfsProblem_descriptor;
            }

            @java.lang.Override
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem getDefaultInstanceForType() {
                return org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.getDefaultInstance();
            }

            @java.lang.Override
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem build() {
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            @java.lang.Override
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem buildPartial() {
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem result = new org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) != 0)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.type_ = type_;
                if (((from_bitField0_ & 0x00000002) != 0)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.severity_ = severity_;
                if (((from_bitField0_ & 0x00000004) != 0)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.csvFileName_ = csvFileName_;
                if (((from_bitField0_ & 0x00000008) != 0)) {
                    to_bitField0_ |= 0x00000008;
                }
                result.csvKeyName_ = csvKeyName_;
                if (((bitField0_ & 0x00000010) != 0)) {
                    csvColumnName_ = csvColumnName_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000010);
                }
                result.csvColumnName_ = csvColumnName_;
                if (((from_bitField0_ & 0x00000020) != 0)) {
                    to_bitField0_ |= 0x00000010;
                }
                result.otherCsvFileName_ = otherCsvFileName_;
                if (((from_bitField0_ & 0x00000040) != 0)) {
                    to_bitField0_ |= 0x00000020;
                }
                result.otherCsvKeyName_ = otherCsvKeyName_;
                if (((bitField0_ & 0x00000080) != 0)) {
                    otherCsvColumnName_ = otherCsvColumnName_.getUnmodifiableView();
                    bitField0_ = (bitField0_ & ~0x00000080);
                }
                result.otherCsvColumnName_ = otherCsvColumnName_;
                if (((from_bitField0_ & 0x00000100) != 0)) {
                    result.entityRow_ = entityRow_;
                    to_bitField0_ |= 0x00000040;
                }
                if (((from_bitField0_ & 0x00000200) != 0)) {
                    to_bitField0_ |= 0x00000080;
                }
                result.entityName_ = entityName_;
                if (((from_bitField0_ & 0x00000400) != 0)) {
                    to_bitField0_ |= 0x00000100;
                }
                result.entityId_ = entityId_;
                if (((from_bitField0_ & 0x00000800) != 0)) {
                    to_bitField0_ |= 0x00000200;
                }
                result.entityValue_ = entityValue_;
                if (((from_bitField0_ & 0x00001000) != 0)) {
                    if (entityLocationBuilder_ == null) {
                        result.entityLocation_ = entityLocation_;
                    } else {
                        result.entityLocation_ = entityLocationBuilder_.build();
                    }
                    to_bitField0_ |= 0x00000400;
                }
                if (((from_bitField0_ & 0x00002000) != 0)) {
                    result.altEntityRow_ = altEntityRow_;
                    to_bitField0_ |= 0x00000800;
                }
                if (((from_bitField0_ & 0x00004000) != 0)) {
                    to_bitField0_ |= 0x00001000;
                }
                result.altEntityName_ = altEntityName_;
                if (((from_bitField0_ & 0x00008000) != 0)) {
                    to_bitField0_ |= 0x00002000;
                }
                result.altEntityId_ = altEntityId_;
                if (((from_bitField0_ & 0x00010000) != 0)) {
                    to_bitField0_ |= 0x00004000;
                }
                result.altEntityValue_ = altEntityValue_;
                if (((from_bitField0_ & 0x00020000) != 0)) {
                    if (altEntityLocationBuilder_ == null) {
                        result.altEntityLocation_ = altEntityLocation_;
                    } else {
                        result.altEntityLocation_ = altEntityLocationBuilder_.build();
                    }
                    to_bitField0_ |= 0x00008000;
                }
                if (((from_bitField0_ & 0x00040000) != 0)) {
                    result.parentEntityRow_ = parentEntityRow_;
                    to_bitField0_ |= 0x00010000;
                }
                if (((from_bitField0_ & 0x00080000) != 0)) {
                    to_bitField0_ |= 0x00020000;
                }
                result.parentEntityName_ = parentEntityName_;
                if (((from_bitField0_ & 0x00100000) != 0)) {
                    to_bitField0_ |= 0x00040000;
                }
                result.parentEntityId_ = parentEntityId_;
                if (((from_bitField0_ & 0x00200000) != 0)) {
                    to_bitField0_ |= 0x00080000;
                }
                result.value_ = value_;
                if (((from_bitField0_ & 0x00400000) != 0)) {
                    to_bitField0_ |= 0x00100000;
                }
                result.altValue_ = altValue_;
                if (((from_bitField0_ & 0x00800000) != 0)) {
                    result.importance_ = importance_;
                    to_bitField0_ |= 0x00200000;
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            @java.lang.Override
            public Builder clone() {
                return super.clone();
            }

            @java.lang.Override
            public Builder setField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.setField(field, value);
            }

            @java.lang.Override
            public Builder clearField(
                    com.google.protobuf.Descriptors.FieldDescriptor field) {
                return super.clearField(field);
            }

            @java.lang.Override
            public Builder clearOneof(
                    com.google.protobuf.Descriptors.OneofDescriptor oneof) {
                return super.clearOneof(oneof);
            }

            @java.lang.Override
            public Builder setRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    int index, java.lang.Object value) {
                return super.setRepeatedField(field, index, value);
            }

            @java.lang.Override
            public Builder addRepeatedField(
                    com.google.protobuf.Descriptors.FieldDescriptor field,
                    java.lang.Object value) {
                return super.addRepeatedField(field, value);
            }

            @java.lang.Override
            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem) {
                    return mergeFrom((org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem other) {
                if (other == org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.getDefaultInstance())
                    return this;
                if (other.hasType()) {
                    setType(other.getType());
                }
                if (other.hasSeverity()) {
                    setSeverity(other.getSeverity());
                }
                if (other.hasCsvFileName()) {
                    bitField0_ |= 0x00000004;
                    csvFileName_ = other.csvFileName_;
                    onChanged();
                }
                if (other.hasCsvKeyName()) {
                    bitField0_ |= 0x00000008;
                    csvKeyName_ = other.csvKeyName_;
                    onChanged();
                }
                if (!other.csvColumnName_.isEmpty()) {
                    if (csvColumnName_.isEmpty()) {
                        csvColumnName_ = other.csvColumnName_;
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        ensureCsvColumnNameIsMutable();
                        csvColumnName_.addAll(other.csvColumnName_);
                    }
                    onChanged();
                }
                if (other.hasOtherCsvFileName()) {
                    bitField0_ |= 0x00000020;
                    otherCsvFileName_ = other.otherCsvFileName_;
                    onChanged();
                }
                if (other.hasOtherCsvKeyName()) {
                    bitField0_ |= 0x00000040;
                    otherCsvKeyName_ = other.otherCsvKeyName_;
                    onChanged();
                }
                if (!other.otherCsvColumnName_.isEmpty()) {
                    if (otherCsvColumnName_.isEmpty()) {
                        otherCsvColumnName_ = other.otherCsvColumnName_;
                        bitField0_ = (bitField0_ & ~0x00000080);
                    } else {
                        ensureOtherCsvColumnNameIsMutable();
                        otherCsvColumnName_.addAll(other.otherCsvColumnName_);
                    }
                    onChanged();
                }
                if (other.hasEntityRow()) {
                    setEntityRow(other.getEntityRow());
                }
                if (other.hasEntityName()) {
                    bitField0_ |= 0x00000200;
                    entityName_ = other.entityName_;
                    onChanged();
                }
                if (other.hasEntityId()) {
                    bitField0_ |= 0x00000400;
                    entityId_ = other.entityId_;
                    onChanged();
                }
                if (other.hasEntityValue()) {
                    bitField0_ |= 0x00000800;
                    entityValue_ = other.entityValue_;
                    onChanged();
                }
                if (other.hasEntityLocation()) {
                    mergeEntityLocation(other.getEntityLocation());
                }
                if (other.hasAltEntityRow()) {
                    setAltEntityRow(other.getAltEntityRow());
                }
                if (other.hasAltEntityName()) {
                    bitField0_ |= 0x00004000;
                    altEntityName_ = other.altEntityName_;
                    onChanged();
                }
                if (other.hasAltEntityId()) {
                    bitField0_ |= 0x00008000;
                    altEntityId_ = other.altEntityId_;
                    onChanged();
                }
                if (other.hasAltEntityValue()) {
                    bitField0_ |= 0x00010000;
                    altEntityValue_ = other.altEntityValue_;
                    onChanged();
                }
                if (other.hasAltEntityLocation()) {
                    mergeAltEntityLocation(other.getAltEntityLocation());
                }
                if (other.hasParentEntityRow()) {
                    setParentEntityRow(other.getParentEntityRow());
                }
                if (other.hasParentEntityName()) {
                    bitField0_ |= 0x00080000;
                    parentEntityName_ = other.parentEntityName_;
                    onChanged();
                }
                if (other.hasParentEntityId()) {
                    bitField0_ |= 0x00100000;
                    parentEntityId_ = other.parentEntityId_;
                    onChanged();
                }
                if (other.hasValue()) {
                    bitField0_ |= 0x00200000;
                    value_ = other.value_;
                    onChanged();
                }
                if (other.hasAltValue()) {
                    bitField0_ |= 0x00400000;
                    altValue_ = other.altValue_;
                    onChanged();
                }
                if (other.hasImportance()) {
                    setImportance(other.getImportance());
                }
                this.mergeUnknownFields(other.unknownFields);
                onChanged();
                return this;
            }

            @java.lang.Override
            public final boolean isInitialized() {
                return true;
            }

            @java.lang.Override
            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem) e.getUnfinishedMessage();
                    throw e.unwrapIOException();
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private int type_ = 1;

            /**
             * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
             *
             * @return Whether the type field is set.
             */
            public boolean hasType() {
                return ((bitField0_ & 0x00000001) != 0);
            }

            /**
             * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
             *
             * @return The type.
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type getType() {
                @SuppressWarnings("deprecation")
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type result = org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type.valueOf(type_);
                return result == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type.TYPE_CSV_UNKNOWN_ERROR : result;
            }

            /**
             * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
             *
             * @param value The type to set.
             * @return This builder for chaining.
             */
            public Builder setType(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Type value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                type_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>optional .outputProto.GtfsProblem.Type type = 1;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearType() {
                bitField0_ = (bitField0_ & ~0x00000001);
                type_ = 1;
                onChanged();
                return this;
            }

            private int severity_ = 1;

            /**
             * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
             *
             * @return Whether the severity field is set.
             */
            public boolean hasSeverity() {
                return ((bitField0_ & 0x00000002) != 0);
            }

            /**
             * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
             *
             * @return The severity.
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity getSeverity() {
                @SuppressWarnings("deprecation")
                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity result = org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity.valueOf(severity_);
                return result == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity.WARNING : result;
            }

            /**
             * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
             *
             * @param value The severity to set.
             * @return This builder for chaining.
             */
            public Builder setSeverity(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem.Severity value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                severity_ = value.getNumber();
                onChanged();
                return this;
            }

            /**
             * <code>optional .outputProto.GtfsProblem.Severity severity = 2;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearSeverity() {
                bitField0_ = (bitField0_ & ~0x00000002);
                severity_ = 1;
                onChanged();
                return this;
            }

            private java.lang.Object csvFileName_ = "";

            /**
             * <pre>
             * The name of the CSV file (eg. "stops.txt") where this problem occurred.
             * </pre>
             *
             * <code>optional string csv_file_name = 3;</code>
             *
             * @return Whether the csvFileName field is set.
             */
            public boolean hasCsvFileName() {
                return ((bitField0_ & 0x00000004) != 0);
            }

            /**
             * <pre>
             * The name of the CSV file (eg. "stops.txt") where this problem occurred.
             * </pre>
             *
             * <code>optional string csv_file_name = 3;</code>
             *
             * @return The csvFileName.
             */
            public java.lang.String getCsvFileName() {
                java.lang.Object ref = csvFileName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        csvFileName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The name of the CSV file (eg. "stops.txt") where this problem occurred.
             * </pre>
             *
             * <code>optional string csv_file_name = 3;</code>
             *
             * @return The bytes for csvFileName.
             */
            public com.google.protobuf.ByteString
            getCsvFileNameBytes() {
                java.lang.Object ref = csvFileName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    csvFileName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The name of the CSV file (eg. "stops.txt") where this problem occurred.
             * </pre>
             *
             * <code>optional string csv_file_name = 3;</code>
             *
             * @param value The csvFileName to set.
             * @return This builder for chaining.
             */
            public Builder setCsvFileName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                csvFileName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the CSV file (eg. "stops.txt") where this problem occurred.
             * </pre>
             *
             * <code>optional string csv_file_name = 3;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearCsvFileName() {
                bitField0_ = (bitField0_ & ~0x00000004);
                csvFileName_ = getDefaultInstance().getCsvFileName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of the CSV file (eg. "stops.txt") where this problem occurred.
             * </pre>
             *
             * <code>optional string csv_file_name = 3;</code>
             *
             * @param value The bytes for csvFileName to set.
             * @return This builder for chaining.
             */
            public Builder setCsvFileNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                csvFileName_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object csvKeyName_ = "";

            /**
             * <pre>
             * The name of a CSV key that is implicated in this problem.
             * </pre>
             *
             * <code>optional string csv_key_name = 4;</code>
             *
             * @return Whether the csvKeyName field is set.
             */
            public boolean hasCsvKeyName() {
                return ((bitField0_ & 0x00000008) != 0);
            }

            /**
             * <pre>
             * The name of a CSV key that is implicated in this problem.
             * </pre>
             *
             * <code>optional string csv_key_name = 4;</code>
             *
             * @return The csvKeyName.
             */
            public java.lang.String getCsvKeyName() {
                java.lang.Object ref = csvKeyName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        csvKeyName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The name of a CSV key that is implicated in this problem.
             * </pre>
             *
             * <code>optional string csv_key_name = 4;</code>
             *
             * @return The bytes for csvKeyName.
             */
            public com.google.protobuf.ByteString
            getCsvKeyNameBytes() {
                java.lang.Object ref = csvKeyName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    csvKeyName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The name of a CSV key that is implicated in this problem.
             * </pre>
             *
             * <code>optional string csv_key_name = 4;</code>
             *
             * @param value The csvKeyName to set.
             * @return This builder for chaining.
             */
            public Builder setCsvKeyName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                csvKeyName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of a CSV key that is implicated in this problem.
             * </pre>
             *
             * <code>optional string csv_key_name = 4;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearCsvKeyName() {
                bitField0_ = (bitField0_ & ~0x00000008);
                csvKeyName_ = getDefaultInstance().getCsvKeyName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of a CSV key that is implicated in this problem.
             * </pre>
             *
             * <code>optional string csv_key_name = 4;</code>
             *
             * @param value The bytes for csvKeyName to set.
             * @return This builder for chaining.
             */
            public Builder setCsvKeyNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000008;
                csvKeyName_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList csvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureCsvColumnNameIsMutable() {
                if (!((bitField0_ & 0x00000010) != 0)) {
                    csvColumnName_ = new com.google.protobuf.LazyStringArrayList(csvColumnName_);
                    bitField0_ |= 0x00000010;
                }
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @return A list containing the csvColumnName.
             */
            public com.google.protobuf.ProtocolStringList
            getCsvColumnNameList() {
                return csvColumnName_.getUnmodifiableView();
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @return The count of csvColumnName.
             */
            public int getCsvColumnNameCount() {
                return csvColumnName_.size();
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @param index The index of the element to return.
             * @return The csvColumnName at the given index.
             */
            public java.lang.String getCsvColumnName(int index) {
                return csvColumnName_.get(index);
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the csvColumnName at the given index.
             */
            public com.google.protobuf.ByteString
            getCsvColumnNameBytes(int index) {
                return csvColumnName_.getByteString(index);
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @param index The index to set the value at.
             * @param value The csvColumnName to set.
             * @return This builder for chaining.
             */
            public Builder setCsvColumnName(
                    int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureCsvColumnNameIsMutable();
                csvColumnName_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @param value The csvColumnName to add.
             * @return This builder for chaining.
             */
            public Builder addCsvColumnName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureCsvColumnNameIsMutable();
                csvColumnName_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @param values The csvColumnName to add.
             * @return This builder for chaining.
             */
            public Builder addAllCsvColumnName(
                    java.lang.Iterable<java.lang.String> values) {
                ensureCsvColumnNameIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, csvColumnName_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearCsvColumnName() {
                csvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000010);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of columns in the CSV file where this problem occurred.
             * </pre>
             *
             * <code>repeated string csv_column_name = 5;</code>
             *
             * @param value The bytes of the csvColumnName to add.
             * @return This builder for chaining.
             */
            public Builder addCsvColumnNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureCsvColumnNameIsMutable();
                csvColumnName_.add(value);
                onChanged();
                return this;
            }

            private java.lang.Object otherCsvFileName_ = "";

            /**
             * <pre>
             * The name of an additional CSV file (eg. "routes.txt") that is related to
             * this problem.
             * </pre>
             *
             * <code>optional string other_csv_file_name = 15;</code>
             *
             * @return Whether the otherCsvFileName field is set.
             */
            public boolean hasOtherCsvFileName() {
                return ((bitField0_ & 0x00000020) != 0);
            }

            /**
             * <pre>
             * The name of an additional CSV file (eg. "routes.txt") that is related to
             * this problem.
             * </pre>
             *
             * <code>optional string other_csv_file_name = 15;</code>
             *
             * @return The otherCsvFileName.
             */
            public java.lang.String getOtherCsvFileName() {
                java.lang.Object ref = otherCsvFileName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        otherCsvFileName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The name of an additional CSV file (eg. "routes.txt") that is related to
             * this problem.
             * </pre>
             *
             * <code>optional string other_csv_file_name = 15;</code>
             *
             * @return The bytes for otherCsvFileName.
             */
            public com.google.protobuf.ByteString
            getOtherCsvFileNameBytes() {
                java.lang.Object ref = otherCsvFileName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    otherCsvFileName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The name of an additional CSV file (eg. "routes.txt") that is related to
             * this problem.
             * </pre>
             *
             * <code>optional string other_csv_file_name = 15;</code>
             *
             * @param value The otherCsvFileName to set.
             * @return This builder for chaining.
             */
            public Builder setOtherCsvFileName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                otherCsvFileName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of an additional CSV file (eg. "routes.txt") that is related to
             * this problem.
             * </pre>
             *
             * <code>optional string other_csv_file_name = 15;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearOtherCsvFileName() {
                bitField0_ = (bitField0_ & ~0x00000020);
                otherCsvFileName_ = getDefaultInstance().getOtherCsvFileName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of an additional CSV file (eg. "routes.txt") that is related to
             * this problem.
             * </pre>
             *
             * <code>optional string other_csv_file_name = 15;</code>
             *
             * @param value The bytes for otherCsvFileName to set.
             * @return This builder for chaining.
             */
            public Builder setOtherCsvFileNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000020;
                otherCsvFileName_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object otherCsvKeyName_ = "";

            /**
             * <pre>
             * The name of an additional CSV key that is related to this problem.
             * </pre>
             *
             * <code>optional string other_csv_key_name = 16;</code>
             *
             * @return Whether the otherCsvKeyName field is set.
             */
            public boolean hasOtherCsvKeyName() {
                return ((bitField0_ & 0x00000040) != 0);
            }

            /**
             * <pre>
             * The name of an additional CSV key that is related to this problem.
             * </pre>
             *
             * <code>optional string other_csv_key_name = 16;</code>
             *
             * @return The otherCsvKeyName.
             */
            public java.lang.String getOtherCsvKeyName() {
                java.lang.Object ref = otherCsvKeyName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        otherCsvKeyName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * The name of an additional CSV key that is related to this problem.
             * </pre>
             *
             * <code>optional string other_csv_key_name = 16;</code>
             *
             * @return The bytes for otherCsvKeyName.
             */
            public com.google.protobuf.ByteString
            getOtherCsvKeyNameBytes() {
                java.lang.Object ref = otherCsvKeyName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    otherCsvKeyName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * The name of an additional CSV key that is related to this problem.
             * </pre>
             *
             * <code>optional string other_csv_key_name = 16;</code>
             *
             * @param value The otherCsvKeyName to set.
             * @return This builder for chaining.
             */
            public Builder setOtherCsvKeyName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                otherCsvKeyName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of an additional CSV key that is related to this problem.
             * </pre>
             *
             * <code>optional string other_csv_key_name = 16;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearOtherCsvKeyName() {
                bitField0_ = (bitField0_ & ~0x00000040);
                otherCsvKeyName_ = getDefaultInstance().getOtherCsvKeyName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of an additional CSV key that is related to this problem.
             * </pre>
             *
             * <code>optional string other_csv_key_name = 16;</code>
             *
             * @param value The bytes for otherCsvKeyName to set.
             * @return This builder for chaining.
             */
            public Builder setOtherCsvKeyNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000040;
                otherCsvKeyName_ = value;
                onChanged();
                return this;
            }

            private com.google.protobuf.LazyStringList otherCsvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;

            private void ensureOtherCsvColumnNameIsMutable() {
                if (!((bitField0_ & 0x00000080) != 0)) {
                    otherCsvColumnName_ = new com.google.protobuf.LazyStringArrayList(otherCsvColumnName_);
                    bitField0_ |= 0x00000080;
                }
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @return A list containing the otherCsvColumnName.
             */
            public com.google.protobuf.ProtocolStringList
            getOtherCsvColumnNameList() {
                return otherCsvColumnName_.getUnmodifiableView();
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @return The count of otherCsvColumnName.
             */
            public int getOtherCsvColumnNameCount() {
                return otherCsvColumnName_.size();
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @param index The index of the element to return.
             * @return The otherCsvColumnName at the given index.
             */
            public java.lang.String getOtherCsvColumnName(int index) {
                return otherCsvColumnName_.get(index);
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @param index The index of the value to return.
             * @return The bytes of the otherCsvColumnName at the given index.
             */
            public com.google.protobuf.ByteString
            getOtherCsvColumnNameBytes(int index) {
                return otherCsvColumnName_.getByteString(index);
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @param index The index to set the value at.
             * @param value The otherCsvColumnName to set.
             * @return This builder for chaining.
             */
            public Builder setOtherCsvColumnName(
                    int index, java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOtherCsvColumnNameIsMutable();
                otherCsvColumnName_.set(index, value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @param value The otherCsvColumnName to add.
             * @return This builder for chaining.
             */
            public Builder addOtherCsvColumnName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOtherCsvColumnNameIsMutable();
                otherCsvColumnName_.add(value);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @param values The otherCsvColumnName to add.
             * @return This builder for chaining.
             */
            public Builder addAllOtherCsvColumnName(
                    java.lang.Iterable<java.lang.String> values) {
                ensureOtherCsvColumnNameIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(
                        values, otherCsvColumnName_);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearOtherCsvColumnName() {
                otherCsvColumnName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
                bitField0_ = (bitField0_ & ~0x00000080);
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The name of additional columns in the alt CSV file that are related to
             * this problem.
             * </pre>
             *
             * <code>repeated string other_csv_column_name = 17;</code>
             *
             * @param value The bytes of the otherCsvColumnName to add.
             * @return This builder for chaining.
             */
            public Builder addOtherCsvColumnNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureOtherCsvColumnNameIsMutable();
                otherCsvColumnName_.add(value);
                onChanged();
                return this;
            }

            private int entityRow_;

            /**
             * <pre>
             * The row number in a CSV file where this problem occurred.  The first line
             * (includes the header) of a file should have an entity_row value of 1.
             * Typically, the first row of non-header data will have an entity_row value
             * of 2.
             * </pre>
             *
             * <code>optional uint32 entity_row = 6;</code>
             *
             * @return Whether the entityRow field is set.
             */
            public boolean hasEntityRow() {
                return ((bitField0_ & 0x00000100) != 0);
            }

            /**
             * <pre>
             * The row number in a CSV file where this problem occurred.  The first line
             * (includes the header) of a file should have an entity_row value of 1.
             * Typically, the first row of non-header data will have an entity_row value
             * of 2.
             * </pre>
             *
             * <code>optional uint32 entity_row = 6;</code>
             *
             * @return The entityRow.
             */
            public int getEntityRow() {
                return entityRow_;
            }

            /**
             * <pre>
             * The row number in a CSV file where this problem occurred.  The first line
             * (includes the header) of a file should have an entity_row value of 1.
             * Typically, the first row of non-header data will have an entity_row value
             * of 2.
             * </pre>
             *
             * <code>optional uint32 entity_row = 6;</code>
             *
             * @param value The entityRow to set.
             * @return This builder for chaining.
             */
            public Builder setEntityRow(int value) {
                bitField0_ |= 0x00000100;
                entityRow_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The row number in a CSV file where this problem occurred.  The first line
             * (includes the header) of a file should have an entity_row value of 1.
             * Typically, the first row of non-header data will have an entity_row value
             * of 2.
             * </pre>
             *
             * <code>optional uint32 entity_row = 6;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearEntityRow() {
                bitField0_ = (bitField0_ & ~0x00000100);
                entityRow_ = 0;
                onChanged();
                return this;
            }

            private java.lang.Object entityName_ = "";

            /**
             * <pre>
             * A human-readable name associated with the GTFS entity experiencing a
             * problem (eg. stop name).
             * </pre>
             *
             * <code>optional string entity_name = 7;</code>
             *
             * @return Whether the entityName field is set.
             */
            public boolean hasEntityName() {
                return ((bitField0_ & 0x00000200) != 0);
            }

            /**
             * <pre>
             * A human-readable name associated with the GTFS entity experiencing a
             * problem (eg. stop name).
             * </pre>
             *
             * <code>optional string entity_name = 7;</code>
             *
             * @return The entityName.
             */
            public java.lang.String getEntityName() {
                java.lang.Object ref = entityName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        entityName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable name associated with the GTFS entity experiencing a
             * problem (eg. stop name).
             * </pre>
             *
             * <code>optional string entity_name = 7;</code>
             *
             * @return The bytes for entityName.
             */
            public com.google.protobuf.ByteString
            getEntityNameBytes() {
                java.lang.Object ref = entityName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    entityName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable name associated with the GTFS entity experiencing a
             * problem (eg. stop name).
             * </pre>
             *
             * <code>optional string entity_name = 7;</code>
             *
             * @param value The entityName to set.
             * @return This builder for chaining.
             */
            public Builder setEntityName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000200;
                entityName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable name associated with the GTFS entity experiencing a
             * problem (eg. stop name).
             * </pre>
             *
             * <code>optional string entity_name = 7;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearEntityName() {
                bitField0_ = (bitField0_ & ~0x00000200);
                entityName_ = getDefaultInstance().getEntityName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable name associated with the GTFS entity experiencing a
             * problem (eg. stop name).
             * </pre>
             *
             * <code>optional string entity_name = 7;</code>
             *
             * @param value The bytes for entityName to set.
             * @return This builder for chaining.
             */
            public Builder setEntityNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000200;
                entityName_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object entityId_ = "";

            /**
             * <pre>
             * A human-readable id associated with the GTFS entity experiencing a problem
             * (eg. stop id).
             * </pre>
             *
             * <code>optional string entity_id = 8;</code>
             *
             * @return Whether the entityId field is set.
             */
            public boolean hasEntityId() {
                return ((bitField0_ & 0x00000400) != 0);
            }

            /**
             * <pre>
             * A human-readable id associated with the GTFS entity experiencing a problem
             * (eg. stop id).
             * </pre>
             *
             * <code>optional string entity_id = 8;</code>
             *
             * @return The entityId.
             */
            public java.lang.String getEntityId() {
                java.lang.Object ref = entityId_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        entityId_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable id associated with the GTFS entity experiencing a problem
             * (eg. stop id).
             * </pre>
             *
             * <code>optional string entity_id = 8;</code>
             *
             * @return The bytes for entityId.
             */
            public com.google.protobuf.ByteString
            getEntityIdBytes() {
                java.lang.Object ref = entityId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    entityId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable id associated with the GTFS entity experiencing a problem
             * (eg. stop id).
             * </pre>
             *
             * <code>optional string entity_id = 8;</code>
             *
             * @param value The entityId to set.
             * @return This builder for chaining.
             */
            public Builder setEntityId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000400;
                entityId_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable id associated with the GTFS entity experiencing a problem
             * (eg. stop id).
             * </pre>
             *
             * <code>optional string entity_id = 8;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearEntityId() {
                bitField0_ = (bitField0_ & ~0x00000400);
                entityId_ = getDefaultInstance().getEntityId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable id associated with the GTFS entity experiencing a problem
             * (eg. stop id).
             * </pre>
             *
             * <code>optional string entity_id = 8;</code>
             *
             * @param value The bytes for entityId to set.
             * @return This builder for chaining.
             */
            public Builder setEntityIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000400;
                entityId_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object entityValue_ = "";

            /**
             * <pre>
             * A human-readable value associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional string entity_value = 9;</code>
             *
             * @return Whether the entityValue field is set.
             */
            public boolean hasEntityValue() {
                return ((bitField0_ & 0x00000800) != 0);
            }

            /**
             * <pre>
             * A human-readable value associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional string entity_value = 9;</code>
             *
             * @return The entityValue.
             */
            public java.lang.String getEntityValue() {
                java.lang.Object ref = entityValue_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        entityValue_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable value associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional string entity_value = 9;</code>
             *
             * @return The bytes for entityValue.
             */
            public com.google.protobuf.ByteString
            getEntityValueBytes() {
                java.lang.Object ref = entityValue_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    entityValue_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable value associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional string entity_value = 9;</code>
             *
             * @param value The entityValue to set.
             * @return This builder for chaining.
             */
            public Builder setEntityValue(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000800;
                entityValue_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable value associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional string entity_value = 9;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearEntityValue() {
                bitField0_ = (bitField0_ & ~0x00000800);
                entityValue_ = getDefaultInstance().getEntityValue();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable value associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional string entity_value = 9;</code>
             *
             * @param value The bytes for entityValue to set.
             * @return This builder for chaining.
             */
            public Builder setEntityValueBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000800;
                entityValue_ = value;
                onChanged();
                return this;
            }

            private org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto entityLocation_;
            private com.google.protobuf.SingleFieldBuilderV3<
                    org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder> entityLocationBuilder_;

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             *
             * @return Whether the entityLocation field is set.
             */
            public boolean hasEntityLocation() {
                return ((bitField0_ & 0x00001000) != 0);
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             *
             * @return The entityLocation.
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getEntityLocation() {
                if (entityLocationBuilder_ == null) {
                    return entityLocation_ == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : entityLocation_;
                } else {
                    return entityLocationBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             */
            public Builder setEntityLocation(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto value) {
                if (entityLocationBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    entityLocation_ = value;
                    onChanged();
                } else {
                    entityLocationBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00001000;
                return this;
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             */
            public Builder setEntityLocation(
                    org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder builderForValue) {
                if (entityLocationBuilder_ == null) {
                    entityLocation_ = builderForValue.build();
                    onChanged();
                } else {
                    entityLocationBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00001000;
                return this;
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             */
            public Builder mergeEntityLocation(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto value) {
                if (entityLocationBuilder_ == null) {
                    if (((bitField0_ & 0x00001000) != 0) &&
                            entityLocation_ != null &&
                            entityLocation_ != org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance()) {
                        entityLocation_ =
                                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.newBuilder(entityLocation_).mergeFrom(value).buildPartial();
                    } else {
                        entityLocation_ = value;
                    }
                    onChanged();
                } else {
                    entityLocationBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00001000;
                return this;
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             */
            public Builder clearEntityLocation() {
                if (entityLocationBuilder_ == null) {
                    entityLocation_ = null;
                    onChanged();
                } else {
                    entityLocationBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00001000);
                return this;
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder getEntityLocationBuilder() {
                bitField0_ |= 0x00001000;
                onChanged();
                return getEntityLocationFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder getEntityLocationOrBuilder() {
                if (entityLocationBuilder_ != null) {
                    return entityLocationBuilder_.getMessageOrBuilder();
                } else {
                    return entityLocation_ == null ?
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : entityLocation_;
                }
            }

            /**
             * <pre>
             * Location information associated with the GTFS entity experiencing a
             * problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto entity_location = 21;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder>
            getEntityLocationFieldBuilder() {
                if (entityLocationBuilder_ == null) {
                    entityLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder>(
                            getEntityLocation(),
                            getParentForChildren(),
                            isClean());
                    entityLocation_ = null;
                }
                return entityLocationBuilder_;
            }

            private int altEntityRow_;

            /**
             * <pre>
             * The row number in a CSV file of an alternate GTFS entity that's in
             * conflict with the primary row.
             * </pre>
             *
             * <code>optional uint32 alt_entity_row = 10;</code>
             *
             * @return Whether the altEntityRow field is set.
             */
            public boolean hasAltEntityRow() {
                return ((bitField0_ & 0x00002000) != 0);
            }

            /**
             * <pre>
             * The row number in a CSV file of an alternate GTFS entity that's in
             * conflict with the primary row.
             * </pre>
             *
             * <code>optional uint32 alt_entity_row = 10;</code>
             *
             * @return The altEntityRow.
             */
            public int getAltEntityRow() {
                return altEntityRow_;
            }

            /**
             * <pre>
             * The row number in a CSV file of an alternate GTFS entity that's in
             * conflict with the primary row.
             * </pre>
             *
             * <code>optional uint32 alt_entity_row = 10;</code>
             *
             * @param value The altEntityRow to set.
             * @return This builder for chaining.
             */
            public Builder setAltEntityRow(int value) {
                bitField0_ |= 0x00002000;
                altEntityRow_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The row number in a CSV file of an alternate GTFS entity that's in
             * conflict with the primary row.
             * </pre>
             *
             * <code>optional uint32 alt_entity_row = 10;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearAltEntityRow() {
                bitField0_ = (bitField0_ & ~0x00002000);
                altEntityRow_ = 0;
                onChanged();
                return this;
            }

            private java.lang.Object altEntityName_ = "";

            /**
             * <pre>
             * A human-readable name associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop name).
             * </pre>
             *
             * <code>optional string alt_entity_name = 11;</code>
             *
             * @return Whether the altEntityName field is set.
             */
            public boolean hasAltEntityName() {
                return ((bitField0_ & 0x00004000) != 0);
            }

            /**
             * <pre>
             * A human-readable name associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop name).
             * </pre>
             *
             * <code>optional string alt_entity_name = 11;</code>
             *
             * @return The altEntityName.
             */
            public java.lang.String getAltEntityName() {
                java.lang.Object ref = altEntityName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        altEntityName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable name associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop name).
             * </pre>
             *
             * <code>optional string alt_entity_name = 11;</code>
             *
             * @return The bytes for altEntityName.
             */
            public com.google.protobuf.ByteString
            getAltEntityNameBytes() {
                java.lang.Object ref = altEntityName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    altEntityName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable name associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop name).
             * </pre>
             *
             * <code>optional string alt_entity_name = 11;</code>
             *
             * @param value The altEntityName to set.
             * @return This builder for chaining.
             */
            public Builder setAltEntityName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00004000;
                altEntityName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable name associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop name).
             * </pre>
             *
             * <code>optional string alt_entity_name = 11;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearAltEntityName() {
                bitField0_ = (bitField0_ & ~0x00004000);
                altEntityName_ = getDefaultInstance().getAltEntityName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable name associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop name).
             * </pre>
             *
             * <code>optional string alt_entity_name = 11;</code>
             *
             * @param value The bytes for altEntityName to set.
             * @return This builder for chaining.
             */
            public Builder setAltEntityNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00004000;
                altEntityName_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object altEntityId_ = "";

            /**
             * <pre>
             * A human-readable id associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop id).
             * </pre>
             *
             * <code>optional string alt_entity_id = 12;</code>
             *
             * @return Whether the altEntityId field is set.
             */
            public boolean hasAltEntityId() {
                return ((bitField0_ & 0x00008000) != 0);
            }

            /**
             * <pre>
             * A human-readable id associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop id).
             * </pre>
             *
             * <code>optional string alt_entity_id = 12;</code>
             *
             * @return The altEntityId.
             */
            public java.lang.String getAltEntityId() {
                java.lang.Object ref = altEntityId_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        altEntityId_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable id associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop id).
             * </pre>
             *
             * <code>optional string alt_entity_id = 12;</code>
             *
             * @return The bytes for altEntityId.
             */
            public com.google.protobuf.ByteString
            getAltEntityIdBytes() {
                java.lang.Object ref = altEntityId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    altEntityId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable id associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop id).
             * </pre>
             *
             * <code>optional string alt_entity_id = 12;</code>
             *
             * @param value The altEntityId to set.
             * @return This builder for chaining.
             */
            public Builder setAltEntityId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00008000;
                altEntityId_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable id associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop id).
             * </pre>
             *
             * <code>optional string alt_entity_id = 12;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearAltEntityId() {
                bitField0_ = (bitField0_ & ~0x00008000);
                altEntityId_ = getDefaultInstance().getAltEntityId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable id associated with an alternate GTFS entity that's in
             * conflict with the primary row (eg. conflicting stop id).
             * </pre>
             *
             * <code>optional string alt_entity_id = 12;</code>
             *
             * @param value The bytes for altEntityId to set.
             * @return This builder for chaining.
             */
            public Builder setAltEntityIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00008000;
                altEntityId_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object altEntityValue_ = "";

            /**
             * <pre>
             * A human-readable value associated with the alernate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional string alt_entity_value = 13;</code>
             *
             * @return Whether the altEntityValue field is set.
             */
            public boolean hasAltEntityValue() {
                return ((bitField0_ & 0x00010000) != 0);
            }

            /**
             * <pre>
             * A human-readable value associated with the alernate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional string alt_entity_value = 13;</code>
             *
             * @return The altEntityValue.
             */
            public java.lang.String getAltEntityValue() {
                java.lang.Object ref = altEntityValue_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        altEntityValue_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable value associated with the alernate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional string alt_entity_value = 13;</code>
             *
             * @return The bytes for altEntityValue.
             */
            public com.google.protobuf.ByteString
            getAltEntityValueBytes() {
                java.lang.Object ref = altEntityValue_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    altEntityValue_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable value associated with the alernate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional string alt_entity_value = 13;</code>
             *
             * @param value The altEntityValue to set.
             * @return This builder for chaining.
             */
            public Builder setAltEntityValue(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00010000;
                altEntityValue_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable value associated with the alernate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional string alt_entity_value = 13;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearAltEntityValue() {
                bitField0_ = (bitField0_ & ~0x00010000);
                altEntityValue_ = getDefaultInstance().getAltEntityValue();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable value associated with the alernate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional string alt_entity_value = 13;</code>
             *
             * @param value The bytes for altEntityValue to set.
             * @return This builder for chaining.
             */
            public Builder setAltEntityValueBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00010000;
                altEntityValue_ = value;
                onChanged();
                return this;
            }

            private org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto altEntityLocation_;
            private com.google.protobuf.SingleFieldBuilderV3<
                    org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder> altEntityLocationBuilder_;

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             *
             * @return Whether the altEntityLocation field is set.
             */
            public boolean hasAltEntityLocation() {
                return ((bitField0_ & 0x00020000) != 0);
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             *
             * @return The altEntityLocation.
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto getAltEntityLocation() {
                if (altEntityLocationBuilder_ == null) {
                    return altEntityLocation_ == null ? org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : altEntityLocation_;
                } else {
                    return altEntityLocationBuilder_.getMessage();
                }
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             */
            public Builder setAltEntityLocation(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto value) {
                if (altEntityLocationBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    altEntityLocation_ = value;
                    onChanged();
                } else {
                    altEntityLocationBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00020000;
                return this;
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             */
            public Builder setAltEntityLocation(
                    org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder builderForValue) {
                if (altEntityLocationBuilder_ == null) {
                    altEntityLocation_ = builderForValue.build();
                    onChanged();
                } else {
                    altEntityLocationBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00020000;
                return this;
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             */
            public Builder mergeAltEntityLocation(org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto value) {
                if (altEntityLocationBuilder_ == null) {
                    if (((bitField0_ & 0x00020000) != 0) &&
                            altEntityLocation_ != null &&
                            altEntityLocation_ != org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance()) {
                        altEntityLocation_ =
                                org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.newBuilder(altEntityLocation_).mergeFrom(value).buildPartial();
                    } else {
                        altEntityLocation_ = value;
                    }
                    onChanged();
                } else {
                    altEntityLocationBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00020000;
                return this;
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             */
            public Builder clearAltEntityLocation() {
                if (altEntityLocationBuilder_ == null) {
                    altEntityLocation_ = null;
                    onChanged();
                } else {
                    altEntityLocationBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00020000);
                return this;
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder getAltEntityLocationBuilder() {
                bitField0_ |= 0x00020000;
                onChanged();
                return getAltEntityLocationFieldBuilder().getBuilder();
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             */
            public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder getAltEntityLocationOrBuilder() {
                if (altEntityLocationBuilder_ != null) {
                    return altEntityLocationBuilder_.getMessageOrBuilder();
                } else {
                    return altEntityLocation_ == null ?
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.getDefaultInstance() : altEntityLocation_;
                }
            }

            /**
             * <pre>
             * Location information associated with the alternate GTFS entity
             * experiencing a problem.
             * </pre>
             *
             * <code>optional .outputProto.PointProto alt_entity_location = 22;</code>
             */
            private com.google.protobuf.SingleFieldBuilderV3<
                    org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder>
            getAltEntityLocationFieldBuilder() {
                if (altEntityLocationBuilder_ == null) {
                    altEntityLocationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                            org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProto.Builder, org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.PointProtoOrBuilder>(
                            getAltEntityLocation(),
                            getParentForChildren(),
                            isClean());
                    altEntityLocation_ = null;
                }
                return altEntityLocationBuilder_;
            }

            private int parentEntityRow_;

            /**
             * <pre>
             * The row number in a CSV file of a GTFS entity that's a parent to the
             * primary entity.
             * </pre>
             *
             * <code>optional uint32 parent_entity_row = 18;</code>
             *
             * @return Whether the parentEntityRow field is set.
             */
            public boolean hasParentEntityRow() {
                return ((bitField0_ & 0x00040000) != 0);
            }

            /**
             * <pre>
             * The row number in a CSV file of a GTFS entity that's a parent to the
             * primary entity.
             * </pre>
             *
             * <code>optional uint32 parent_entity_row = 18;</code>
             *
             * @return The parentEntityRow.
             */
            public int getParentEntityRow() {
                return parentEntityRow_;
            }

            /**
             * <pre>
             * The row number in a CSV file of a GTFS entity that's a parent to the
             * primary entity.
             * </pre>
             *
             * <code>optional uint32 parent_entity_row = 18;</code>
             *
             * @param value The parentEntityRow to set.
             * @return This builder for chaining.
             */
            public Builder setParentEntityRow(int value) {
                bitField0_ |= 0x00040000;
                parentEntityRow_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * The row number in a CSV file of a GTFS entity that's a parent to the
             * primary entity.
             * </pre>
             *
             * <code>optional uint32 parent_entity_row = 18;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearParentEntityRow() {
                bitField0_ = (bitField0_ & ~0x00040000);
                parentEntityRow_ = 0;
                onChanged();
                return this;
            }

            private java.lang.Object parentEntityName_ = "";

            /**
             * <pre>
             * A human-readable name associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_name = 19;</code>
             *
             * @return Whether the parentEntityName field is set.
             */
            public boolean hasParentEntityName() {
                return ((bitField0_ & 0x00080000) != 0);
            }

            /**
             * <pre>
             * A human-readable name associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_name = 19;</code>
             *
             * @return The parentEntityName.
             */
            public java.lang.String getParentEntityName() {
                java.lang.Object ref = parentEntityName_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        parentEntityName_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable name associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_name = 19;</code>
             *
             * @return The bytes for parentEntityName.
             */
            public com.google.protobuf.ByteString
            getParentEntityNameBytes() {
                java.lang.Object ref = parentEntityName_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    parentEntityName_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable name associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_name = 19;</code>
             *
             * @param value The parentEntityName to set.
             * @return This builder for chaining.
             */
            public Builder setParentEntityName(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00080000;
                parentEntityName_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable name associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_name = 19;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearParentEntityName() {
                bitField0_ = (bitField0_ & ~0x00080000);
                parentEntityName_ = getDefaultInstance().getParentEntityName();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable name associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_name = 19;</code>
             *
             * @param value The bytes for parentEntityName to set.
             * @return This builder for chaining.
             */
            public Builder setParentEntityNameBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00080000;
                parentEntityName_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object parentEntityId_ = "";

            /**
             * <pre>
             * A human-readable id associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_id = 20;</code>
             *
             * @return Whether the parentEntityId field is set.
             */
            public boolean hasParentEntityId() {
                return ((bitField0_ & 0x00100000) != 0);
            }

            /**
             * <pre>
             * A human-readable id associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_id = 20;</code>
             *
             * @return The parentEntityId.
             */
            public java.lang.String getParentEntityId() {
                java.lang.Object ref = parentEntityId_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        parentEntityId_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A human-readable id associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_id = 20;</code>
             *
             * @return The bytes for parentEntityId.
             */
            public com.google.protobuf.ByteString
            getParentEntityIdBytes() {
                java.lang.Object ref = parentEntityId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    parentEntityId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A human-readable id associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_id = 20;</code>
             *
             * @param value The parentEntityId to set.
             * @return This builder for chaining.
             */
            public Builder setParentEntityId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00100000;
                parentEntityId_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable id associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_id = 20;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearParentEntityId() {
                bitField0_ = (bitField0_ & ~0x00100000);
                parentEntityId_ = getDefaultInstance().getParentEntityId();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A human-readable id associated with the parent GTFS entity.
             * </pre>
             *
             * <code>optional string parent_entity_id = 20;</code>
             *
             * @param value The bytes for parentEntityId to set.
             * @return This builder for chaining.
             */
            public Builder setParentEntityIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00100000;
                parentEntityId_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object value_ = "";

            /**
             * <pre>
             * A value associated with the problem.  This could be an invalid value
             * pulled from the GTFS directly or some other related value (eg "travel is
             * to too fast, a X kph", where X is replaced with 'value').
             * </pre>
             *
             * <code>optional string value = 14;</code>
             *
             * @return Whether the value field is set.
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00200000) != 0);
            }

            /**
             * <pre>
             * A value associated with the problem.  This could be an invalid value
             * pulled from the GTFS directly or some other related value (eg "travel is
             * to too fast, a X kph", where X is replaced with 'value').
             * </pre>
             *
             * <code>optional string value = 14;</code>
             *
             * @return The value.
             */
            public java.lang.String getValue() {
                java.lang.Object ref = value_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        value_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * A value associated with the problem.  This could be an invalid value
             * pulled from the GTFS directly or some other related value (eg "travel is
             * to too fast, a X kph", where X is replaced with 'value').
             * </pre>
             *
             * <code>optional string value = 14;</code>
             *
             * @return The bytes for value.
             */
            public com.google.protobuf.ByteString
            getValueBytes() {
                java.lang.Object ref = value_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    value_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * A value associated with the problem.  This could be an invalid value
             * pulled from the GTFS directly or some other related value (eg "travel is
             * to too fast, a X kph", where X is replaced with 'value').
             * </pre>
             *
             * <code>optional string value = 14;</code>
             *
             * @param value The value to set.
             * @return This builder for chaining.
             */
            public Builder setValue(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00200000;
                value_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A value associated with the problem.  This could be an invalid value
             * pulled from the GTFS directly or some other related value (eg "travel is
             * to too fast, a X kph", where X is replaced with 'value').
             * </pre>
             *
             * <code>optional string value = 14;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearValue() {
                bitField0_ = (bitField0_ & ~0x00200000);
                value_ = getDefaultInstance().getValue();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A value associated with the problem.  This could be an invalid value
             * pulled from the GTFS directly or some other related value (eg "travel is
             * to too fast, a X kph", where X is replaced with 'value').
             * </pre>
             *
             * <code>optional string value = 14;</code>
             *
             * @param value The bytes for value to set.
             * @return This builder for chaining.
             */
            public Builder setValueBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00200000;
                value_ = value;
                onChanged();
                return this;
            }

            private java.lang.Object altValue_ = "";

            /**
             * <pre>
             * An alternate value associated with the problem.  Similar to 'value' field
             * in use, use 'value' and 'alt_value' when two values are associated with
             * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
             * the two values are associated with separate entities in the same file.
             * </pre>
             *
             * <code>optional string alt_value = 23;</code>
             *
             * @return Whether the altValue field is set.
             */
            public boolean hasAltValue() {
                return ((bitField0_ & 0x00400000) != 0);
            }

            /**
             * <pre>
             * An alternate value associated with the problem.  Similar to 'value' field
             * in use, use 'value' and 'alt_value' when two values are associated with
             * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
             * the two values are associated with separate entities in the same file.
             * </pre>
             *
             * <code>optional string alt_value = 23;</code>
             *
             * @return The altValue.
             */
            public java.lang.String getAltValue() {
                java.lang.Object ref = altValue_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        altValue_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <pre>
             * An alternate value associated with the problem.  Similar to 'value' field
             * in use, use 'value' and 'alt_value' when two values are associated with
             * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
             * the two values are associated with separate entities in the same file.
             * </pre>
             *
             * <code>optional string alt_value = 23;</code>
             *
             * @return The bytes for altValue.
             */
            public com.google.protobuf.ByteString
            getAltValueBytes() {
                java.lang.Object ref = altValue_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    altValue_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <pre>
             * An alternate value associated with the problem.  Similar to 'value' field
             * in use, use 'value' and 'alt_value' when two values are associated with
             * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
             * the two values are associated with separate entities in the same file.
             * </pre>
             *
             * <code>optional string alt_value = 23;</code>
             *
             * @param value The altValue to set.
             * @return This builder for chaining.
             */
            public Builder setAltValue(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00400000;
                altValue_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * An alternate value associated with the problem.  Similar to 'value' field
             * in use, use 'value' and 'alt_value' when two values are associated with
             * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
             * the two values are associated with separate entities in the same file.
             * </pre>
             *
             * <code>optional string alt_value = 23;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearAltValue() {
                bitField0_ = (bitField0_ & ~0x00400000);
                altValue_ = getDefaultInstance().getAltValue();
                onChanged();
                return this;
            }

            /**
             * <pre>
             * An alternate value associated with the problem.  Similar to 'value' field
             * in use, use 'value' and 'alt_value' when two values are associated with
             * the same primary entity.  Use 'entity_value' and 'alt_entity_value' when
             * the two values are associated with separate entities in the same file.
             * </pre>
             *
             * <code>optional string alt_value = 23;</code>
             *
             * @param value The bytes for altValue to set.
             * @return This builder for chaining.
             */
            public Builder setAltValueBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00400000;
                altValue_ = value;
                onChanged();
                return this;
            }

            private double importance_;

            /**
             * <pre>
             * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
             * importance of the problem based on the importance of the locations of the
             * geographical entities involved.
             * </pre>
             *
             * <code>optional double importance = 24;</code>
             *
             * @return Whether the importance field is set.
             */
            public boolean hasImportance() {
                return ((bitField0_ & 0x00800000) != 0);
            }

            /**
             * <pre>
             * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
             * importance of the problem based on the importance of the locations of the
             * geographical entities involved.
             * </pre>
             *
             * <code>optional double importance = 24;</code>
             *
             * @return The importance.
             */
            public double getImportance() {
                return importance_;
            }

            /**
             * <pre>
             * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
             * importance of the problem based on the importance of the locations of the
             * geographical entities involved.
             * </pre>
             *
             * <code>optional double importance = 24;</code>
             *
             * @param value The importance to set.
             * @return This builder for chaining.
             */
            public Builder setImportance(double value) {
                bitField0_ |= 0x00800000;
                importance_ = value;
                onChanged();
                return this;
            }

            /**
             * <pre>
             * A value in the range [0.0, 1.0] (most important is 1.0), indicating the
             * importance of the problem based on the importance of the locations of the
             * geographical entities involved.
             * </pre>
             *
             * <code>optional double importance = 24;</code>
             *
             * @return This builder for chaining.
             */
            public Builder clearImportance() {
                bitField0_ = (bitField0_ & ~0x00800000);
                importance_ = 0D;
                onChanged();
                return this;
            }

            @java.lang.Override
            public final Builder setUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.setUnknownFields(unknownFields);
            }

            @java.lang.Override
            public final Builder mergeUnknownFields(
                    final com.google.protobuf.UnknownFieldSet unknownFields) {
                return super.mergeUnknownFields(unknownFields);
            }


            // @@protoc_insertion_point(builder_scope:outputProto.GtfsProblem)
        }

        // @@protoc_insertion_point(class_scope:outputProto.GtfsProblem)
        private static final org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem DEFAULT_INSTANCE;

        static {
            DEFAULT_INSTANCE = new org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem();
        }

        public static org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem getDefaultInstance() {
            return DEFAULT_INSTANCE;
        }

        @java.lang.Deprecated
        public static final com.google.protobuf.Parser<GtfsProblem>
                PARSER = new com.google.protobuf.AbstractParser<GtfsProblem>() {
            @java.lang.Override
            public GtfsProblem parsePartialFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return new GtfsProblem(input, extensionRegistry);
            }
        };

        public static com.google.protobuf.Parser<GtfsProblem> parser() {
            return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<GtfsProblem> getParserForType() {
            return PARSER;
        }

        @java.lang.Override
        public org.mobilitydata.gtfsvalidator.adapter.protos.GtfsValidationOutputProto.GtfsProblem getDefaultInstanceForType() {
            return DEFAULT_INSTANCE;
        }

    }

    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_outputProto_PointProto_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_outputProto_PointProto_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_outputProto_GtfsProblem_descriptor;
    private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internal_static_outputProto_GtfsProblem_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\025gtfs_validation.proto\022\013outputProto\",\n\n" +
                        "PointProto\022\016\n\006lat_e7\030\001 \001(\007\022\016\n\006lng_e7\030\002 \001" +
                        "(\007\"\2117\n\013GtfsProblem\022+\n\004type\030\001 \001(\0162\035.outpu" +
                        "tProto.GtfsProblem.Type\0223\n\010severity\030\002 \001(" +
                        "\0162!.outputProto.GtfsProblem.Severity\022\025\n\r" +
                        "csv_file_name\030\003 \001(\t\022\024\n\014csv_key_name\030\004 \001(" +
                        "\t\022\027\n\017csv_column_name\030\005 \003(\t\022\033\n\023other_csv_" +
                        "file_name\030\017 \001(\t\022\032\n\022other_csv_key_name\030\020 " +
                        "\001(\t\022\035\n\025other_csv_column_name\030\021 \003(\t\022\022\n\nen" +
                        "tity_row\030\006 \001(\r\022\023\n\013entity_name\030\007 \001(\t\022\021\n\te" +
                        "ntity_id\030\010 \001(\t\022\024\n\014entity_value\030\t \001(\t\0220\n\017" +
                        "entity_location\030\025 \001(\0132\027.outputProto.Poin" +
                        "tProto\022\026\n\016alt_entity_row\030\n \001(\r\022\027\n\017alt_en" +
                        "tity_name\030\013 \001(\t\022\025\n\ralt_entity_id\030\014 \001(\t\022\030" +
                        "\n\020alt_entity_value\030\r \001(\t\0224\n\023alt_entity_l" +
                        "ocation\030\026 \001(\0132\027.outputProto.PointProto\022\031" +
                        "\n\021parent_entity_row\030\022 \001(\r\022\032\n\022parent_enti" +
                        "ty_name\030\023 \001(\t\022\030\n\020parent_entity_id\030\024 \001(\t\022" +
                        "\r\n\005value\030\016 \001(\t\022\021\n\talt_value\030\027 \001(\t\022\022\n\nimp" +
                        "ortance\030\030 \001(\001\"\2321\n\004Type\022\032\n\026TYPE_CSV_UNKNO" +
                        "WN_ERROR\020\001\022\032\n\026TYPE_CSV_MISSING_TABLE\020\n\022\034" +
                        "\n\030TYPE_CSV_SPLITTING_ERROR\020\024\022$\n TYPE_CSV" +
                        "_CONTAINS_NULL_CHARACTER\020\025\022&\n\036TYPE_CSV_U" +
                        "TF8_CONVERSION_ERROR\020\026\032\002\010\001\022\031\n\025TYPE_CSV_I" +
                        "NVALID_UTF8\020\027\022\"\n\036TYPE_CSV_DUPLICATE_COLU" +
                        "MN_NAME\020\030\022!\n\035TYPE_CSV_BAD_NUMBER_OF_VALU" +
                        "ES\020\031\022\033\n\027TYPE_CSV_FILE_CORRUPTED\020\032\022 \n\034TYP" +
                        "E_CSV_UNEXPECTED_LOCATION\020\033\022\033\n\027TYPE_CSV_" +
                        "MISSING_COLUMN\020\036\022\030\n\024TYPE_CSV_MISSING_KEY" +
                        "\020\037\022\025\n\021TYPE_CSV_UNSORTED\020(\022\033\n\027TYPE_CSV_NO" +
                        "N_CONTIGUOUS\020)\022\037\n\033TYPE_CSV_BAD_NUMBER_OF" +
                        "_ROWS\020*\022\030\n\024TYPE_CSV_VALUE_ERROR\0202\022\034\n\030TYP" +
                        "E_CSV_REGEXP_MISMATCH\0203\022\031\n\025TYPE_CSV_OUT_" +
                        "OF_RANGE\0204\022\032\n\026TYPE_CSV_MISSING_VALUE\0205\022&" +
                        "\n\"TYPE_CSV_MISSING_FOREIGN_KEY_VALUE\020=\022 " +
                        "\n\034TYPE_CSV_DUPLICATE_KEY_VALUE\020>\022\036\n\032TYPE" +
                        "_CSV_MISSING_KEY_TABLE\020?\022\033\n\027TYPE_CSV_FIL" +
                        "E_TOO_LARGE\020@\022+\n&TYPE_AGENCIES_WITH_DIFF" +
                        "ERENT_LANGUAGES\020\371\001\022+\n&TYPE_AGENCIES_WITH" +
                        "_DIFFERENT_TIMEZONES\020\347\001\022,\n\'TYPE_AGENCY_L" +
                        "ANG_AND_FEED_LANG_MISMATCH\020\350\001\022*\n%TYPE_AM" +
                        "BIGUOUS_STOP_STATION_TRANSFERS\020\236\002\0223\n.TYP" +
                        "E_BLOCK_TRIPS_WITH_INCONSISTENT_ROUTE_TY" +
                        "PES\020\243\002\0221\n,TYPE_BLOCK_TRIPS_WITH_OVERLAPP" +
                        "ING_STOP_TIMES\020\361\001\0222\n-TYPE_CALENDAR_START" +
                        "_AND_END_DATE_OUT_OF_ORDER\020\360\001\022-\n(TYPE_CA" +
                        "LENDAR_HAS_NO_ACTIVE_DAYS_OF_WEEK\020\344\001\022)\n$" +
                        "TYPE_LOCATION_WITHOUT_PARENT_STATION\020\313\001\022" +
                        "/\n*TYPE_FARE_ATTRIBUTES_INVALID_CURRENCY" +
                        "_TYPE\020\334\001\022,\n\'TYPE_FARE_ATTRIBUTES_AGENCY_" +
                        "ID_REQUIRED\020\335\001\0221\n,TYPE_FARE_RULE_WITH_BO" +
                        "TH_ROUTE_ID_REFERENCES\020\242\002\022&\n!TYPE_FARES_" +
                        "WITH_AND_WITHOUT_RULES\020\210\002\022/\n*TYPE_FAST_T" +
                        "RAVEL_BETWEEN_CONSECUTIVE_STOPS\020\200\002\022\'\n\"TY" +
                        "PE_FAST_TRAVEL_BETWEEN_FAR_STOPS\020\251\002\022\036\n\031T" +
                        "YPE_FEED_EXPIRATION_DATE\020\351\001\022\035\n\030TYPE_FEED" +
                        "_FUTURE_SERVICE\020\343\001\022\036\n\031TYPE_FEED_HAS_NO_L" +
                        "ANGUAGE\020\212\002\022-\n(TYPE_FEED_HAS_NO_SERVICE_D" +
                        "ATE_EXCEPTIONS\020\341\001\022#\n\036TYPE_FEED_HAS_NO_SE" +
                        "RVICE_DATES\020\340\001\022%\n TYPE_FEED_HAS_VERY_SHO" +
                        "RT_SERVICE\020\247\002\022-\n(TYPE_EXPIRED_FEED_HAS_V" +
                        "ERY_SHORT_SERVICE\020\315\002\0223\n.TYPE_FEED_INFO_S" +
                        "TART_AND_END_DATE_OUT_OF_ORDER\020\336\001\022\'\n\"TYP" +
                        "E_FEED_INFO_MORE_THAN_ONE_ENTRY\020\337\001\022\037\n\032TY" +
                        "PE_FEED_INFO_EARLY_START\020\250\002\022\037\n\032TYPE_FEED" +
                        "_SERVICE_DATE_GAP\020\346\001\0229\n4TYPE_FREQUENCY_H" +
                        "EADWAY_SECONDS_GREATER_THAN_INTERVAL\020\230\002\022" +
                        ",\n\'TYPE_FREQUENCY_HEADWAY_SECONDS_TOO_HI" +
                        "GH\020\271\002\0220\n+TYPE_FREQUENCY_START_AND_END_TI" +
                        "ME_ARE_EQUAL\020\205\002\0223\n.TYPE_FREQUENCY_START_" +
                        "AND_END_TIME_OUT_OF_ORDER\020\206\002\022/\n*TYPE_FRE" +
                        "QUENCY_BASED_TRIP_TO_TRIP_TRANSFER\020\234\002\022\037\n" +
                        "\032TYPE_INVALID_LANGUAGE_CODE\020\362\001\022\032\n\025TYPE_I" +
                        "NVALID_LATITUDE\020\363\001\022\033\n\026TYPE_INVALID_LONGI" +
                        "TUDE\020\364\001\022\034\n\027TYPE_INVALID_ROUTE_TYPE\020\207\002\022\032\n" +
                        "\025TYPE_INVALID_TIMEZONE\020\365\001\022\025\n\020TYPE_INVALI" +
                        "D_URL\020\366\001\022&\n!TYPE_MULTIPLE_FARES_WITHOUT_" +
                        "RULES\020\211\002\022\037\n\032TYPE_OVERLAPPING_FREQUENCY\020\311" +
                        "\001\0223\n.TYPE_OVERLAPPING_FREQUENCY_FOR_TRIP" +
                        "_DUPLICATES\020\231\002\0221\n,TYPE_PARENT_STATION_WI" +
                        "TH_WRONG_LOCATION_TYPE\020\241\002\022\033\n\026TYPE_POINT_" +
                        "NEAR_ORIGIN\020\245\002\022\031\n\024TYPE_POINT_NEAR_POLE\020\246" +
                        "\002\022\036\n\031TYPE_ROUTE_COLOR_CONTRAST\020\317\001\022\033\n\026TYP" +
                        "E_ROUTE_NAME_REUSED\020\342\001\022+\n&TYPE_ROUTE_SHO" +
                        "RT_NAME_EQUALS_LONG_NAME\020\321\001\0224\n/TYPE_ROUT" +
                        "E_SHORT_NAME_IS_CONTAINED_IN_LONG_NAME\020\322" +
                        "\001\022&\n!TYPE_ROUTE_SHORT_NAME_IS_TOO_LONG\020\320" +
                        "\001\0220\n+TYPE_ROUTE_SHORT_NAME_OR_LONG_NAME_" +
                        "REQUIRED\020\323\001\0225\n0TYPE_ROUTE_BOTH_SHORT_NAM" +
                        "E_AND_LONG_NAME_PRESENT\020\272\002\022+\n&TYPE_ROUTE" +
                        "_LONG_NAME_HAS_ABBREVIATIONS\020\273\002\022$\n\037TYPE_" +
                        "ROUTE_NAME_NOT_CAPITALIZED\020\274\002\022+\n&TYPE_RO" +
                        "UTE_NAME_HAS_SPECIAL_CHARACTERS\020\301\002\022\'\n\"TY" +
                        "PE_SERVICE_ID_HAS_NO_ACTIVE_DAYS\020\345\001\0220\n+T" +
                        "YPE_SHAPE_WITH_PARTIAL_SHAPE_DIST_TRAVEL" +
                        "ED\020\215\002\022\030\n\023TYPE_STATION_UNUSED\020\352\001\022%\n TYPE_" +
                        "STATION_WITH_PARENT_STATION\020\312\001\022+\n&TYPE_L" +
                        "OCATION_WITH_STOP_TIME_OVERRIDES\020\257\002\022\"\n\035T" +
                        "YPE_LOCATION_WITH_STOP_TIMES\020\353\001\022\034\n\027TYPE_" +
                        "STATIONS_TOO_CLOSE\020\354\001\022-\n(TYPE_STOP_HAS_T" +
                        "OO_MANY_MATCHES_FOR_SHAPE\020\372\001\022)\n$TYPE_STO" +
                        "P_TIME_OVERRIDES_CONFLICTING\020\252\002\0225\n0TYPE_" +
                        "STOP_TIME_OVERRIDES_NOT_SAME_PARENT_STAT" +
                        "ION\020\253\002\022&\n!TYPE_STOP_TIME_OVERRIDES_NOT_U" +
                        "SED\020\254\002\0225\n0TYPE_STOP_TIME_OVERRIDES_WITH_" +
                        "UNKNOWN_SERVICE_ID\020\255\002\0228\n3TYPE_STOP_TIME_" +
                        "OVERRIDES_WITH_UNKNOWN_STOP_SEQUENCE\020\256\002\022" +
                        "3\n.TYPE_STOP_TIMES_STOP_HEADSIGN_EQUALS_" +
                        "STOP_NAME\020\204\002\022,\n\'TYPE_STOP_TIMES_INCORREC" +
                        "T_STOP_HEADSIGN\020\276\002\022@\n;TYPE_STOP_TIMES_WI" +
                        "TH_ARRIVAL_BEFORE_PREVIOUS_DEPARTURE_TIM" +
                        "E\020\233\002\0227\n2TYPE_STOP_TIMES_WITH_DEPARTURE_B" +
                        "EFORE_ARRIVAL_TIME\020\223\002\022/\n*TYPE_STOP_TIMES" +
                        "_WITH_LONG_ARRIVAL_INTERVAL\020\376\001\0229\n4TYPE_S" +
                        "TOP_TIMES_WITH_LONG_DEPARTURE_ARRIVAL_IN" +
                        "TERVAL\020\377\001\022B\n=TYPE_STOP_TIMES_WITH_ONLY_A" +
                        "RRIVAL_OR_DEPARTURE_TIME_SPECIFIED\020\221\002\022#\n" +
                        "\036TYPE_STOP_TOO_CLOSE_TO_STATION\020\355\001\022*\n%TY" +
                        "PE_STOP_TOO_FAR_FROM_PARENT_STATION\020\375\001\022!" +
                        "\n\034TYPE_STOP_TOO_FAR_FROM_SHAPE\020\373\001\0225\n0TYP" +
                        "E_STOP_TOO_FAR_FROM_SHAPE_USING_USER_DIS" +
                        "TANCE\020\244\002\022\025\n\020TYPE_STOP_UNUSED\020\356\001\022/\n*TYPE_" +
                        "STOP_WITH_PARENT_STATION_AND_TIMEZONE\020\314\001" +
                        "\022-\n(TYPE_STOP_WITH_SAME_NAME_AND_DESCRIP" +
                        "TION\020\316\001\022\'\n\"TYPE_STOP_NAME_HAS_STOP_CODE_" +
                        "OR_ID\020\277\002\022*\n%TYPE_STOP_NAME_HAS_SPECIAL_C" +
                        "HARACTERS\020\300\002\022.\n)TYPE_STOP_HEADSIGN_HAS_S" +
                        "PECIAL_CHARACTERS\020\302\002\022(\n#TYPE_STOPS_MATCH" +
                        "_SHAPE_OUT_OF_ORDER\020\374\001\022\031\n\024TYPE_STOPS_TOO" +
                        "_CLOSE\020\357\001\022#\n\036TYPE_STOP_NAME_NOT_CAPITALI" +
                        "ZED\020\275\002\022\"\n\035TYPE_PLATFORM_CODE_IS_MISSING\020" +
                        "\314\002\0228\n3TYPE_TOO_MANY_CONSECUTIVE_STOP_TIM" +
                        "ES_WITH_SAME_TIME\020\201\002\022\032\n\025TYPE_TOO_MANY_EN" +
                        "TRIES\020\261\002\022)\n$TYPE_TRANSFER_DISTANCE_IS_VE" +
                        "RY_LARGE\020\332\001\022\034\n\027TYPE_TRANSFER_DUPLICATE\020\202" +
                        "\002\022,\n\'TYPE_TRANSFER_WALKING_SPEED_IS_TOO_" +
                        "FAST\020\333\001\0225\n0TYPE_TRANSFER_MIN_TRANSFER_TI" +
                        "ME_AND_INVALID_TYPE\020\232\002\022/\n*TYPE_TRANSFER_" +
                        "MIN_TRANSFER_TIME_IS_MISSING\020\240\002\0220\n+TYPE_" +
                        "TRANSFER_MIN_TRANSFER_TIME_IS_NEGATIVE\020\330" +
                        "\001\0222\n-TYPE_TRANSFER_MIN_TRANSFER_TIME_IS_" +
                        "VERY_LARGE\020\331\001\022\037\n\032TYPE_TRANSFER_VIA_ENTRA" +
                        "NCE\020\235\002\022.\n)TYPE_TRANSFER_WITH_INVALID_ROU" +
                        "TE_AND_TRIP\020\237\002\022\031\n\024TYPE_TRIP_DUPLICATES\020\224" +
                        "\002\0220\n+TYPE_TRIP_HEADSIGN_CONTAINS_ROUTE_L" +
                        "ONG_NAME\020\226\002\0221\n,TYPE_TRIP_HEADSIGN_CONTAI" +
                        "NS_ROUTE_SHORT_NAME\020\225\002\022\036\n\031TYPE_TRIP_LENG" +
                        "TH_TOO_LONG\020\265\002\022\032\n\025TYPE_TRIP_STARTS_LATE\020" +
                        "\266\002\022\036\n\031TYPE_TRIP_STARTS_TOO_LATE\020\267\002\022/\n*TY" +
                        "PE_TRIP_WITH_NO_TIME_FOR_FIRST_STOP_TIME" +
                        "\020\324\001\022.\n)TYPE_TRIP_WITH_NO_TIME_FOR_LAST_S" +
                        "TOP_TIME\020\325\001\022#\n\036TYPE_TRIP_WITH_NO_USABLE_" +
                        "STOPS\020\213\002\022-\n(TYPE_TRIP_WITH_OUT_OF_ORDER_" +
                        "ARRIVAL_TIME\020\326\001\022/\n*TYPE_TRIP_WITH_OUT_OF" +
                        "_ORDER_DEPARTURE_TIME\020\327\001\0224\n/TYPE_TRIP_WI" +
                        "TH_OUT_OF_ORDER_SHAPE_DIST_TRAVELED\020\370\001\022/" +
                        "\n*TYPE_TRIP_WITH_PARTIAL_SHAPE_DIST_TRAV" +
                        "ELED\020\216\002\0224\n/TYPE_TRIP_WITH_SHAPE_DIST_TRA" +
                        "VELED_BUT_NO_SHAPE\020\217\002\022>\n9TYPE_TRIP_WITH_" +
                        "SHAPE_DIST_TRAVELED_BUT_NO_SHAPE_DISTANC" +
                        "ES\020\220\002\022&\n!TYPE_TRIP_WITH_UNKNOWN_SERVICE_" +
                        "ID\020\214\002\022#\n\036TYPE_TRIP_WITH_DUPLICATE_STOPS\020" +
                        "\270\002\022.\n)TYPE_TRIP_HEADSIGN_HAS_SPECIAL_CHA" +
                        "RACTERS\020\303\002\022\030\n\023TYPE_UNKNOWN_COLUMN\020\222\002\022\026\n\021" +
                        "TYPE_UNKNOWN_FILE\020\203\002\022\033\n\026TYPE_ARCHIVE_COR" +
                        "RUPTED\020\262\002\022\030\n\023TYPE_DUPLICATE_FEED\020\263\002\022\025\n\020T" +
                        "YPE_EMPTY_STOPS\020\264\002\022+\n&TYPE_INCONSISTENT_" +
                        "EXACT_TIMES_FOR_TRIP\020\304\002\022(\n\037TYPE_PATHWAY_" +
                        "MISSING_PATHWAY_ID\020\305\002\032\002\010\001\022$\n\037TYPE_PATHWA" +
                        "Y_MISSING_RECIPROCAL\020\306\002\022#\n\036TYPE_PATHWAY_" +
                        "DANGLING_LOCATION\020\307\002\022,\n\'TYPE_PATHWAY_PLA" +
                        "TFORM_WITHOUT_ENTRANCES\020\310\002\022)\n$TYPE_PATHW" +
                        "AY_WRONG_PLATFORM_ENDPOINT\020\311\002\022 \n\033TYPE_PA" +
                        "THWAY_MISSING_COLUMN\020\312\002\022\037\n\032TYPE_PATHWAY_" +
                        "MISSING_VALUE\020\313\002\022$\n\037TYPE_ATTRIBUTION_MIS" +
                        "SING_COLUMN\020\316\002\022\"\n\035TYPE_ATTRIBUTION_MISSI" +
                        "NG_ROLE\020\317\002\"\006\010\367\001\020\367\001\"\006\010\227\002\020\227\002\"\006\010\260\002\020\260\002\":\n\010Se" +
                        "verity\022\013\n\007WARNING\020\001\022\t\n\005ERROR\020\002\022\026\n\022SUSPIC" +
                        "IOUS_WARNING\020\003BJ\n-org.mobilitydata.gtfsv" +
                        "alidator.adapter.protosB\031GtfsValidationO" +
                        "utputProto"
        };
        descriptor = com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        });
        internal_static_outputProto_PointProto_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_outputProto_PointProto_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_outputProto_PointProto_descriptor,
                new java.lang.String[]{"LatE7", "LngE7",});
        internal_static_outputProto_GtfsProblem_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_outputProto_GtfsProblem_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
                internal_static_outputProto_GtfsProblem_descriptor,
                new java.lang.String[]{"Type", "Severity", "CsvFileName", "CsvKeyName", "CsvColumnName", "OtherCsvFileName", "OtherCsvKeyName", "OtherCsvColumnName", "EntityRow", "EntityName", "EntityId", "EntityValue", "EntityLocation", "AltEntityRow", "AltEntityName", "AltEntityId", "AltEntityValue", "AltEntityLocation", "ParentEntityRow", "ParentEntityName", "ParentEntityId", "Value", "AltValue", "Importance",});
    }

    // @@protoc_insertion_point(outer_class_scope)
}
