name: Rule acceptance tests

on:
  push:
    branches: [ master, ci/use-github-matrix ]
    paths-ignore:
      - '**.md'
jobs:
  pack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Prepare version name
        id: prep
        run: |
          VERSION_TAG=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION_TAG=${GITHUB_REF#refs/tags/}
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
            VERSION_TAG=-$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          elif [[ $GITHUB_REF == refs/pull/* ]]; then
            VERSION_TAG=-pr-${{ github.event.number }}
          fi
          if [ ${VERSION_TAG} != ${GITHUB_REF#refs/tags/} ]; then
            VERSION_TAG=v${VERSION_TAG}-sha-${GITHUB_SHA::8}-SNAPSHOT
          fi
          echo ::set-output name=versionTag::${VERSION_TAG}
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Package cli app jar with Gradle
        uses: eskatos/gradle-command-action@v1
        env:
          versionTag: ${{ steps.prep.outputs.versionTag }}
        with:
          arguments: shadowJar
      - name: Persist gtfs-validator snapshot jar
        uses: actions/upload-artifact@v2
        with:
          name: gtfs-validator-snapshot
          path: main/build/libs/gtfs-validator-${{ steps.prep.outputs.versionTag }}_cli.jar
  fetch-urls:
    runs-on: ubuntu-latest
    steps:
      - name: Set URL matrix
        id: set-matrix
        run: |
          DATASETS=$(curl https://gtfs-validator2.free.beeceptor.com/test)
          echo $DATASETS
          echo "::set-output name=matrix::$DATASETS"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
  get-latest-changes-report:
    needs: [ fetch-urls, pack ]
    runs-on: ubuntu-latest
    continue-on-error: true
    strategy:
      matrix: ${{ fromJson(needs.fetch-urls.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v1
      - name: Download latest changes .jar file from previous job
        uses: actions/download-artifact@v2
        with:
          name: gtfs-validator-snapshot
      - name: display matrix data
        run: |
          array_string="${{ matrix.data }}"
          bash run.sh $array_string
      - name: Persist reports
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: reports_all
          path: output
