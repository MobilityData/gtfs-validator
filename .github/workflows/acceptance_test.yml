name: Rule acceptance tests

on:
  pull_request:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - 'Dockerfile'
      - '.gitignore'
      - 'LICENSE'
      - 'docker.yml'
      - 'formatting.yml'
      - 'test_pack_dock.yml'
      - 'triage.yml'
      - 'end_to_end.yml'
      - 'web/**'
concurrency:
  group: ${{ github.head_ref }}
  cancel-in-progress: true
jobs:
  pre_ci:
    name: Prepare CI environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Project
        uses: actions/checkout@v3
        with:
          # We need to fetch with a depth of 2 for pull_request so we can do HEAD^2
          fetch-depth: 2

        # If this workflow was triggered by a pull request (open or synchronize!) then resolve the commit message from HEAD^2
        # It is stored in output steps, to be referenced with ${{ steps.pr_get_commit_message.outputs.pr_commit_message }}
      - name: "[Pull Request] Get commit message"
        if: github.event_name == 'pull_request'
        id: pr_get_commit_message
        run: echo "pr_commit_message=\"$(git log --format=%B -n 1 HEAD^2)\"" >> $GITHUB_OUTPUT

    # For **Pull Request** events this will resolve to something like "$( [ -z "commit message pr" ] && echo "" || echo "commit message pr" )" which then resolves to just "commit message pr"
    outputs:
      commit_message: $( [ -z "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" ] || echo "${{ steps.pr_get_commit_message.outputs.pr_commit_message }}" )
  not-present:
    if: "!contains(needs.pre_ci.outputs.commit_message, '[acceptance test skip]')"
    needs: pre_ci
    runs-on: ubuntu-latest
    steps:
      - name: Allo
        id: allo
        run: |
          echo "Stirng not present!"

  present:
    if: "contains(needs.pre_ci.outputs.commit_message, '[acceptance test skip]')"
    needs:  not-present
    steps:
      - name: Allo2
        id: allo2
        run: |
          echo "String present!"
