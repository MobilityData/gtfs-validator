name: Test Package Document

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [ prereleased, released ]

jobs:
  validate_gradle_wrapper:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: gradle/wrapper-validation-action@v1
  test:
    needs: [ validate_gradle_wrapper ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java_version: [ 11, 17 ]
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Run tests on Java ${{ matrix.java_version }} and ${{ matrix.os }}
        uses: gradle/gradle-build-action@v2
        with:
          # We run test aggregation with --continue to make sure all tests run, even if some fail.
          arguments: testAggregateTestReport --continue
      - name: Persist aggregated test reports on failure - Java ${{ matrix.java_version }} on ${{ matrix.os }}
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: Test report - Java ${{ matrix.java_version }} on ${{ matrix.os }}
          path: build/reports/tests/unit-test/aggregated-results/

  package:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java_version: [ 11, 17 ]
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Package cli app jar with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: shadowJar
      - name: Persist cli app jar
        uses: actions/upload-artifact@v3
        with:
          name: Application - CLI executable - Java ${{ matrix.java_version }} JAR file -- ${{ matrix.os }}
          path: cli/build/libs/gtfs-validator-*-cli.jar
  doc:
    needs: [test]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java_version: [ 11, 17 ]
        os: [ ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'temurin'
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build Javadoc
        uses: gradle/gradle-build-action@v2
        with:
          arguments: aggregateJavadoc
      - name: Persist javadoc
        uses: actions/upload-artifact@v3
        with:
          name: Documentation - javadoc - Java ${{ matrix.java_version }} - ${{ matrix.java_version }}
          path: build/docs/javadoc/
