/*
 * Copyright (c) 2020. MobilityData IO.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * A note about publishing and signing.
 * Maven central requires that artifacts be signed. And upload is done to Sonatype.
 * To publish you will need these environment variables defined:
 *       SONATYPE_USERNAME
 *       SONATYPE_PASSWORD
 *       MAVEN_GPG_PRIVATE_KEY
 *       MAVEN_GPG_PASSPHRASE
 * Suggestion is to put these in a shell script with restricted read permissions, then source it before calling
 * ./gradlew publish.
 */
plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'test-report-aggregation'
    id 'com.github.sherter.google-java-format' version '0.9'
    id "io.freefair.aggregate-javadoc" version "6.4.3"
    id "pl.allegro.tech.build.axion-release" version "1.13.6"
}

// Setup and configure properties that are consistent across all projects, including sub-modules.
allprojects {
    group 'org.mobilitydata.gtfs-validator'

    // Per the axion-release plugin, this computes the project version based
    // on the most recent tag in the repo.
    version scmVersion.version

    repositories {
        mavenCentral()
    }

    tasks.withType(JavaCompile) {
        // All Java projects should target the same compatibility version.
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11

        // Our source files should be encoded in UTF-8, regardless of the platform (e.g. Windows).
        compileJava.options.encoding = "UTF-8"
        compileTestJava.options.encoding = "UTF-8"
    }

    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
    }

    // All projects that include the 'java` plugin will have a Test task by default.
    tasks.withType(Test) {
        // Always run tests, even when nothing changed.
        dependsOn 'cleanTest'

        // Show test results.
        testLogging {
            events "passed", "skipped", "failed"
        }

        // Define a system project for the project version
        systemProperty 'gtfsValidatorVersionForTest', project.version

        // Any project with a test should be added to test report aggregation in the root project.
        rootProject.dependencies.add('testReportAggregation', project)
    }
}

subprojects {
    apply plugin: 'java'

    // Cannot publish a SNAPSHOT. The provided sonatype url will not accept it.
    tasks.withType(PublishToMavenRepository).all { task ->
        task.onlyIf {
            if (project.version.toString().contains('SNAPSHOT')) {
                throw new GradleException("Publishing is not allowed for SNAPSHOT versions. Currently " + project.version)
            }
            true
        }
    }

    task javadocJar(type: Jar) {
        archiveClassifier.set('javadoc')
        from javadoc
    }

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from sourceSets.main.allSource
    }

    // These modules require the same publishing configuration, apart from the name of the module
    // Also we want to limit artefact publishing to these modules.
    if (project.name == 'main' ||
            project.name == 'core' ||
            project.name == 'model') {
        def fullProjectName = 'gtfs-validator-' + project.name

        afterEvaluate {
            publishing {
                repositories {
                    // This is the sonatype staging repo for maven.
                    // Once uploaded, the repo needs to be manually closed, which will trigger acceptance tests for
                    // maven central (but not transfer yet).
                    // Once successfully closed, the repo is available for testing.
                    // After testing, it can be manually promoted on the sonatype site, which will then publish to maven central.
                    maven {
                        url = 'https://s01.oss.sonatype.org/service/local/staging/deploy/maven2'
                        credentials {
                            username System.getenv("SONATYPE_USERNAME")
                            password System.getenv("SONATYPE_PASSWORD")
                        }
                    }
                }

                publications {
                    mavenJava(MavenPublication) {
                        from components.java
                        artifactId = fullProjectName

                        artifact sourcesJar
                        artifact javadocJar

                        // Definition of the pom that will be included with the uploaded artifacts.
                        pom {
                            name = fullProjectName
                            description = 'The ' + project.name + " artifacts from the gtfs validator"
                            url = 'https://github.com/MobilityData/gtfs-validator'
                            licenses {
                                license {
                                    name = 'The Apache License, Version 2.0'
                                    url = 'https://github.com/MobilityData/gtfs-validator/blob/master/LICENSE'
                                }
                            }
                            developers {
                                developer {
                                    id = 'dev'
                                    name = 'Dev group'
                                    email = 'it@mobilitydata.org'
                                }
                            }
                            scm {
                                connection = 'scm:git:git://github.com/MobilityData/gtfs-validator.git'
                                developerConnection = 'scm:git:ssh://github.com/MobilityData/gtfs-validator.git'
                                url = 'https://github.com/MobilityData/gtfs-validator'
                            }
                        }
                    }
                }
            }
            signing {
                useInMemoryPgpKeys(System.getenv('MAVEN_GPG_PRIVATE_KEY'), System.getenv('MAVEN_GPG_PASSPHRASE'))
                sign publishing.publications.mavenJava
            }
        }

    }
    compileJava {
        options.compilerArgs << '-parameters'
    }

    compileTestJava {
        options.compilerArgs << '-parameters'
    }

}

reporting {
    reports {
        // Necessary for unit test result aggregation.
        testAggregateTestReport(AggregateTestReport) {
            testType = TestSuiteType.UNIT_TEST
        }
    }
}

task copyRulesToWebClient (type: Copy) {
    from "./RULES.md"
    into "./web/client/static"
}

build.dependsOn copyRulesToWebClient
